2023-06-14 02:53:47,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 02:53:47,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 02:53:47,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 02:53:47,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 02:53:52,168:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 02:53:53,437:INFO:PyCaret ClassificationExperiment
2023-06-14 02:53:53,437:INFO:Logging name: clf-default-name
2023-06-14 02:53:53,437:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 02:53:53,438:INFO:version 3.0.2
2023-06-14 02:53:53,438:INFO:Initializing setup()
2023-06-14 02:53:53,438:INFO:self.USI: 3694
2023-06-14 02:53:53,438:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 02:53:53,438:INFO:Checking environment
2023-06-14 02:53:53,439:INFO:python_version: 3.10.5
2023-06-14 02:53:53,439:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 02:53:53,439:INFO:machine: AMD64
2023-06-14 02:53:53,439:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 02:53:53,444:INFO:Memory: svmem(total=17130000384, available=8641691648, percent=49.6, used=8488308736, free=8641691648)
2023-06-14 02:53:53,444:INFO:Physical Core: 4
2023-06-14 02:53:53,445:INFO:Logical Core: 4
2023-06-14 02:53:53,445:INFO:Checking libraries
2023-06-14 02:53:53,445:INFO:System:
2023-06-14 02:53:53,445:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 02:53:53,445:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 02:53:53,445:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 02:53:53,445:INFO:PyCaret required dependencies:
2023-06-14 02:53:53,446:INFO:                 pip: 23.0.1
2023-06-14 02:53:53,446:INFO:          setuptools: 58.1.0
2023-06-14 02:53:53,447:INFO:             pycaret: 3.0.2
2023-06-14 02:53:53,447:INFO:             IPython: 8.9.0
2023-06-14 02:53:53,448:INFO:          ipywidgets: 8.0.6
2023-06-14 02:53:53,448:INFO:                tqdm: 4.65.0
2023-06-14 02:53:53,448:INFO:               numpy: 1.23.5
2023-06-14 02:53:53,449:INFO:              pandas: 1.5.3
2023-06-14 02:53:53,449:INFO:              jinja2: 3.1.2
2023-06-14 02:53:53,449:INFO:               scipy: 1.10.1
2023-06-14 02:53:53,449:INFO:              joblib: 1.2.0
2023-06-14 02:53:53,449:INFO:             sklearn: 1.2.2
2023-06-14 02:53:53,450:INFO:                pyod: 1.0.9
2023-06-14 02:53:53,450:INFO:            imblearn: 0.10.1
2023-06-14 02:53:53,450:INFO:   category_encoders: 2.6.1
2023-06-14 02:53:53,450:INFO:            lightgbm: 3.3.5
2023-06-14 02:53:53,450:INFO:               numba: 0.57.0
2023-06-14 02:53:53,450:INFO:            requests: 2.28.2
2023-06-14 02:53:53,451:INFO:          matplotlib: 3.7.1
2023-06-14 02:53:53,451:INFO:          scikitplot: 0.3.7
2023-06-14 02:53:53,451:INFO:         yellowbrick: 1.5
2023-06-14 02:53:53,451:INFO:              plotly: 5.15.0
2023-06-14 02:53:53,451:INFO:             kaleido: 0.2.1
2023-06-14 02:53:53,452:INFO:         statsmodels: 0.14.0
2023-06-14 02:53:53,452:INFO:              sktime: 0.17.0
2023-06-14 02:53:53,452:INFO:               tbats: 1.1.3
2023-06-14 02:53:53,452:INFO:            pmdarima: 2.0.3
2023-06-14 02:53:53,452:INFO:              psutil: 5.9.4
2023-06-14 02:53:53,452:INFO:PyCaret optional dependencies:
2023-06-14 02:53:53,494:INFO:                shap: Not installed
2023-06-14 02:53:53,494:INFO:           interpret: Not installed
2023-06-14 02:53:53,494:INFO:                umap: Not installed
2023-06-14 02:53:53,494:INFO:    pandas_profiling: Not installed
2023-06-14 02:53:53,494:INFO:  explainerdashboard: Not installed
2023-06-14 02:53:53,494:INFO:             autoviz: Not installed
2023-06-14 02:53:53,495:INFO:           fairlearn: Not installed
2023-06-14 02:53:53,495:INFO:             xgboost: 1.7.5
2023-06-14 02:53:53,495:INFO:            catboost: Not installed
2023-06-14 02:53:53,495:INFO:              kmodes: Not installed
2023-06-14 02:53:53,495:INFO:             mlxtend: Not installed
2023-06-14 02:53:53,495:INFO:       statsforecast: Not installed
2023-06-14 02:53:53,495:INFO:        tune_sklearn: Not installed
2023-06-14 02:53:53,495:INFO:                 ray: Not installed
2023-06-14 02:53:53,495:INFO:            hyperopt: Not installed
2023-06-14 02:53:53,495:INFO:              optuna: Not installed
2023-06-14 02:53:53,495:INFO:               skopt: Not installed
2023-06-14 02:53:53,495:INFO:              mlflow: Not installed
2023-06-14 02:53:53,495:INFO:              gradio: Not installed
2023-06-14 02:53:53,495:INFO:             fastapi: Not installed
2023-06-14 02:53:53,495:INFO:             uvicorn: Not installed
2023-06-14 02:53:53,495:INFO:              m2cgen: Not installed
2023-06-14 02:53:53,495:INFO:           evidently: Not installed
2023-06-14 02:53:53,495:INFO:               fugue: Not installed
2023-06-14 02:53:53,496:INFO:           streamlit: Not installed
2023-06-14 02:53:53,496:INFO:             prophet: Not installed
2023-06-14 02:53:53,496:INFO:None
2023-06-14 02:53:53,496:INFO:Set up data.
2023-06-14 02:53:53,505:INFO:Set up train/test split.
2023-06-14 02:53:53,521:INFO:Set up index.
2023-06-14 02:53:53,521:INFO:Set up folding strategy.
2023-06-14 02:53:53,522:INFO:Assigning column types.
2023-06-14 02:53:53,525:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 02:53:53,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 02:53:53,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 02:53:53,677:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 02:53:54,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 02:53:54,361:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,365:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 02:53:54,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 02:53:54,445:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 02:53:54,523:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,526:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 02:53:54,601:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,674:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:54,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:54,682:INFO:Preparing preprocessing pipeline...
2023-06-14 02:53:54,696:INFO:Set up label encoding.
2023-06-14 02:53:54,697:INFO:Set up simple imputation.
2023-06-14 02:53:54,699:INFO:Set up encoding of categorical features.
2023-06-14 02:53:54,700:INFO:Set up column name cleaning.
2023-06-14 02:53:54,823:INFO:Finished creating preprocessing pipeline.
2023-06-14 02:53:54,841:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'Change', 'Code', 'MA_5',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI', 'STD'...
                 TransformerWrapper(exclude=None, include=['Name'],
                                    transformer=OneHotEncoder(cols=['Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 02:53:54,841:INFO:Creating final display dataframe.
2023-06-14 02:53:55,124:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          1484
1                        Target                    day5_label
2                   Target type                    Multiclass
3                Target mapping  buy: 0, maintain: 1, sell: 2
4           Original data shape                    (1320, 18)
5        Transformed data shape                    (1320, 18)
6   Transformed train set shape                     (923, 18)
7    Transformed test set shape                     (397, 18)
8              Numeric features                            16
9          Categorical features                             1
10                   Preprocess                          True
11              Imputation type                        simple
12           Numeric imputation                          mean
13       Categorical imputation                          mode
14     Maximum one-hot encoding                            25
15              Encoding method                          None
16               Fold Generator               StratifiedKFold
17                  Fold Number                            10
18                     CPU Jobs                            -1
19                      Use GPU                         False
20               Log Experiment                         False
21              Experiment Name              clf-default-name
22                          USI                          3694
2023-06-14 02:53:55,212:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:55,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:55,289:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 02:53:55,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 02:53:55,293:INFO:setup() successfully completed in 1.86s...............
2023-06-14 02:54:27,851:INFO:Initializing compare_models()
2023-06-14 02:54:27,851:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-14 02:54:27,851:INFO:Checking exceptions
2023-06-14 02:54:27,856:INFO:Preparing display monitor
2023-06-14 02:54:27,886:INFO:Initializing Logistic Regression
2023-06-14 02:54:27,887:INFO:Total runtime is 1.662572224934896e-05 minutes
2023-06-14 02:54:27,891:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:27,891:INFO:Initializing create_model()
2023-06-14 02:54:27,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:27,891:INFO:Checking exceptions
2023-06-14 02:54:27,892:INFO:Importing libraries
2023-06-14 02:54:27,892:INFO:Copying training dataset
2023-06-14 02:54:27,898:INFO:Defining folds
2023-06-14 02:54:27,898:INFO:Declaring metric variables
2023-06-14 02:54:27,901:INFO:Importing untrained model
2023-06-14 02:54:27,905:INFO:Logistic Regression Imported successfully
2023-06-14 02:54:27,915:INFO:Starting cross validation
2023-06-14 02:54:27,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:32,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 02:54:32,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,808:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,808:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,878:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,881:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,883:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,921:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:32,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,269:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 02:54:33,283:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 02:54:33,351:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 02:54:33,380:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 02:54:33,399:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,428:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,489:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,491:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,554:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,556:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,558:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,801:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,921:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,923:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:33,929:INFO:Calculating mean and std
2023-06-14 02:54:33,930:INFO:Creating metrics dataframe
2023-06-14 02:54:33,950:INFO:Uploading results into container
2023-06-14 02:54:33,951:INFO:Uploading model into container now
2023-06-14 02:54:33,951:INFO:_master_model_container: 1
2023-06-14 02:54:33,951:INFO:_display_container: 2
2023-06-14 02:54:33,951:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-14 02:54:33,951:INFO:create_model() successfully completed......................................
2023-06-14 02:54:34,053:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:34,053:INFO:Creating metrics dataframe
2023-06-14 02:54:34,062:INFO:Initializing K Neighbors Classifier
2023-06-14 02:54:34,062:INFO:Total runtime is 0.1029246687889099 minutes
2023-06-14 02:54:34,066:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:34,066:INFO:Initializing create_model()
2023-06-14 02:54:34,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:34,066:INFO:Checking exceptions
2023-06-14 02:54:34,066:INFO:Importing libraries
2023-06-14 02:54:34,066:INFO:Copying training dataset
2023-06-14 02:54:34,070:INFO:Defining folds
2023-06-14 02:54:34,071:INFO:Declaring metric variables
2023-06-14 02:54:34,076:INFO:Importing untrained model
2023-06-14 02:54:34,081:INFO:K Neighbors Classifier Imported successfully
2023-06-14 02:54:34,088:INFO:Starting cross validation
2023-06-14 02:54:34,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:34,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,538:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,540:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:34,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,549:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:34,550:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,593:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,833:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,864:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,871:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,873:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,878:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,880:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,882:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,886:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:34,890:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,095:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,099:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,128:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,131:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,133:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,137:INFO:Calculating mean and std
2023-06-14 02:54:35,138:INFO:Creating metrics dataframe
2023-06-14 02:54:35,158:INFO:Uploading results into container
2023-06-14 02:54:35,159:INFO:Uploading model into container now
2023-06-14 02:54:35,159:INFO:_master_model_container: 2
2023-06-14 02:54:35,159:INFO:_display_container: 2
2023-06-14 02:54:35,159:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-14 02:54:35,159:INFO:create_model() successfully completed......................................
2023-06-14 02:54:35,257:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:35,257:INFO:Creating metrics dataframe
2023-06-14 02:54:35,267:INFO:Initializing Naive Bayes
2023-06-14 02:54:35,267:INFO:Total runtime is 0.12301094929377238 minutes
2023-06-14 02:54:35,271:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:35,271:INFO:Initializing create_model()
2023-06-14 02:54:35,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:35,272:INFO:Checking exceptions
2023-06-14 02:54:35,272:INFO:Importing libraries
2023-06-14 02:54:35,272:INFO:Copying training dataset
2023-06-14 02:54:35,276:INFO:Defining folds
2023-06-14 02:54:35,276:INFO:Declaring metric variables
2023-06-14 02:54:35,281:INFO:Importing untrained model
2023-06-14 02:54:35,286:INFO:Naive Bayes Imported successfully
2023-06-14 02:54:35,294:INFO:Starting cross validation
2023-06-14 02:54:35,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:35,615:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,615:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,615:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:35,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,653:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,666:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,668:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,926:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,930:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:35,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,947:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,949:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,950:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,950:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:35,951:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,952:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:35,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,168:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,170:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,196:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,200:INFO:Calculating mean and std
2023-06-14 02:54:36,202:INFO:Creating metrics dataframe
2023-06-14 02:54:36,221:INFO:Uploading results into container
2023-06-14 02:54:36,222:INFO:Uploading model into container now
2023-06-14 02:54:36,222:INFO:_master_model_container: 3
2023-06-14 02:54:36,222:INFO:_display_container: 2
2023-06-14 02:54:36,222:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-14 02:54:36,222:INFO:create_model() successfully completed......................................
2023-06-14 02:54:36,319:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:36,319:INFO:Creating metrics dataframe
2023-06-14 02:54:36,328:INFO:Initializing Decision Tree Classifier
2023-06-14 02:54:36,329:INFO:Total runtime is 0.14071348110834758 minutes
2023-06-14 02:54:36,332:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:36,332:INFO:Initializing create_model()
2023-06-14 02:54:36,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:36,332:INFO:Checking exceptions
2023-06-14 02:54:36,333:INFO:Importing libraries
2023-06-14 02:54:36,333:INFO:Copying training dataset
2023-06-14 02:54:36,338:INFO:Defining folds
2023-06-14 02:54:36,338:INFO:Declaring metric variables
2023-06-14 02:54:36,343:INFO:Importing untrained model
2023-06-14 02:54:36,348:INFO:Decision Tree Classifier Imported successfully
2023-06-14 02:54:36,356:INFO:Starting cross validation
2023-06-14 02:54:36,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:36,631:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,634:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,636:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,637:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,639:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,640:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,641:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,645:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,662:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,664:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,926:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,933:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,935:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,937:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,937:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,946:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:36,948:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,171:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,173:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,175:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,189:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,191:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,196:INFO:Calculating mean and std
2023-06-14 02:54:37,197:INFO:Creating metrics dataframe
2023-06-14 02:54:37,218:INFO:Uploading results into container
2023-06-14 02:54:37,219:INFO:Uploading model into container now
2023-06-14 02:54:37,219:INFO:_master_model_container: 4
2023-06-14 02:54:37,219:INFO:_display_container: 2
2023-06-14 02:54:37,219:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 02:54:37,220:INFO:create_model() successfully completed......................................
2023-06-14 02:54:37,318:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:37,318:INFO:Creating metrics dataframe
2023-06-14 02:54:37,328:INFO:Initializing SVM - Linear Kernel
2023-06-14 02:54:37,329:INFO:Total runtime is 0.1573832154273987 minutes
2023-06-14 02:54:37,332:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:37,333:INFO:Initializing create_model()
2023-06-14 02:54:37,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:37,333:INFO:Checking exceptions
2023-06-14 02:54:37,333:INFO:Importing libraries
2023-06-14 02:54:37,333:INFO:Copying training dataset
2023-06-14 02:54:37,338:INFO:Defining folds
2023-06-14 02:54:37,338:INFO:Declaring metric variables
2023-06-14 02:54:37,343:INFO:Importing untrained model
2023-06-14 02:54:37,348:INFO:SVM - Linear Kernel Imported successfully
2023-06-14 02:54:37,356:INFO:Starting cross validation
2023-06-14 02:54:37,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:37,707:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,707:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,708:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,710:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,711:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,712:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,712:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,959:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,961:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,964:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,965:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,966:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,970:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,973:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,974:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,976:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,978:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,979:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,980:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:37,981:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,983:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:37,986:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:37,988:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,000:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,003:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,181:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:38,182:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,185:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 02:54:38,187:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,189:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,190:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,203:INFO:Calculating mean and std
2023-06-14 02:54:38,205:INFO:Creating metrics dataframe
2023-06-14 02:54:38,225:INFO:Uploading results into container
2023-06-14 02:54:38,225:INFO:Uploading model into container now
2023-06-14 02:54:38,225:INFO:_master_model_container: 5
2023-06-14 02:54:38,226:INFO:_display_container: 2
2023-06-14 02:54:38,226:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1484, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-14 02:54:38,226:INFO:create_model() successfully completed......................................
2023-06-14 02:54:38,321:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:38,321:INFO:Creating metrics dataframe
2023-06-14 02:54:38,332:INFO:Initializing Ridge Classifier
2023-06-14 02:54:38,333:INFO:Total runtime is 0.1741166392962138 minutes
2023-06-14 02:54:38,337:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:38,337:INFO:Initializing create_model()
2023-06-14 02:54:38,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:38,337:INFO:Checking exceptions
2023-06-14 02:54:38,337:INFO:Importing libraries
2023-06-14 02:54:38,338:INFO:Copying training dataset
2023-06-14 02:54:38,342:INFO:Defining folds
2023-06-14 02:54:38,342:INFO:Declaring metric variables
2023-06-14 02:54:38,346:INFO:Importing untrained model
2023-06-14 02:54:38,351:INFO:Ridge Classifier Imported successfully
2023-06-14 02:54:38,359:INFO:Starting cross validation
2023-06-14 02:54:38,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:38,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.18569e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.19537e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,648:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,648:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,649:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,652:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,653:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,653:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,653:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20319e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.17651e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20311e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,856:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.19981e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:38,887:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,888:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,890:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,891:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,892:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,892:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,893:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,894:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,896:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,896:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,898:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,899:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:38,902:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:54:38,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:38,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,054:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.24003e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:39,057:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.33952e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 02:54:39,100:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:39,101:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,103:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 02:54:39,103:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,104:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,105:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,106:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,108:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:39,124:INFO:Calculating mean and std
2023-06-14 02:54:39,126:INFO:Creating metrics dataframe
2023-06-14 02:54:39,146:INFO:Uploading results into container
2023-06-14 02:54:39,147:INFO:Uploading model into container now
2023-06-14 02:54:39,147:INFO:_master_model_container: 6
2023-06-14 02:54:39,147:INFO:_display_container: 2
2023-06-14 02:54:39,147:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1484, solver='auto',
                tol=0.0001)
2023-06-14 02:54:39,148:INFO:create_model() successfully completed......................................
2023-06-14 02:54:39,243:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:39,243:INFO:Creating metrics dataframe
2023-06-14 02:54:39,253:INFO:Initializing Random Forest Classifier
2023-06-14 02:54:39,253:INFO:Total runtime is 0.1894539515177409 minutes
2023-06-14 02:54:39,257:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:39,257:INFO:Initializing create_model()
2023-06-14 02:54:39,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:39,258:INFO:Checking exceptions
2023-06-14 02:54:39,258:INFO:Importing libraries
2023-06-14 02:54:39,258:INFO:Copying training dataset
2023-06-14 02:54:39,264:INFO:Defining folds
2023-06-14 02:54:39,264:INFO:Declaring metric variables
2023-06-14 02:54:39,269:INFO:Importing untrained model
2023-06-14 02:54:39,273:INFO:Random Forest Classifier Imported successfully
2023-06-14 02:54:39,283:INFO:Starting cross validation
2023-06-14 02:54:39,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:40,117:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,119:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,121:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,123:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,125:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,163:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,167:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,273:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,275:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:40,277:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,017:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,021:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,079:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,081:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,130:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,132:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,134:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,197:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,740:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,742:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,775:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,780:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:41,789:INFO:Calculating mean and std
2023-06-14 02:54:41,790:INFO:Creating metrics dataframe
2023-06-14 02:54:41,822:INFO:Uploading results into container
2023-06-14 02:54:41,823:INFO:Uploading model into container now
2023-06-14 02:54:41,823:INFO:_master_model_container: 7
2023-06-14 02:54:41,823:INFO:_display_container: 2
2023-06-14 02:54:41,824:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1484, verbose=0, warm_start=False)
2023-06-14 02:54:41,824:INFO:create_model() successfully completed......................................
2023-06-14 02:54:41,920:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:41,920:INFO:Creating metrics dataframe
2023-06-14 02:54:41,931:INFO:Initializing Quadratic Discriminant Analysis
2023-06-14 02:54:41,931:INFO:Total runtime is 0.23407371044158937 minutes
2023-06-14 02:54:41,934:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:41,935:INFO:Initializing create_model()
2023-06-14 02:54:41,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:41,935:INFO:Checking exceptions
2023-06-14 02:54:41,935:INFO:Importing libraries
2023-06-14 02:54:41,935:INFO:Copying training dataset
2023-06-14 02:54:41,940:INFO:Defining folds
2023-06-14 02:54:41,940:INFO:Declaring metric variables
2023-06-14 02:54:41,945:INFO:Importing untrained model
2023-06-14 02:54:41,954:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-14 02:54:41,967:INFO:Starting cross validation
2023-06-14 02:54:41,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:42,164:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,164:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,276:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,281:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,281:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,284:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,290:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,292:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,332:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,334:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,336:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,479:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,491:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,505:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,519:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,576:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,604:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,607:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,624:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,649:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,792:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 02:54:42,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,850:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,880:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,882:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:42,887:INFO:Calculating mean and std
2023-06-14 02:54:42,888:INFO:Creating metrics dataframe
2023-06-14 02:54:42,921:INFO:Uploading results into container
2023-06-14 02:54:42,922:INFO:Uploading model into container now
2023-06-14 02:54:42,922:INFO:_master_model_container: 8
2023-06-14 02:54:42,922:INFO:_display_container: 2
2023-06-14 02:54:42,923:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-14 02:54:42,923:INFO:create_model() successfully completed......................................
2023-06-14 02:54:43,023:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:43,023:INFO:Creating metrics dataframe
2023-06-14 02:54:43,034:INFO:Initializing Ada Boost Classifier
2023-06-14 02:54:43,034:INFO:Total runtime is 0.25246554215749106 minutes
2023-06-14 02:54:43,051:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:43,051:INFO:Initializing create_model()
2023-06-14 02:54:43,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:43,051:INFO:Checking exceptions
2023-06-14 02:54:43,051:INFO:Importing libraries
2023-06-14 02:54:43,051:INFO:Copying training dataset
2023-06-14 02:54:43,057:INFO:Defining folds
2023-06-14 02:54:43,057:INFO:Declaring metric variables
2023-06-14 02:54:43,062:INFO:Importing untrained model
2023-06-14 02:54:43,065:INFO:Ada Boost Classifier Imported successfully
2023-06-14 02:54:43,074:INFO:Starting cross validation
2023-06-14 02:54:43,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:43,682:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,684:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,684:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,688:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,688:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,690:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:43,732:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,318:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,320:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,349:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,351:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,353:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,357:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,362:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,399:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,401:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,403:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,921:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:44,949:INFO:Calculating mean and std
2023-06-14 02:54:44,950:INFO:Creating metrics dataframe
2023-06-14 02:54:44,995:INFO:Uploading results into container
2023-06-14 02:54:44,996:INFO:Uploading model into container now
2023-06-14 02:54:44,996:INFO:_master_model_container: 9
2023-06-14 02:54:44,996:INFO:_display_container: 2
2023-06-14 02:54:44,996:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1484)
2023-06-14 02:54:44,996:INFO:create_model() successfully completed......................................
2023-06-14 02:54:45,092:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:45,092:INFO:Creating metrics dataframe
2023-06-14 02:54:45,104:INFO:Initializing Gradient Boosting Classifier
2023-06-14 02:54:45,104:INFO:Total runtime is 0.28695655266443887 minutes
2023-06-14 02:54:45,108:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:45,109:INFO:Initializing create_model()
2023-06-14 02:54:45,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:45,109:INFO:Checking exceptions
2023-06-14 02:54:45,109:INFO:Importing libraries
2023-06-14 02:54:45,109:INFO:Copying training dataset
2023-06-14 02:54:45,115:INFO:Defining folds
2023-06-14 02:54:45,115:INFO:Declaring metric variables
2023-06-14 02:54:45,118:INFO:Importing untrained model
2023-06-14 02:54:45,123:INFO:Gradient Boosting Classifier Imported successfully
2023-06-14 02:54:45,133:INFO:Starting cross validation
2023-06-14 02:54:45,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:47,084:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,086:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,114:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,116:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,152:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,154:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,159:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,169:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:47,182:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,091:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,169:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,172:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,181:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,218:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:49,238:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:50,985:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:50,987:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:50,989:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,011:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,013:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,040:INFO:Calculating mean and std
2023-06-14 02:54:51,042:INFO:Creating metrics dataframe
2023-06-14 02:54:51,099:INFO:Uploading results into container
2023-06-14 02:54:51,100:INFO:Uploading model into container now
2023-06-14 02:54:51,100:INFO:_master_model_container: 10
2023-06-14 02:54:51,100:INFO:_display_container: 2
2023-06-14 02:54:51,101:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1484, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-14 02:54:51,101:INFO:create_model() successfully completed......................................
2023-06-14 02:54:51,197:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:51,197:INFO:Creating metrics dataframe
2023-06-14 02:54:51,208:INFO:Initializing Linear Discriminant Analysis
2023-06-14 02:54:51,208:INFO:Total runtime is 0.38870066006978354 minutes
2023-06-14 02:54:51,213:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:51,213:INFO:Initializing create_model()
2023-06-14 02:54:51,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:51,213:INFO:Checking exceptions
2023-06-14 02:54:51,213:INFO:Importing libraries
2023-06-14 02:54:51,214:INFO:Copying training dataset
2023-06-14 02:54:51,218:INFO:Defining folds
2023-06-14 02:54:51,218:INFO:Declaring metric variables
2023-06-14 02:54:51,223:INFO:Importing untrained model
2023-06-14 02:54:51,228:INFO:Linear Discriminant Analysis Imported successfully
2023-06-14 02:54:51,236:INFO:Starting cross validation
2023-06-14 02:54:51,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:51,568:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,573:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,575:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,576:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,937:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,937:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,941:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,941:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,941:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,942:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,942:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:51,956:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,231:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,233:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,235:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,240:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,242:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,245:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:52,287:INFO:Calculating mean and std
2023-06-14 02:54:52,289:INFO:Creating metrics dataframe
2023-06-14 02:54:52,373:INFO:Uploading results into container
2023-06-14 02:54:52,374:INFO:Uploading model into container now
2023-06-14 02:54:52,375:INFO:_master_model_container: 11
2023-06-14 02:54:52,375:INFO:_display_container: 2
2023-06-14 02:54:52,375:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-14 02:54:52,375:INFO:create_model() successfully completed......................................
2023-06-14 02:54:52,474:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:52,474:INFO:Creating metrics dataframe
2023-06-14 02:54:52,486:INFO:Initializing Extra Trees Classifier
2023-06-14 02:54:52,486:INFO:Total runtime is 0.4099998156229655 minutes
2023-06-14 02:54:52,490:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:52,490:INFO:Initializing create_model()
2023-06-14 02:54:52,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:52,490:INFO:Checking exceptions
2023-06-14 02:54:52,490:INFO:Importing libraries
2023-06-14 02:54:52,490:INFO:Copying training dataset
2023-06-14 02:54:52,496:INFO:Defining folds
2023-06-14 02:54:52,496:INFO:Declaring metric variables
2023-06-14 02:54:52,500:INFO:Importing untrained model
2023-06-14 02:54:52,504:INFO:Extra Trees Classifier Imported successfully
2023-06-14 02:54:52,513:INFO:Starting cross validation
2023-06-14 02:54:52,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:53,242:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,246:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,333:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,396:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,398:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:53,400:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,090:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,170:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,173:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,178:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,190:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,339:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,899:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:54,906:INFO:Calculating mean and std
2023-06-14 02:54:54,908:INFO:Creating metrics dataframe
2023-06-14 02:54:54,975:INFO:Uploading results into container
2023-06-14 02:54:54,976:INFO:Uploading model into container now
2023-06-14 02:54:54,976:INFO:_master_model_container: 12
2023-06-14 02:54:54,977:INFO:_display_container: 2
2023-06-14 02:54:54,977:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1484, verbose=0, warm_start=False)
2023-06-14 02:54:54,978:INFO:create_model() successfully completed......................................
2023-06-14 02:54:55,073:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:55,073:INFO:Creating metrics dataframe
2023-06-14 02:54:55,086:INFO:Initializing Extreme Gradient Boosting
2023-06-14 02:54:55,086:INFO:Total runtime is 0.45332911014556887 minutes
2023-06-14 02:54:55,089:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:55,089:INFO:Initializing create_model()
2023-06-14 02:54:55,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:55,090:INFO:Checking exceptions
2023-06-14 02:54:55,090:INFO:Importing libraries
2023-06-14 02:54:55,090:INFO:Copying training dataset
2023-06-14 02:54:55,096:INFO:Defining folds
2023-06-14 02:54:55,096:INFO:Declaring metric variables
2023-06-14 02:54:55,100:INFO:Importing untrained model
2023-06-14 02:54:55,105:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 02:54:55,113:INFO:Starting cross validation
2023-06-14 02:54:55,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:55,813:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,816:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,817:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:55,817:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,389:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,393:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,395:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,397:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,443:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,445:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,447:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,462:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,922:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:56,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:57,003:INFO:Calculating mean and std
2023-06-14 02:54:57,005:INFO:Creating metrics dataframe
2023-06-14 02:54:57,080:INFO:Uploading results into container
2023-06-14 02:54:57,080:INFO:Uploading model into container now
2023-06-14 02:54:57,081:INFO:_master_model_container: 13
2023-06-14 02:54:57,081:INFO:_display_container: 2
2023-06-14 02:54:57,082:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-14 02:54:57,082:INFO:create_model() successfully completed......................................
2023-06-14 02:54:57,180:INFO:SubProcess create_model() end ==================================
2023-06-14 02:54:57,180:INFO:Creating metrics dataframe
2023-06-14 02:54:57,193:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 02:54:57,193:INFO:Total runtime is 0.4884481112162272 minutes
2023-06-14 02:54:57,196:INFO:SubProcess create_model() called ==================================
2023-06-14 02:54:57,197:INFO:Initializing create_model()
2023-06-14 02:54:57,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:54:57,197:INFO:Checking exceptions
2023-06-14 02:54:57,197:INFO:Importing libraries
2023-06-14 02:54:57,197:INFO:Copying training dataset
2023-06-14 02:54:57,202:INFO:Defining folds
2023-06-14 02:54:57,203:INFO:Declaring metric variables
2023-06-14 02:54:57,205:INFO:Importing untrained model
2023-06-14 02:54:57,212:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 02:54:57,220:INFO:Starting cross validation
2023-06-14 02:54:57,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:54:58,206:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,208:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,211:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,358:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,508:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,511:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,513:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,543:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,988:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,990:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:58,993:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,164:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,168:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,250:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,252:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,320:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,322:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,324:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,749:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,824:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:54:59,837:INFO:Calculating mean and std
2023-06-14 02:54:59,839:INFO:Creating metrics dataframe
2023-06-14 02:54:59,930:INFO:Uploading results into container
2023-06-14 02:54:59,931:INFO:Uploading model into container now
2023-06-14 02:54:59,931:INFO:_master_model_container: 14
2023-06-14 02:54:59,931:INFO:_display_container: 2
2023-06-14 02:54:59,932:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1484, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-14 02:54:59,932:INFO:create_model() successfully completed......................................
2023-06-14 02:55:00,032:INFO:SubProcess create_model() end ==================================
2023-06-14 02:55:00,032:INFO:Creating metrics dataframe
2023-06-14 02:55:00,043:INFO:Initializing Dummy Classifier
2023-06-14 02:55:00,043:INFO:Total runtime is 0.5359545787175497 minutes
2023-06-14 02:55:00,047:INFO:SubProcess create_model() called ==================================
2023-06-14 02:55:00,047:INFO:Initializing create_model()
2023-06-14 02:55:00,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E0D00AFE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:55:00,048:INFO:Checking exceptions
2023-06-14 02:55:00,048:INFO:Importing libraries
2023-06-14 02:55:00,048:INFO:Copying training dataset
2023-06-14 02:55:00,053:INFO:Defining folds
2023-06-14 02:55:00,053:INFO:Declaring metric variables
2023-06-14 02:55:00,057:INFO:Importing untrained model
2023-06-14 02:55:00,062:INFO:Dummy Classifier Imported successfully
2023-06-14 02:55:00,070:INFO:Starting cross validation
2023-06-14 02:55:00,071:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 02:55:00,348:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,351:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,352:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,364:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,368:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,371:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,372:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,373:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,386:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,406:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,407:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,765:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,790:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,794:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,796:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,807:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,812:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,813:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,860:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:00,864:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:00,865:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,131:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,132:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:01,133:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,142:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,145:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 02:55:01,147:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 02:55:01,223:INFO:Calculating mean and std
2023-06-14 02:55:01,225:INFO:Creating metrics dataframe
2023-06-14 02:55:01,328:INFO:Uploading results into container
2023-06-14 02:55:01,329:INFO:Uploading model into container now
2023-06-14 02:55:01,329:INFO:_master_model_container: 15
2023-06-14 02:55:01,329:INFO:_display_container: 2
2023-06-14 02:55:01,330:INFO:DummyClassifier(constant=None, random_state=1484, strategy='prior')
2023-06-14 02:55:01,330:INFO:create_model() successfully completed......................................
2023-06-14 02:55:01,425:INFO:SubProcess create_model() end ==================================
2023-06-14 02:55:01,425:INFO:Creating metrics dataframe
2023-06-14 02:55:01,451:INFO:Initializing create_model()
2023-06-14 02:55:01,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 02:55:01,451:INFO:Checking exceptions
2023-06-14 02:55:01,453:INFO:Importing libraries
2023-06-14 02:55:01,453:INFO:Copying training dataset
2023-06-14 02:55:01,456:INFO:Defining folds
2023-06-14 02:55:01,457:INFO:Declaring metric variables
2023-06-14 02:55:01,457:INFO:Importing untrained model
2023-06-14 02:55:01,457:INFO:Declaring custom model
2023-06-14 02:55:01,457:INFO:Decision Tree Classifier Imported successfully
2023-06-14 02:55:01,458:INFO:Cross validation set to False
2023-06-14 02:55:01,458:INFO:Fitting Model
2023-06-14 02:55:01,678:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 02:55:01,678:INFO:create_model() successfully completed......................................
2023-06-14 02:55:01,810:INFO:_master_model_container: 15
2023-06-14 02:55:01,811:INFO:_display_container: 2
2023-06-14 02:55:01,811:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 02:55:01,811:INFO:compare_models() successfully completed......................................
2023-06-14 03:20:48,377:INFO:Initializing tune_model()
2023-06-14 03:20:48,378:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>)
2023-06-14 03:20:48,378:INFO:Checking exceptions
2023-06-14 03:20:48,396:INFO:Copying training dataset
2023-06-14 03:20:48,400:INFO:Checking base model
2023-06-14 03:20:48,400:INFO:Base model : Decision Tree Classifier
2023-06-14 03:20:48,404:INFO:Declaring metric variables
2023-06-14 03:20:48,408:INFO:Defining Hyperparameters
2023-06-14 03:20:48,603:INFO:Tuning with n_jobs=-1
2023-06-14 03:20:48,603:INFO:Initializing RandomizedSearchCV
2023-06-14 03:21:02,735:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'entropy'}
2023-06-14 03:21:02,736:INFO:Hyperparameter search completed
2023-06-14 03:21:02,737:INFO:SubProcess create_model() called ==================================
2023-06-14 03:21:02,737:INFO:Initializing create_model()
2023-06-14 03:21:02,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023E136EA3B0>, model_only=True, return_train_score=False, kwargs={'min_samples_split': 2, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0002, 'max_features': 1.0, 'max_depth': 15, 'criterion': 'entropy'})
2023-06-14 03:21:02,738:INFO:Checking exceptions
2023-06-14 03:21:02,738:INFO:Importing libraries
2023-06-14 03:21:02,739:INFO:Copying training dataset
2023-06-14 03:21:02,744:INFO:Defining folds
2023-06-14 03:21:02,744:INFO:Declaring metric variables
2023-06-14 03:21:02,748:INFO:Importing untrained model
2023-06-14 03:21:02,748:INFO:Declaring custom model
2023-06-14 03:21:02,753:INFO:Decision Tree Classifier Imported successfully
2023-06-14 03:21:02,759:INFO:Starting cross validation
2023-06-14 03:21:02,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 03:21:03,087:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,090:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,091:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,168:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,233:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,235:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,237:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,507:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,509:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,511:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,522:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,525:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,624:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:03,627:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,023:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,025:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,055:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,061:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,065:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,143:INFO:Calculating mean and std
2023-06-14 03:21:04,145:INFO:Creating metrics dataframe
2023-06-14 03:21:04,151:INFO:Finalizing model
2023-06-14 03:21:04,433:INFO:Uploading results into container
2023-06-14 03:21:04,434:INFO:Uploading model into container now
2023-06-14 03:21:04,435:INFO:_master_model_container: 16
2023-06-14 03:21:04,435:INFO:_display_container: 3
2023-06-14 03:21:04,436:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 03:21:04,436:INFO:create_model() successfully completed......................................
2023-06-14 03:21:04,648:INFO:SubProcess create_model() end ==================================
2023-06-14 03:21:04,648:INFO:choose_better activated
2023-06-14 03:21:04,652:INFO:SubProcess create_model() called ==================================
2023-06-14 03:21:04,652:INFO:Initializing create_model()
2023-06-14 03:21:04,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E0237DC30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 03:21:04,653:INFO:Checking exceptions
2023-06-14 03:21:04,654:INFO:Importing libraries
2023-06-14 03:21:04,655:INFO:Copying training dataset
2023-06-14 03:21:04,659:INFO:Defining folds
2023-06-14 03:21:04,659:INFO:Declaring metric variables
2023-06-14 03:21:04,659:INFO:Importing untrained model
2023-06-14 03:21:04,659:INFO:Declaring custom model
2023-06-14 03:21:04,660:INFO:Decision Tree Classifier Imported successfully
2023-06-14 03:21:04,660:INFO:Starting cross validation
2023-06-14 03:21:04,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 03:21:04,958:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,959:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,960:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,961:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,963:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,971:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,978:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,981:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,984:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,994:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:04,998:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,003:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,390:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,392:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,428:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,437:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,439:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,444:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,784:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,787:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,789:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 03:21:05,852:INFO:Calculating mean and std
2023-06-14 03:21:05,852:INFO:Creating metrics dataframe
2023-06-14 03:21:05,854:INFO:Finalizing model
2023-06-14 03:21:06,241:INFO:Uploading results into container
2023-06-14 03:21:06,242:INFO:Uploading model into container now
2023-06-14 03:21:06,242:INFO:_master_model_container: 17
2023-06-14 03:21:06,242:INFO:_display_container: 4
2023-06-14 03:21:06,243:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 03:21:06,243:INFO:create_model() successfully completed......................................
2023-06-14 03:21:06,392:INFO:SubProcess create_model() end ==================================
2023-06-14 03:21:06,393:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best') result for Accuracy is 0.9989
2023-06-14 03:21:06,394:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best') result for Accuracy is 0.9989
2023-06-14 03:21:06,398:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best') is best model
2023-06-14 03:21:06,398:INFO:choose_better completed
2023-06-14 03:21:06,399:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-14 03:21:06,410:INFO:_master_model_container: 17
2023-06-14 03:21:06,411:INFO:_display_container: 3
2023-06-14 03:21:06,411:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1484, splitter='best')
2023-06-14 03:21:06,411:INFO:tune_model() successfully completed......................................
2023-06-14 03:25:46,799:INFO:PyCaret ClassificationExperiment
2023-06-14 03:25:46,799:INFO:Logging name: clf-default-name
2023-06-14 03:25:46,799:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 03:25:46,799:INFO:version 3.0.2
2023-06-14 03:25:46,799:INFO:Initializing setup()
2023-06-14 03:25:46,799:INFO:self.USI: 9583
2023-06-14 03:25:46,799:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 03:25:46,799:INFO:Checking environment
2023-06-14 03:25:46,799:INFO:python_version: 3.10.5
2023-06-14 03:25:46,799:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 03:25:46,799:INFO:machine: AMD64
2023-06-14 03:25:46,800:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 03:25:46,803:INFO:Memory: svmem(total=17130000384, available=8939823104, percent=47.8, used=8190177280, free=8939823104)
2023-06-14 03:25:46,803:INFO:Physical Core: 4
2023-06-14 03:25:46,803:INFO:Logical Core: 4
2023-06-14 03:25:46,803:INFO:Checking libraries
2023-06-14 03:25:46,803:INFO:System:
2023-06-14 03:25:46,803:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 03:25:46,803:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 03:25:46,803:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 03:25:46,803:INFO:PyCaret required dependencies:
2023-06-14 03:25:46,803:INFO:                 pip: 23.0.1
2023-06-14 03:25:46,803:INFO:          setuptools: 58.1.0
2023-06-14 03:25:46,804:INFO:             pycaret: 3.0.2
2023-06-14 03:25:46,804:INFO:             IPython: 8.9.0
2023-06-14 03:25:46,804:INFO:          ipywidgets: 8.0.6
2023-06-14 03:25:46,804:INFO:                tqdm: 4.65.0
2023-06-14 03:25:46,804:INFO:               numpy: 1.23.5
2023-06-14 03:25:46,804:INFO:              pandas: 1.5.3
2023-06-14 03:25:46,804:INFO:              jinja2: 3.1.2
2023-06-14 03:25:46,804:INFO:               scipy: 1.10.1
2023-06-14 03:25:46,804:INFO:              joblib: 1.2.0
2023-06-14 03:25:46,804:INFO:             sklearn: 1.2.2
2023-06-14 03:25:46,804:INFO:                pyod: 1.0.9
2023-06-14 03:25:46,804:INFO:            imblearn: 0.10.1
2023-06-14 03:25:46,804:INFO:   category_encoders: 2.6.1
2023-06-14 03:25:46,805:INFO:            lightgbm: 3.3.5
2023-06-14 03:25:46,805:INFO:               numba: 0.57.0
2023-06-14 03:25:46,805:INFO:            requests: 2.28.2
2023-06-14 03:25:46,805:INFO:          matplotlib: 3.7.1
2023-06-14 03:25:46,805:INFO:          scikitplot: 0.3.7
2023-06-14 03:25:46,805:INFO:         yellowbrick: 1.5
2023-06-14 03:25:46,805:INFO:              plotly: 5.15.0
2023-06-14 03:25:46,805:INFO:             kaleido: 0.2.1
2023-06-14 03:25:46,805:INFO:         statsmodels: 0.14.0
2023-06-14 03:25:46,805:INFO:              sktime: 0.17.0
2023-06-14 03:25:46,805:INFO:               tbats: 1.1.3
2023-06-14 03:25:46,805:INFO:            pmdarima: 2.0.3
2023-06-14 03:25:46,805:INFO:              psutil: 5.9.4
2023-06-14 03:25:46,805:INFO:PyCaret optional dependencies:
2023-06-14 03:25:46,806:INFO:                shap: Not installed
2023-06-14 03:25:46,806:INFO:           interpret: Not installed
2023-06-14 03:25:46,806:INFO:                umap: Not installed
2023-06-14 03:25:46,806:INFO:    pandas_profiling: Not installed
2023-06-14 03:25:46,806:INFO:  explainerdashboard: Not installed
2023-06-14 03:25:46,806:INFO:             autoviz: Not installed
2023-06-14 03:25:46,806:INFO:           fairlearn: Not installed
2023-06-14 03:25:46,806:INFO:             xgboost: 1.7.5
2023-06-14 03:25:46,806:INFO:            catboost: Not installed
2023-06-14 03:25:46,806:INFO:              kmodes: Not installed
2023-06-14 03:25:46,806:INFO:             mlxtend: Not installed
2023-06-14 03:25:46,806:INFO:       statsforecast: Not installed
2023-06-14 03:25:46,806:INFO:        tune_sklearn: Not installed
2023-06-14 03:25:46,806:INFO:                 ray: Not installed
2023-06-14 03:25:46,807:INFO:            hyperopt: Not installed
2023-06-14 03:25:46,807:INFO:              optuna: Not installed
2023-06-14 03:25:46,807:INFO:               skopt: Not installed
2023-06-14 03:25:46,807:INFO:              mlflow: Not installed
2023-06-14 03:25:46,807:INFO:              gradio: Not installed
2023-06-14 03:25:46,807:INFO:             fastapi: Not installed
2023-06-14 03:25:46,807:INFO:             uvicorn: Not installed
2023-06-14 03:25:46,807:INFO:              m2cgen: Not installed
2023-06-14 03:25:46,807:INFO:           evidently: Not installed
2023-06-14 03:25:46,807:INFO:               fugue: Not installed
2023-06-14 03:25:46,807:INFO:           streamlit: Not installed
2023-06-14 03:25:46,807:INFO:             prophet: Not installed
2023-06-14 03:25:46,807:INFO:None
2023-06-14 03:25:46,807:INFO:Set up data.
2023-06-14 03:25:57,693:INFO:PyCaret ClassificationExperiment
2023-06-14 03:25:57,694:INFO:Logging name: clf-default-name
2023-06-14 03:25:57,694:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 03:25:57,694:INFO:version 3.0.2
2023-06-14 03:25:57,694:INFO:Initializing setup()
2023-06-14 03:25:57,694:INFO:self.USI: 68cf
2023-06-14 03:25:57,694:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 03:25:57,694:INFO:Checking environment
2023-06-14 03:25:57,694:INFO:python_version: 3.10.5
2023-06-14 03:25:57,694:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 03:25:57,694:INFO:machine: AMD64
2023-06-14 03:25:57,694:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 03:25:57,698:INFO:Memory: svmem(total=17130000384, available=8914272256, percent=48.0, used=8215728128, free=8914272256)
2023-06-14 03:25:57,698:INFO:Physical Core: 4
2023-06-14 03:25:57,698:INFO:Logical Core: 4
2023-06-14 03:25:57,698:INFO:Checking libraries
2023-06-14 03:25:57,698:INFO:System:
2023-06-14 03:25:57,698:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 03:25:57,698:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 03:25:57,698:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 03:25:57,698:INFO:PyCaret required dependencies:
2023-06-14 03:25:57,698:INFO:                 pip: 23.0.1
2023-06-14 03:25:57,698:INFO:          setuptools: 58.1.0
2023-06-14 03:25:57,698:INFO:             pycaret: 3.0.2
2023-06-14 03:25:57,698:INFO:             IPython: 8.9.0
2023-06-14 03:25:57,699:INFO:          ipywidgets: 8.0.6
2023-06-14 03:25:57,699:INFO:                tqdm: 4.65.0
2023-06-14 03:25:57,699:INFO:               numpy: 1.23.5
2023-06-14 03:25:57,699:INFO:              pandas: 1.5.3
2023-06-14 03:25:57,699:INFO:              jinja2: 3.1.2
2023-06-14 03:25:57,699:INFO:               scipy: 1.10.1
2023-06-14 03:25:57,699:INFO:              joblib: 1.2.0
2023-06-14 03:25:57,699:INFO:             sklearn: 1.2.2
2023-06-14 03:25:57,699:INFO:                pyod: 1.0.9
2023-06-14 03:25:57,699:INFO:            imblearn: 0.10.1
2023-06-14 03:25:57,699:INFO:   category_encoders: 2.6.1
2023-06-14 03:25:57,699:INFO:            lightgbm: 3.3.5
2023-06-14 03:25:57,699:INFO:               numba: 0.57.0
2023-06-14 03:25:57,699:INFO:            requests: 2.28.2
2023-06-14 03:25:57,700:INFO:          matplotlib: 3.7.1
2023-06-14 03:25:57,700:INFO:          scikitplot: 0.3.7
2023-06-14 03:25:57,700:INFO:         yellowbrick: 1.5
2023-06-14 03:25:57,700:INFO:              plotly: 5.15.0
2023-06-14 03:25:57,700:INFO:             kaleido: 0.2.1
2023-06-14 03:25:57,700:INFO:         statsmodels: 0.14.0
2023-06-14 03:25:57,700:INFO:              sktime: 0.17.0
2023-06-14 03:25:57,700:INFO:               tbats: 1.1.3
2023-06-14 03:25:57,700:INFO:            pmdarima: 2.0.3
2023-06-14 03:25:57,700:INFO:              psutil: 5.9.4
2023-06-14 03:25:57,701:INFO:PyCaret optional dependencies:
2023-06-14 03:25:57,701:INFO:                shap: Not installed
2023-06-14 03:25:57,701:INFO:           interpret: Not installed
2023-06-14 03:25:57,701:INFO:                umap: Not installed
2023-06-14 03:25:57,701:INFO:    pandas_profiling: Not installed
2023-06-14 03:25:57,701:INFO:  explainerdashboard: Not installed
2023-06-14 03:25:57,701:INFO:             autoviz: Not installed
2023-06-14 03:25:57,701:INFO:           fairlearn: Not installed
2023-06-14 03:25:57,701:INFO:             xgboost: 1.7.5
2023-06-14 03:25:57,701:INFO:            catboost: Not installed
2023-06-14 03:25:57,702:INFO:              kmodes: Not installed
2023-06-14 03:25:57,702:INFO:             mlxtend: Not installed
2023-06-14 03:25:57,702:INFO:       statsforecast: Not installed
2023-06-14 03:25:57,702:INFO:        tune_sklearn: Not installed
2023-06-14 03:25:57,702:INFO:                 ray: Not installed
2023-06-14 03:25:57,702:INFO:            hyperopt: Not installed
2023-06-14 03:25:57,703:INFO:              optuna: Not installed
2023-06-14 03:25:57,703:INFO:               skopt: Not installed
2023-06-14 03:25:57,703:INFO:              mlflow: Not installed
2023-06-14 03:25:57,703:INFO:              gradio: Not installed
2023-06-14 03:25:57,703:INFO:             fastapi: Not installed
2023-06-14 03:25:57,703:INFO:             uvicorn: Not installed
2023-06-14 03:25:57,704:INFO:              m2cgen: Not installed
2023-06-14 03:25:57,704:INFO:           evidently: Not installed
2023-06-14 03:25:57,704:INFO:               fugue: Not installed
2023-06-14 03:25:57,704:INFO:           streamlit: Not installed
2023-06-14 03:25:57,704:INFO:             prophet: Not installed
2023-06-14 03:25:57,704:INFO:None
2023-06-14 03:25:57,704:INFO:Set up data.
2023-06-14 03:26:47,153:INFO:PyCaret ClassificationExperiment
2023-06-14 03:26:47,153:INFO:Logging name: clf-default-name
2023-06-14 03:26:47,153:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 03:26:47,153:INFO:version 3.0.2
2023-06-14 03:26:47,153:INFO:Initializing setup()
2023-06-14 03:26:47,153:INFO:self.USI: 95c6
2023-06-14 03:26:47,153:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 03:26:47,153:INFO:Checking environment
2023-06-14 03:26:47,154:INFO:python_version: 3.10.5
2023-06-14 03:26:47,154:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 03:26:47,154:INFO:machine: AMD64
2023-06-14 03:26:47,154:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 03:26:47,157:INFO:Memory: svmem(total=17130000384, available=9365225472, percent=45.3, used=7764774912, free=9365225472)
2023-06-14 03:26:47,157:INFO:Physical Core: 4
2023-06-14 03:26:47,157:INFO:Logical Core: 4
2023-06-14 03:26:47,157:INFO:Checking libraries
2023-06-14 03:26:47,157:INFO:System:
2023-06-14 03:26:47,158:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 03:26:47,158:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 03:26:47,158:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 03:26:47,158:INFO:PyCaret required dependencies:
2023-06-14 03:26:47,158:INFO:                 pip: 23.0.1
2023-06-14 03:26:47,158:INFO:          setuptools: 58.1.0
2023-06-14 03:26:47,158:INFO:             pycaret: 3.0.2
2023-06-14 03:26:47,158:INFO:             IPython: 8.9.0
2023-06-14 03:26:47,158:INFO:          ipywidgets: 8.0.6
2023-06-14 03:26:47,159:INFO:                tqdm: 4.65.0
2023-06-14 03:26:47,159:INFO:               numpy: 1.23.5
2023-06-14 03:26:47,159:INFO:              pandas: 1.5.3
2023-06-14 03:26:47,159:INFO:              jinja2: 3.1.2
2023-06-14 03:26:47,159:INFO:               scipy: 1.10.1
2023-06-14 03:26:47,159:INFO:              joblib: 1.2.0
2023-06-14 03:26:47,159:INFO:             sklearn: 1.2.2
2023-06-14 03:26:47,159:INFO:                pyod: 1.0.9
2023-06-14 03:26:47,159:INFO:            imblearn: 0.10.1
2023-06-14 03:26:47,160:INFO:   category_encoders: 2.6.1
2023-06-14 03:26:47,160:INFO:            lightgbm: 3.3.5
2023-06-14 03:26:47,160:INFO:               numba: 0.57.0
2023-06-14 03:26:47,160:INFO:            requests: 2.28.2
2023-06-14 03:26:47,160:INFO:          matplotlib: 3.7.1
2023-06-14 03:26:47,160:INFO:          scikitplot: 0.3.7
2023-06-14 03:26:47,160:INFO:         yellowbrick: 1.5
2023-06-14 03:26:47,160:INFO:              plotly: 5.15.0
2023-06-14 03:26:47,160:INFO:             kaleido: 0.2.1
2023-06-14 03:26:47,160:INFO:         statsmodels: 0.14.0
2023-06-14 03:26:47,161:INFO:              sktime: 0.17.0
2023-06-14 03:26:47,161:INFO:               tbats: 1.1.3
2023-06-14 03:26:47,161:INFO:            pmdarima: 2.0.3
2023-06-14 03:26:47,161:INFO:              psutil: 5.9.4
2023-06-14 03:26:47,161:INFO:PyCaret optional dependencies:
2023-06-14 03:26:47,161:INFO:                shap: Not installed
2023-06-14 03:26:47,162:INFO:           interpret: Not installed
2023-06-14 03:26:47,162:INFO:                umap: Not installed
2023-06-14 03:26:47,162:INFO:    pandas_profiling: Not installed
2023-06-14 03:26:47,162:INFO:  explainerdashboard: Not installed
2023-06-14 03:26:47,163:INFO:             autoviz: Not installed
2023-06-14 03:26:47,163:INFO:           fairlearn: Not installed
2023-06-14 03:26:47,163:INFO:             xgboost: 1.7.5
2023-06-14 03:26:47,163:INFO:            catboost: Not installed
2023-06-14 03:26:47,164:INFO:              kmodes: Not installed
2023-06-14 03:26:47,164:INFO:             mlxtend: Not installed
2023-06-14 03:26:47,164:INFO:       statsforecast: Not installed
2023-06-14 03:26:47,164:INFO:        tune_sklearn: Not installed
2023-06-14 03:26:47,164:INFO:                 ray: Not installed
2023-06-14 03:26:47,165:INFO:            hyperopt: Not installed
2023-06-14 03:26:47,165:INFO:              optuna: Not installed
2023-06-14 03:26:47,165:INFO:               skopt: Not installed
2023-06-14 03:26:47,165:INFO:              mlflow: Not installed
2023-06-14 03:26:47,165:INFO:              gradio: Not installed
2023-06-14 03:26:47,166:INFO:             fastapi: Not installed
2023-06-14 03:26:47,166:INFO:             uvicorn: Not installed
2023-06-14 03:26:47,166:INFO:              m2cgen: Not installed
2023-06-14 03:26:47,166:INFO:           evidently: Not installed
2023-06-14 03:26:47,166:INFO:               fugue: Not installed
2023-06-14 03:26:47,167:INFO:           streamlit: Not installed
2023-06-14 03:26:47,167:INFO:             prophet: Not installed
2023-06-14 03:26:47,167:INFO:None
2023-06-14 03:26:47,167:INFO:Set up data.
2023-06-14 03:27:56,089:WARNING:C:\Users\king\AppData\Local\Temp\ipykernel_19424\4010732426.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  samsung_df['day5_label'] = samsung_df['day5_label'].replace(label_mapping)

2023-06-14 03:28:32,783:INFO:PyCaret ClassificationExperiment
2023-06-14 03:28:32,783:INFO:Logging name: clf-default-name
2023-06-14 03:28:32,783:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 03:28:32,783:INFO:version 3.0.2
2023-06-14 03:28:32,783:INFO:Initializing setup()
2023-06-14 03:28:32,783:INFO:self.USI: 93a2
2023-06-14 03:28:32,783:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 03:28:32,783:INFO:Checking environment
2023-06-14 03:28:32,783:INFO:python_version: 3.10.5
2023-06-14 03:28:32,783:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 03:28:32,783:INFO:machine: AMD64
2023-06-14 03:28:32,783:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 03:28:32,787:INFO:Memory: svmem(total=17130000384, available=9245536256, percent=46.0, used=7884464128, free=9245536256)
2023-06-14 03:28:32,787:INFO:Physical Core: 4
2023-06-14 03:28:32,788:INFO:Logical Core: 4
2023-06-14 03:28:32,788:INFO:Checking libraries
2023-06-14 03:28:32,788:INFO:System:
2023-06-14 03:28:32,788:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 03:28:32,788:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 03:28:32,788:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 03:28:32,788:INFO:PyCaret required dependencies:
2023-06-14 03:28:32,788:INFO:                 pip: 23.0.1
2023-06-14 03:28:32,788:INFO:          setuptools: 58.1.0
2023-06-14 03:28:32,788:INFO:             pycaret: 3.0.2
2023-06-14 03:28:32,788:INFO:             IPython: 8.9.0
2023-06-14 03:28:32,788:INFO:          ipywidgets: 8.0.6
2023-06-14 03:28:32,788:INFO:                tqdm: 4.65.0
2023-06-14 03:28:32,788:INFO:               numpy: 1.23.5
2023-06-14 03:28:32,789:INFO:              pandas: 1.5.3
2023-06-14 03:28:32,789:INFO:              jinja2: 3.1.2
2023-06-14 03:28:32,789:INFO:               scipy: 1.10.1
2023-06-14 03:28:32,789:INFO:              joblib: 1.2.0
2023-06-14 03:28:32,789:INFO:             sklearn: 1.2.2
2023-06-14 03:28:32,789:INFO:                pyod: 1.0.9
2023-06-14 03:28:32,789:INFO:            imblearn: 0.10.1
2023-06-14 03:28:32,789:INFO:   category_encoders: 2.6.1
2023-06-14 03:28:32,789:INFO:            lightgbm: 3.3.5
2023-06-14 03:28:32,789:INFO:               numba: 0.57.0
2023-06-14 03:28:32,789:INFO:            requests: 2.28.2
2023-06-14 03:28:32,790:INFO:          matplotlib: 3.7.1
2023-06-14 03:28:32,790:INFO:          scikitplot: 0.3.7
2023-06-14 03:28:32,790:INFO:         yellowbrick: 1.5
2023-06-14 03:28:32,790:INFO:              plotly: 5.15.0
2023-06-14 03:28:32,790:INFO:             kaleido: 0.2.1
2023-06-14 03:28:32,790:INFO:         statsmodels: 0.14.0
2023-06-14 03:28:32,790:INFO:              sktime: 0.17.0
2023-06-14 03:28:32,790:INFO:               tbats: 1.1.3
2023-06-14 03:28:32,791:INFO:            pmdarima: 2.0.3
2023-06-14 03:28:32,791:INFO:              psutil: 5.9.4
2023-06-14 03:28:32,791:INFO:PyCaret optional dependencies:
2023-06-14 03:28:32,791:INFO:                shap: Not installed
2023-06-14 03:28:32,791:INFO:           interpret: Not installed
2023-06-14 03:28:32,791:INFO:                umap: Not installed
2023-06-14 03:28:32,791:INFO:    pandas_profiling: Not installed
2023-06-14 03:28:32,791:INFO:  explainerdashboard: Not installed
2023-06-14 03:28:32,791:INFO:             autoviz: Not installed
2023-06-14 03:28:32,792:INFO:           fairlearn: Not installed
2023-06-14 03:28:32,792:INFO:             xgboost: 1.7.5
2023-06-14 03:28:32,792:INFO:            catboost: Not installed
2023-06-14 03:28:32,792:INFO:              kmodes: Not installed
2023-06-14 03:28:32,792:INFO:             mlxtend: Not installed
2023-06-14 03:28:32,792:INFO:       statsforecast: Not installed
2023-06-14 03:28:32,792:INFO:        tune_sklearn: Not installed
2023-06-14 03:28:32,792:INFO:                 ray: Not installed
2023-06-14 03:28:32,792:INFO:            hyperopt: Not installed
2023-06-14 03:28:32,792:INFO:              optuna: Not installed
2023-06-14 03:28:32,792:INFO:               skopt: Not installed
2023-06-14 03:28:32,792:INFO:              mlflow: Not installed
2023-06-14 03:28:32,793:INFO:              gradio: Not installed
2023-06-14 03:28:32,793:INFO:             fastapi: Not installed
2023-06-14 03:28:32,793:INFO:             uvicorn: Not installed
2023-06-14 03:28:32,793:INFO:              m2cgen: Not installed
2023-06-14 03:28:32,793:INFO:           evidently: Not installed
2023-06-14 03:28:32,793:INFO:               fugue: Not installed
2023-06-14 03:28:32,793:INFO:           streamlit: Not installed
2023-06-14 03:28:32,793:INFO:             prophet: Not installed
2023-06-14 03:28:32,793:INFO:None
2023-06-14 03:28:32,793:INFO:Set up data.
2023-06-14 03:29:34,776:INFO:PyCaret ClassificationExperiment
2023-06-14 03:29:34,776:INFO:Logging name: clf-default-name
2023-06-14 03:29:34,777:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 03:29:34,777:INFO:version 3.0.2
2023-06-14 03:29:34,777:INFO:Initializing setup()
2023-06-14 03:29:34,777:INFO:self.USI: b74c
2023-06-14 03:29:34,777:INFO:self._variable_keys: {'y_train', 'idx', 'seed', 'html_param', 'logging_param', 'USI', 'X_test', 'log_plots_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_name_log', 'exp_id', 'gpu_param', 'y', 'fold_generator', 'n_jobs_param', '_available_plots', 'fold_groups_param', 'target_param', 'memory', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', '_ml_usecase', 'y_test', 'X_train'}
2023-06-14 03:29:34,777:INFO:Checking environment
2023-06-14 03:29:34,777:INFO:python_version: 3.10.5
2023-06-14 03:29:34,777:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 03:29:34,777:INFO:machine: AMD64
2023-06-14 03:29:34,777:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 03:29:34,780:INFO:Memory: svmem(total=17130000384, available=9355976704, percent=45.4, used=7774023680, free=9355976704)
2023-06-14 03:29:34,780:INFO:Physical Core: 4
2023-06-14 03:29:34,780:INFO:Logical Core: 4
2023-06-14 03:29:34,780:INFO:Checking libraries
2023-06-14 03:29:34,780:INFO:System:
2023-06-14 03:29:34,780:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 03:29:34,780:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 03:29:34,780:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 03:29:34,780:INFO:PyCaret required dependencies:
2023-06-14 03:29:34,781:INFO:                 pip: 23.0.1
2023-06-14 03:29:34,781:INFO:          setuptools: 58.1.0
2023-06-14 03:29:34,781:INFO:             pycaret: 3.0.2
2023-06-14 03:29:34,781:INFO:             IPython: 8.9.0
2023-06-14 03:29:34,781:INFO:          ipywidgets: 8.0.6
2023-06-14 03:29:34,781:INFO:                tqdm: 4.65.0
2023-06-14 03:29:34,781:INFO:               numpy: 1.23.5
2023-06-14 03:29:34,781:INFO:              pandas: 1.5.3
2023-06-14 03:29:34,781:INFO:              jinja2: 3.1.2
2023-06-14 03:29:34,781:INFO:               scipy: 1.10.1
2023-06-14 03:29:34,781:INFO:              joblib: 1.2.0
2023-06-14 03:29:34,781:INFO:             sklearn: 1.2.2
2023-06-14 03:29:34,781:INFO:                pyod: 1.0.9
2023-06-14 03:29:34,781:INFO:            imblearn: 0.10.1
2023-06-14 03:29:34,781:INFO:   category_encoders: 2.6.1
2023-06-14 03:29:34,781:INFO:            lightgbm: 3.3.5
2023-06-14 03:29:34,781:INFO:               numba: 0.57.0
2023-06-14 03:29:34,782:INFO:            requests: 2.28.2
2023-06-14 03:29:34,782:INFO:          matplotlib: 3.7.1
2023-06-14 03:29:34,782:INFO:          scikitplot: 0.3.7
2023-06-14 03:29:34,783:INFO:         yellowbrick: 1.5
2023-06-14 03:29:34,783:INFO:              plotly: 5.15.0
2023-06-14 03:29:34,783:INFO:             kaleido: 0.2.1
2023-06-14 03:29:34,783:INFO:         statsmodels: 0.14.0
2023-06-14 03:29:34,783:INFO:              sktime: 0.17.0
2023-06-14 03:29:34,783:INFO:               tbats: 1.1.3
2023-06-14 03:29:34,783:INFO:            pmdarima: 2.0.3
2023-06-14 03:29:34,783:INFO:              psutil: 5.9.4
2023-06-14 03:29:34,783:INFO:PyCaret optional dependencies:
2023-06-14 03:29:34,783:INFO:                shap: Not installed
2023-06-14 03:29:34,783:INFO:           interpret: Not installed
2023-06-14 03:29:34,783:INFO:                umap: Not installed
2023-06-14 03:29:34,783:INFO:    pandas_profiling: Not installed
2023-06-14 03:29:34,783:INFO:  explainerdashboard: Not installed
2023-06-14 03:29:34,784:INFO:             autoviz: Not installed
2023-06-14 03:29:34,784:INFO:           fairlearn: Not installed
2023-06-14 03:29:34,784:INFO:             xgboost: 1.7.5
2023-06-14 03:29:34,784:INFO:            catboost: Not installed
2023-06-14 03:29:34,784:INFO:              kmodes: Not installed
2023-06-14 03:29:34,784:INFO:             mlxtend: Not installed
2023-06-14 03:29:34,784:INFO:       statsforecast: Not installed
2023-06-14 03:29:34,784:INFO:        tune_sklearn: Not installed
2023-06-14 03:29:34,784:INFO:                 ray: Not installed
2023-06-14 03:29:34,784:INFO:            hyperopt: Not installed
2023-06-14 03:29:34,784:INFO:              optuna: Not installed
2023-06-14 03:29:34,784:INFO:               skopt: Not installed
2023-06-14 03:29:34,784:INFO:              mlflow: Not installed
2023-06-14 03:29:34,784:INFO:              gradio: Not installed
2023-06-14 03:29:34,784:INFO:             fastapi: Not installed
2023-06-14 03:29:34,785:INFO:             uvicorn: Not installed
2023-06-14 03:29:34,785:INFO:              m2cgen: Not installed
2023-06-14 03:29:34,785:INFO:           evidently: Not installed
2023-06-14 03:29:34,785:INFO:               fugue: Not installed
2023-06-14 03:29:34,785:INFO:           streamlit: Not installed
2023-06-14 03:29:34,785:INFO:             prophet: Not installed
2023-06-14 03:29:34,785:INFO:None
2023-06-14 03:29:34,785:INFO:Set up data.
2023-06-14 09:21:26,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 09:21:26,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 09:21:26,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 09:21:26,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 09:21:27,707:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 09:21:29,169:INFO:PyCaret ClassificationExperiment
2023-06-14 09:21:29,169:INFO:Logging name: clf-default-name
2023-06-14 09:21:29,169:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 09:21:29,169:INFO:version 3.0.2
2023-06-14 09:21:29,169:INFO:Initializing setup()
2023-06-14 09:21:29,169:INFO:self.USI: 98aa
2023-06-14 09:21:29,170:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 09:21:29,170:INFO:Checking environment
2023-06-14 09:21:29,170:INFO:python_version: 3.10.5
2023-06-14 09:21:29,170:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 09:21:29,170:INFO:machine: AMD64
2023-06-14 09:21:29,170:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 09:21:29,173:INFO:Memory: svmem(total=17130000384, available=10593316864, percent=38.2, used=6536683520, free=10593316864)
2023-06-14 09:21:29,173:INFO:Physical Core: 4
2023-06-14 09:21:29,173:INFO:Logical Core: 4
2023-06-14 09:21:29,173:INFO:Checking libraries
2023-06-14 09:21:29,173:INFO:System:
2023-06-14 09:21:29,174:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 09:21:29,175:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 09:21:29,175:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 09:21:29,175:INFO:PyCaret required dependencies:
2023-06-14 09:21:29,175:INFO:                 pip: 23.0.1
2023-06-14 09:21:29,175:INFO:          setuptools: 58.1.0
2023-06-14 09:21:29,175:INFO:             pycaret: 3.0.2
2023-06-14 09:21:29,175:INFO:             IPython: 8.9.0
2023-06-14 09:21:29,175:INFO:          ipywidgets: 8.0.6
2023-06-14 09:21:29,175:INFO:                tqdm: 4.65.0
2023-06-14 09:21:29,176:INFO:               numpy: 1.23.5
2023-06-14 09:21:29,176:INFO:              pandas: 1.5.3
2023-06-14 09:21:29,176:INFO:              jinja2: 3.1.2
2023-06-14 09:21:29,176:INFO:               scipy: 1.10.1
2023-06-14 09:21:29,176:INFO:              joblib: 1.2.0
2023-06-14 09:21:29,176:INFO:             sklearn: 1.2.2
2023-06-14 09:21:29,176:INFO:                pyod: 1.0.9
2023-06-14 09:21:29,176:INFO:            imblearn: 0.10.1
2023-06-14 09:21:29,176:INFO:   category_encoders: 2.6.1
2023-06-14 09:21:29,176:INFO:            lightgbm: 3.3.5
2023-06-14 09:21:29,176:INFO:               numba: 0.57.0
2023-06-14 09:21:29,177:INFO:            requests: 2.28.2
2023-06-14 09:21:29,177:INFO:          matplotlib: 3.7.1
2023-06-14 09:21:29,177:INFO:          scikitplot: 0.3.7
2023-06-14 09:21:29,177:INFO:         yellowbrick: 1.5
2023-06-14 09:21:29,177:INFO:              plotly: 5.15.0
2023-06-14 09:21:29,177:INFO:             kaleido: 0.2.1
2023-06-14 09:21:29,177:INFO:         statsmodels: 0.14.0
2023-06-14 09:21:29,177:INFO:              sktime: 0.17.0
2023-06-14 09:21:29,177:INFO:               tbats: 1.1.3
2023-06-14 09:21:29,177:INFO:            pmdarima: 2.0.3
2023-06-14 09:21:29,177:INFO:              psutil: 5.9.4
2023-06-14 09:21:29,178:INFO:PyCaret optional dependencies:
2023-06-14 09:21:29,208:INFO:                shap: Not installed
2023-06-14 09:21:29,208:INFO:           interpret: Not installed
2023-06-14 09:21:29,209:INFO:                umap: Not installed
2023-06-14 09:21:29,209:INFO:    pandas_profiling: Not installed
2023-06-14 09:21:29,209:INFO:  explainerdashboard: Not installed
2023-06-14 09:21:29,209:INFO:             autoviz: Not installed
2023-06-14 09:21:29,209:INFO:           fairlearn: Not installed
2023-06-14 09:21:29,209:INFO:             xgboost: 1.7.5
2023-06-14 09:21:29,209:INFO:            catboost: Not installed
2023-06-14 09:21:29,209:INFO:              kmodes: Not installed
2023-06-14 09:21:29,209:INFO:             mlxtend: Not installed
2023-06-14 09:21:29,209:INFO:       statsforecast: Not installed
2023-06-14 09:21:29,209:INFO:        tune_sklearn: Not installed
2023-06-14 09:21:29,209:INFO:                 ray: Not installed
2023-06-14 09:21:29,209:INFO:            hyperopt: Not installed
2023-06-14 09:21:29,209:INFO:              optuna: Not installed
2023-06-14 09:21:29,209:INFO:               skopt: Not installed
2023-06-14 09:21:29,209:INFO:              mlflow: Not installed
2023-06-14 09:21:29,210:INFO:              gradio: Not installed
2023-06-14 09:21:29,210:INFO:             fastapi: Not installed
2023-06-14 09:21:29,210:INFO:             uvicorn: Not installed
2023-06-14 09:21:29,210:INFO:              m2cgen: Not installed
2023-06-14 09:21:29,210:INFO:           evidently: Not installed
2023-06-14 09:21:29,210:INFO:               fugue: Not installed
2023-06-14 09:21:29,210:INFO:           streamlit: Not installed
2023-06-14 09:21:29,210:INFO:             prophet: Not installed
2023-06-14 09:21:29,210:INFO:None
2023-06-14 09:21:29,210:INFO:Set up data.
2023-06-14 09:21:29,220:INFO:Set up train/test split.
2023-06-14 09:21:29,275:INFO:Set up index.
2023-06-14 09:21:29,275:INFO:Set up folding strategy.
2023-06-14 09:21:29,276:INFO:Assigning column types.
2023-06-14 09:21:29,279:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 09:21:29,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,364:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,477:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:29,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:29,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,747:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:29,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:29,750:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 09:21:29,796:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,822:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:29,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:29,869:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 09:21:29,896:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:29,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:29,899:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 09:21:29,969:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:29,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:30,041:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:30,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:30,047:INFO:Preparing preprocessing pipeline...
2023-06-14 09:21:30,068:INFO:Set up label encoding.
2023-06-14 09:21:30,068:INFO:Set up simple imputation.
2023-06-14 09:21:30,071:INFO:Set up encoding of categorical features.
2023-06-14 09:21:30,071:INFO:Set up column name cleaning.
2023-06-14 09:21:30,204:INFO:Finished creating preprocessing pipeline.
2023-06-14 09:21:30,221:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'Change', 'Code', 'MA_5',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI', 'STD'...
                 TransformerWrapper(exclude=None, include=['Name'],
                                    transformer=OneHotEncoder(cols=['Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 09:21:30,221:INFO:Creating final display dataframe.
2023-06-14 09:21:30,530:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          1027
1                        Target                    day5_label
2                   Target type                    Multiclass
3                Target mapping  buy: 0, maintain: 1, sell: 2
4           Original data shape                    (1320, 18)
5        Transformed data shape                    (1320, 18)
6   Transformed train set shape                     (923, 18)
7    Transformed test set shape                     (397, 18)
8              Numeric features                            16
9          Categorical features                             1
10                   Preprocess                          True
11              Imputation type                        simple
12           Numeric imputation                          mean
13       Categorical imputation                          mode
14     Maximum one-hot encoding                            25
15              Encoding method                          None
16               Fold Generator               StratifiedKFold
17                  Fold Number                            10
18                     CPU Jobs                            -1
19                      Use GPU                         False
20               Log Experiment                         False
21              Experiment Name              clf-default-name
22                          USI                          98aa
2023-06-14 09:21:30,610:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:30,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:30,683:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 09:21:30,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 09:21:30,686:INFO:setup() successfully completed in 1.63s...............
2023-06-14 09:21:38,587:INFO:Initializing compare_models()
2023-06-14 09:21:38,588:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-14 09:21:38,588:INFO:Checking exceptions
2023-06-14 09:21:38,593:INFO:Preparing display monitor
2023-06-14 09:21:38,624:INFO:Initializing Logistic Regression
2023-06-14 09:21:38,624:INFO:Total runtime is 0.0 minutes
2023-06-14 09:21:38,629:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:38,629:INFO:Initializing create_model()
2023-06-14 09:21:38,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:38,630:INFO:Checking exceptions
2023-06-14 09:21:38,630:INFO:Importing libraries
2023-06-14 09:21:38,630:INFO:Copying training dataset
2023-06-14 09:21:38,636:INFO:Defining folds
2023-06-14 09:21:38,636:INFO:Declaring metric variables
2023-06-14 09:21:38,640:INFO:Importing untrained model
2023-06-14 09:21:38,645:INFO:Logistic Regression Imported successfully
2023-06-14 09:21:38,654:INFO:Starting cross validation
2023-06-14 09:21:38,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:42,814:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,816:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,818:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,875:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,878:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,880:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:42,914:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-14 09:21:43,111:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,114:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,115:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,368:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,370:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,372:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,434:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,611:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,613:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,615:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,754:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,756:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,759:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,855:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,858:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:43,860:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,065:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,067:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,069:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,073:INFO:Calculating mean and std
2023-06-14 09:21:44,075:INFO:Creating metrics dataframe
2023-06-14 09:21:44,177:INFO:Uploading results into container
2023-06-14 09:21:44,177:INFO:Uploading model into container now
2023-06-14 09:21:44,178:INFO:_master_model_container: 1
2023-06-14 09:21:44,178:INFO:_display_container: 2
2023-06-14 09:21:44,179:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1027, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-14 09:21:44,179:INFO:create_model() successfully completed......................................
2023-06-14 09:21:44,266:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:44,267:INFO:Creating metrics dataframe
2023-06-14 09:21:44,275:INFO:Initializing K Neighbors Classifier
2023-06-14 09:21:44,275:INFO:Total runtime is 0.09418478806813559 minutes
2023-06-14 09:21:44,279:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:44,280:INFO:Initializing create_model()
2023-06-14 09:21:44,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:44,280:INFO:Checking exceptions
2023-06-14 09:21:44,280:INFO:Importing libraries
2023-06-14 09:21:44,280:INFO:Copying training dataset
2023-06-14 09:21:44,284:INFO:Defining folds
2023-06-14 09:21:44,284:INFO:Declaring metric variables
2023-06-14 09:21:44,289:INFO:Importing untrained model
2023-06-14 09:21:44,296:INFO:K Neighbors Classifier Imported successfully
2023-06-14 09:21:44,303:INFO:Starting cross validation
2023-06-14 09:21:44,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:44,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,732:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,734:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,740:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,743:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,745:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:44,749:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,116:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,118:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,120:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,160:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,163:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,164:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:45,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,183:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,185:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,191:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,212:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,554:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,555:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:45,556:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,577:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,578:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:45,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:45,702:INFO:Calculating mean and std
2023-06-14 09:21:45,704:INFO:Creating metrics dataframe
2023-06-14 09:21:45,795:INFO:Uploading results into container
2023-06-14 09:21:45,795:INFO:Uploading model into container now
2023-06-14 09:21:45,796:INFO:_master_model_container: 2
2023-06-14 09:21:45,796:INFO:_display_container: 2
2023-06-14 09:21:45,796:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-14 09:21:45,796:INFO:create_model() successfully completed......................................
2023-06-14 09:21:45,879:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:45,880:INFO:Creating metrics dataframe
2023-06-14 09:21:45,887:INFO:Initializing Naive Bayes
2023-06-14 09:21:45,887:INFO:Total runtime is 0.12105221748352052 minutes
2023-06-14 09:21:45,891:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:45,892:INFO:Initializing create_model()
2023-06-14 09:21:45,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:45,892:INFO:Checking exceptions
2023-06-14 09:21:45,892:INFO:Importing libraries
2023-06-14 09:21:45,893:INFO:Copying training dataset
2023-06-14 09:21:45,897:INFO:Defining folds
2023-06-14 09:21:45,897:INFO:Declaring metric variables
2023-06-14 09:21:45,900:INFO:Importing untrained model
2023-06-14 09:21:45,906:INFO:Naive Bayes Imported successfully
2023-06-14 09:21:45,914:INFO:Starting cross validation
2023-06-14 09:21:45,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:46,179:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,180:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,181:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,181:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,182:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:46,183:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,212:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,214:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,222:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,225:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,228:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,604:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,605:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:46,606:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,609:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,652:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,654:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,701:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,705:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,709:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,957:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,960:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,990:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,992:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:46,994:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,048:INFO:Calculating mean and std
2023-06-14 09:21:47,050:INFO:Creating metrics dataframe
2023-06-14 09:21:47,139:INFO:Uploading results into container
2023-06-14 09:21:47,140:INFO:Uploading model into container now
2023-06-14 09:21:47,140:INFO:_master_model_container: 3
2023-06-14 09:21:47,141:INFO:_display_container: 2
2023-06-14 09:21:47,141:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-14 09:21:47,141:INFO:create_model() successfully completed......................................
2023-06-14 09:21:47,223:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:47,224:INFO:Creating metrics dataframe
2023-06-14 09:21:47,233:INFO:Initializing Decision Tree Classifier
2023-06-14 09:21:47,234:INFO:Total runtime is 0.14349107344945272 minutes
2023-06-14 09:21:47,238:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:47,238:INFO:Initializing create_model()
2023-06-14 09:21:47,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:47,238:INFO:Checking exceptions
2023-06-14 09:21:47,238:INFO:Importing libraries
2023-06-14 09:21:47,238:INFO:Copying training dataset
2023-06-14 09:21:47,244:INFO:Defining folds
2023-06-14 09:21:47,244:INFO:Declaring metric variables
2023-06-14 09:21:47,248:INFO:Importing untrained model
2023-06-14 09:21:47,253:INFO:Decision Tree Classifier Imported successfully
2023-06-14 09:21:47,261:INFO:Starting cross validation
2023-06-14 09:21:47,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:47,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,532:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,534:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,536:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,575:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,578:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,580:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,921:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,926:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,964:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,966:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,973:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,979:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:47,982:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,011:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,325:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,327:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,333:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,424:INFO:Calculating mean and std
2023-06-14 09:21:48,425:INFO:Creating metrics dataframe
2023-06-14 09:21:48,516:INFO:Uploading results into container
2023-06-14 09:21:48,517:INFO:Uploading model into container now
2023-06-14 09:21:48,517:INFO:_master_model_container: 4
2023-06-14 09:21:48,517:INFO:_display_container: 2
2023-06-14 09:21:48,517:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:21:48,518:INFO:create_model() successfully completed......................................
2023-06-14 09:21:48,599:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:48,599:INFO:Creating metrics dataframe
2023-06-14 09:21:48,610:INFO:Initializing SVM - Linear Kernel
2023-06-14 09:21:48,610:INFO:Total runtime is 0.16643554369608562 minutes
2023-06-14 09:21:48,614:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:48,614:INFO:Initializing create_model()
2023-06-14 09:21:48,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:48,615:INFO:Checking exceptions
2023-06-14 09:21:48,615:INFO:Importing libraries
2023-06-14 09:21:48,615:INFO:Copying training dataset
2023-06-14 09:21:48,620:INFO:Defining folds
2023-06-14 09:21:48,620:INFO:Declaring metric variables
2023-06-14 09:21:48,625:INFO:Importing untrained model
2023-06-14 09:21:48,631:INFO:SVM - Linear Kernel Imported successfully
2023-06-14 09:21:48,639:INFO:Starting cross validation
2023-06-14 09:21:48,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:48,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:48,940:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,940:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,940:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,944:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:48,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:48,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:48,946:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,314:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,318:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,319:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,322:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,323:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,326:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,327:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,340:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,353:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,355:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,358:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-14 09:21:49,621:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,621:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:49,626:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,626:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:49,842:INFO:Calculating mean and std
2023-06-14 09:21:49,844:INFO:Creating metrics dataframe
2023-06-14 09:21:49,939:INFO:Uploading results into container
2023-06-14 09:21:49,940:INFO:Uploading model into container now
2023-06-14 09:21:49,940:INFO:_master_model_container: 5
2023-06-14 09:21:49,940:INFO:_display_container: 2
2023-06-14 09:21:49,941:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1027, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-14 09:21:49,941:INFO:create_model() successfully completed......................................
2023-06-14 09:21:50,023:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:50,023:INFO:Creating metrics dataframe
2023-06-14 09:21:50,033:INFO:Initializing Ridge Classifier
2023-06-14 09:21:50,033:INFO:Total runtime is 0.1901383399963379 minutes
2023-06-14 09:21:50,037:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:50,038:INFO:Initializing create_model()
2023-06-14 09:21:50,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:50,038:INFO:Checking exceptions
2023-06-14 09:21:50,038:INFO:Importing libraries
2023-06-14 09:21:50,038:INFO:Copying training dataset
2023-06-14 09:21:50,044:INFO:Defining folds
2023-06-14 09:21:50,044:INFO:Declaring metric variables
2023-06-14 09:21:50,048:INFO:Importing untrained model
2023-06-14 09:21:50,053:INFO:Ridge Classifier Imported successfully
2023-06-14 09:21:50,061:INFO:Starting cross validation
2023-06-14 09:21:50,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:50,309:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.41343e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,309:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.25504e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,309:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20778e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,354:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,354:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,354:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,355:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,355:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,355:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,357:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,358:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,360:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,655:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.22451e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20985e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,662:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.22307e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,677:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20989e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,706:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,707:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,710:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,711:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,712:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,712:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,734:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:50,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:50,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,752:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:50,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.18891e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:50,993:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.20956e-17): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-06-14 09:21:51,005:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:51,006:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,011:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,036:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-14 09:21:51,037:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,039:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,041:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:51,042:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:51,214:INFO:Calculating mean and std
2023-06-14 09:21:51,215:INFO:Creating metrics dataframe
2023-06-14 09:21:51,308:INFO:Uploading results into container
2023-06-14 09:21:51,309:INFO:Uploading model into container now
2023-06-14 09:21:51,309:INFO:_master_model_container: 6
2023-06-14 09:21:51,309:INFO:_display_container: 2
2023-06-14 09:21:51,310:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1027, solver='auto',
                tol=0.0001)
2023-06-14 09:21:51,310:INFO:create_model() successfully completed......................................
2023-06-14 09:21:51,392:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:51,392:INFO:Creating metrics dataframe
2023-06-14 09:21:51,402:INFO:Initializing Random Forest Classifier
2023-06-14 09:21:51,402:INFO:Total runtime is 0.21296403408050538 minutes
2023-06-14 09:21:51,406:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:51,407:INFO:Initializing create_model()
2023-06-14 09:21:51,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:51,407:INFO:Checking exceptions
2023-06-14 09:21:51,407:INFO:Importing libraries
2023-06-14 09:21:51,407:INFO:Copying training dataset
2023-06-14 09:21:51,412:INFO:Defining folds
2023-06-14 09:21:51,412:INFO:Declaring metric variables
2023-06-14 09:21:51,447:INFO:Importing untrained model
2023-06-14 09:21:51,452:INFO:Random Forest Classifier Imported successfully
2023-06-14 09:21:51,460:INFO:Starting cross validation
2023-06-14 09:21:51,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:52,319:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,320:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,321:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,324:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,324:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,327:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,342:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,345:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,347:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,597:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:52,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,366:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,382:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,543:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,691:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,693:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:53,695:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,222:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,224:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,274:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,276:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,321:INFO:Calculating mean and std
2023-06-14 09:21:54,322:INFO:Creating metrics dataframe
2023-06-14 09:21:54,424:INFO:Uploading results into container
2023-06-14 09:21:54,425:INFO:Uploading model into container now
2023-06-14 09:21:54,426:INFO:_master_model_container: 7
2023-06-14 09:21:54,426:INFO:_display_container: 2
2023-06-14 09:21:54,426:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1027, verbose=0, warm_start=False)
2023-06-14 09:21:54,427:INFO:create_model() successfully completed......................................
2023-06-14 09:21:54,508:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:54,508:INFO:Creating metrics dataframe
2023-06-14 09:21:54,518:INFO:Initializing Quadratic Discriminant Analysis
2023-06-14 09:21:54,518:INFO:Total runtime is 0.2648996591567993 minutes
2023-06-14 09:21:54,522:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:54,522:INFO:Initializing create_model()
2023-06-14 09:21:54,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:54,522:INFO:Checking exceptions
2023-06-14 09:21:54,523:INFO:Importing libraries
2023-06-14 09:21:54,523:INFO:Copying training dataset
2023-06-14 09:21:54,528:INFO:Defining folds
2023-06-14 09:21:54,528:INFO:Declaring metric variables
2023-06-14 09:21:54,533:INFO:Importing untrained model
2023-06-14 09:21:54,538:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-14 09:21:54,545:INFO:Starting cross validation
2023-06-14 09:21:54,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:54,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:54,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:54,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:54,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:54,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,107:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,137:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,153:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,246:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,247:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:55,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,252:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,254:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,265:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,265:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,267:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,267:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,269:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,566:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-14 09:21:55,634:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,636:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,638:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:21:55,639:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,695:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,697:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,699:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:55,914:INFO:Calculating mean and std
2023-06-14 09:21:55,915:INFO:Creating metrics dataframe
2023-06-14 09:21:56,018:INFO:Uploading results into container
2023-06-14 09:21:56,019:INFO:Uploading model into container now
2023-06-14 09:21:56,020:INFO:_master_model_container: 8
2023-06-14 09:21:56,020:INFO:_display_container: 2
2023-06-14 09:21:56,020:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-14 09:21:56,021:INFO:create_model() successfully completed......................................
2023-06-14 09:21:56,113:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:56,113:INFO:Creating metrics dataframe
2023-06-14 09:21:56,127:INFO:Initializing Ada Boost Classifier
2023-06-14 09:21:56,127:INFO:Total runtime is 0.2917108138402303 minutes
2023-06-14 09:21:56,131:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:56,131:INFO:Initializing create_model()
2023-06-14 09:21:56,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:56,132:INFO:Checking exceptions
2023-06-14 09:21:56,132:INFO:Importing libraries
2023-06-14 09:21:56,132:INFO:Copying training dataset
2023-06-14 09:21:56,137:INFO:Defining folds
2023-06-14 09:21:56,137:INFO:Declaring metric variables
2023-06-14 09:21:56,143:INFO:Importing untrained model
2023-06-14 09:21:56,147:INFO:Ada Boost Classifier Imported successfully
2023-06-14 09:21:56,153:INFO:Starting cross validation
2023-06-14 09:21:56,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:21:56,754:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,757:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,759:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,760:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,764:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,765:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,782:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,784:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:56,786:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,550:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,552:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,548:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,559:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,561:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,583:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,585:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:57,587:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,301:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,303:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,333:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:21:58,423:INFO:Calculating mean and std
2023-06-14 09:21:58,425:INFO:Creating metrics dataframe
2023-06-14 09:21:58,556:INFO:Uploading results into container
2023-06-14 09:21:58,557:INFO:Uploading model into container now
2023-06-14 09:21:58,559:INFO:_master_model_container: 9
2023-06-14 09:21:58,559:INFO:_display_container: 2
2023-06-14 09:21:58,559:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1027)
2023-06-14 09:21:58,559:INFO:create_model() successfully completed......................................
2023-06-14 09:21:58,661:INFO:SubProcess create_model() end ==================================
2023-06-14 09:21:58,661:INFO:Creating metrics dataframe
2023-06-14 09:21:58,672:INFO:Initializing Gradient Boosting Classifier
2023-06-14 09:21:58,672:INFO:Total runtime is 0.334133501847585 minutes
2023-06-14 09:21:58,677:INFO:SubProcess create_model() called ==================================
2023-06-14 09:21:58,677:INFO:Initializing create_model()
2023-06-14 09:21:58,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:21:58,677:INFO:Checking exceptions
2023-06-14 09:21:58,677:INFO:Importing libraries
2023-06-14 09:21:58,677:INFO:Copying training dataset
2023-06-14 09:21:58,682:INFO:Defining folds
2023-06-14 09:21:58,682:INFO:Declaring metric variables
2023-06-14 09:21:58,687:INFO:Importing untrained model
2023-06-14 09:21:58,694:INFO:Gradient Boosting Classifier Imported successfully
2023-06-14 09:21:58,700:INFO:Starting cross validation
2023-06-14 09:21:58,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:00,563:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,564:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,566:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,614:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,616:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,616:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,621:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,648:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:00,653:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,641:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,643:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,645:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,738:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:02,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,626:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,628:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,629:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,670:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,674:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,675:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:04,746:INFO:Calculating mean and std
2023-06-14 09:22:04,748:INFO:Creating metrics dataframe
2023-06-14 09:22:04,904:INFO:Uploading results into container
2023-06-14 09:22:04,904:INFO:Uploading model into container now
2023-06-14 09:22:04,905:INFO:_master_model_container: 10
2023-06-14 09:22:04,905:INFO:_display_container: 2
2023-06-14 09:22:04,906:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1027, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-14 09:22:04,906:INFO:create_model() successfully completed......................................
2023-06-14 09:22:04,991:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:04,991:INFO:Creating metrics dataframe
2023-06-14 09:22:05,001:INFO:Initializing Linear Discriminant Analysis
2023-06-14 09:22:05,002:INFO:Total runtime is 0.43962093989054357 minutes
2023-06-14 09:22:05,005:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:05,005:INFO:Initializing create_model()
2023-06-14 09:22:05,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:05,005:INFO:Checking exceptions
2023-06-14 09:22:05,006:INFO:Importing libraries
2023-06-14 09:22:05,006:INFO:Copying training dataset
2023-06-14 09:22:05,011:INFO:Defining folds
2023-06-14 09:22:05,012:INFO:Declaring metric variables
2023-06-14 09:22:05,015:INFO:Importing untrained model
2023-06-14 09:22:05,020:INFO:Linear Discriminant Analysis Imported successfully
2023-06-14 09:22:05,028:INFO:Starting cross validation
2023-06-14 09:22:05,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:05,478:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,480:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,481:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,482:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,482:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,483:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,485:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,485:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,486:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,488:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,488:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,492:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,915:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,917:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,919:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,986:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,990:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,992:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,993:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:05,996:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,000:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,032:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,041:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,043:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,353:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,355:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,406:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:06,672:INFO:Calculating mean and std
2023-06-14 09:22:06,673:INFO:Creating metrics dataframe
2023-06-14 09:22:06,803:INFO:Uploading results into container
2023-06-14 09:22:06,804:INFO:Uploading model into container now
2023-06-14 09:22:06,804:INFO:_master_model_container: 11
2023-06-14 09:22:06,804:INFO:_display_container: 2
2023-06-14 09:22:06,805:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-14 09:22:06,805:INFO:create_model() successfully completed......................................
2023-06-14 09:22:06,886:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:06,886:INFO:Creating metrics dataframe
2023-06-14 09:22:06,900:INFO:Initializing Extra Trees Classifier
2023-06-14 09:22:06,900:INFO:Total runtime is 0.47126599947611486 minutes
2023-06-14 09:22:06,903:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:06,904:INFO:Initializing create_model()
2023-06-14 09:22:06,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:06,904:INFO:Checking exceptions
2023-06-14 09:22:06,904:INFO:Importing libraries
2023-06-14 09:22:06,904:INFO:Copying training dataset
2023-06-14 09:22:06,911:INFO:Defining folds
2023-06-14 09:22:06,912:INFO:Declaring metric variables
2023-06-14 09:22:06,916:INFO:Importing untrained model
2023-06-14 09:22:06,921:INFO:Extra Trees Classifier Imported successfully
2023-06-14 09:22:06,930:INFO:Starting cross validation
2023-06-14 09:22:06,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:07,631:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,633:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,635:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,644:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,646:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,648:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,737:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,817:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:07,819:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,577:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,580:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,582:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,604:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,607:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,898:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,900:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,911:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,913:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:08,914:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,441:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,444:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,481:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,483:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,485:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:09,576:INFO:Calculating mean and std
2023-06-14 09:22:09,578:INFO:Creating metrics dataframe
2023-06-14 09:22:09,711:INFO:Uploading results into container
2023-06-14 09:22:09,712:INFO:Uploading model into container now
2023-06-14 09:22:09,713:INFO:_master_model_container: 12
2023-06-14 09:22:09,713:INFO:_display_container: 2
2023-06-14 09:22:09,713:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1027, verbose=0, warm_start=False)
2023-06-14 09:22:09,713:INFO:create_model() successfully completed......................................
2023-06-14 09:22:09,795:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:09,796:INFO:Creating metrics dataframe
2023-06-14 09:22:09,810:INFO:Initializing Extreme Gradient Boosting
2023-06-14 09:22:09,810:INFO:Total runtime is 0.5197583039601643 minutes
2023-06-14 09:22:09,814:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:09,814:INFO:Initializing create_model()
2023-06-14 09:22:09,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:09,814:INFO:Checking exceptions
2023-06-14 09:22:09,814:INFO:Importing libraries
2023-06-14 09:22:09,814:INFO:Copying training dataset
2023-06-14 09:22:09,819:INFO:Defining folds
2023-06-14 09:22:09,819:INFO:Declaring metric variables
2023-06-14 09:22:09,824:INFO:Importing untrained model
2023-06-14 09:22:09,829:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 09:22:09,835:INFO:Starting cross validation
2023-06-14 09:22:09,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:10,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,540:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,540:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,543:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,543:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:10,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,273:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,275:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,277:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,291:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,293:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,320:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,324:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,326:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,891:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,893:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,894:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,896:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:11,898:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:12,043:INFO:Calculating mean and std
2023-06-14 09:22:12,044:INFO:Creating metrics dataframe
2023-06-14 09:22:12,190:INFO:Uploading results into container
2023-06-14 09:22:12,191:INFO:Uploading model into container now
2023-06-14 09:22:12,192:INFO:_master_model_container: 13
2023-06-14 09:22:12,192:INFO:_display_container: 2
2023-06-14 09:22:12,193:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-14 09:22:12,193:INFO:create_model() successfully completed......................................
2023-06-14 09:22:12,300:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:12,300:INFO:Creating metrics dataframe
2023-06-14 09:22:12,312:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 09:22:12,312:INFO:Total runtime is 0.5614650885264078 minutes
2023-06-14 09:22:12,316:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:12,317:INFO:Initializing create_model()
2023-06-14 09:22:12,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:12,318:INFO:Checking exceptions
2023-06-14 09:22:12,318:INFO:Importing libraries
2023-06-14 09:22:12,318:INFO:Copying training dataset
2023-06-14 09:22:12,324:INFO:Defining folds
2023-06-14 09:22:12,324:INFO:Declaring metric variables
2023-06-14 09:22:12,329:INFO:Importing untrained model
2023-06-14 09:22:12,335:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 09:22:12,344:INFO:Starting cross validation
2023-06-14 09:22:12,346:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:13,581:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,583:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,585:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,603:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,635:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,640:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,642:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,664:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:13,672:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,437:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,440:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,489:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,491:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,540:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,600:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:14,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,140:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,142:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,144:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,246:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,294:INFO:Calculating mean and std
2023-06-14 09:22:15,296:INFO:Creating metrics dataframe
2023-06-14 09:22:15,456:INFO:Uploading results into container
2023-06-14 09:22:15,457:INFO:Uploading model into container now
2023-06-14 09:22:15,458:INFO:_master_model_container: 14
2023-06-14 09:22:15,458:INFO:_display_container: 2
2023-06-14 09:22:15,459:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1027, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-14 09:22:15,460:INFO:create_model() successfully completed......................................
2023-06-14 09:22:15,542:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:15,542:INFO:Creating metrics dataframe
2023-06-14 09:22:15,554:INFO:Initializing Dummy Classifier
2023-06-14 09:22:15,554:INFO:Total runtime is 0.6154930949211119 minutes
2023-06-14 09:22:15,558:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:15,559:INFO:Initializing create_model()
2023-06-14 09:22:15,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A8CAA7D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:15,559:INFO:Checking exceptions
2023-06-14 09:22:15,559:INFO:Importing libraries
2023-06-14 09:22:15,559:INFO:Copying training dataset
2023-06-14 09:22:15,564:INFO:Defining folds
2023-06-14 09:22:15,564:INFO:Declaring metric variables
2023-06-14 09:22:15,570:INFO:Importing untrained model
2023-06-14 09:22:15,575:INFO:Dummy Classifier Imported successfully
2023-06-14 09:22:15,582:INFO:Starting cross validation
2023-06-14 09:22:15,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:15,848:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,851:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,851:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,852:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:15,853:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:15,853:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,868:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,870:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,873:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:15,874:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,892:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,908:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:15,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:15,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,369:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,371:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,374:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,375:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,389:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,391:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,392:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,393:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,433:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,434:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,774:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,776:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,779:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,811:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,813:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:16,814:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-14 09:22:16,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:17,378:INFO:Calculating mean and std
2023-06-14 09:22:17,379:INFO:Creating metrics dataframe
2023-06-14 09:22:17,544:INFO:Uploading results into container
2023-06-14 09:22:17,544:INFO:Uploading model into container now
2023-06-14 09:22:17,545:INFO:_master_model_container: 15
2023-06-14 09:22:17,545:INFO:_display_container: 2
2023-06-14 09:22:17,546:INFO:DummyClassifier(constant=None, random_state=1027, strategy='prior')
2023-06-14 09:22:17,546:INFO:create_model() successfully completed......................................
2023-06-14 09:22:17,631:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:17,631:INFO:Creating metrics dataframe
2023-06-14 09:22:17,656:INFO:Initializing create_model()
2023-06-14 09:22:17,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:17,656:INFO:Checking exceptions
2023-06-14 09:22:17,658:INFO:Importing libraries
2023-06-14 09:22:17,658:INFO:Copying training dataset
2023-06-14 09:22:17,663:INFO:Defining folds
2023-06-14 09:22:17,663:INFO:Declaring metric variables
2023-06-14 09:22:17,663:INFO:Importing untrained model
2023-06-14 09:22:17,663:INFO:Declaring custom model
2023-06-14 09:22:17,664:INFO:Decision Tree Classifier Imported successfully
2023-06-14 09:22:17,664:INFO:Cross validation set to False
2023-06-14 09:22:17,665:INFO:Fitting Model
2023-06-14 09:22:17,938:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:22:17,938:INFO:create_model() successfully completed......................................
2023-06-14 09:22:18,054:INFO:_master_model_container: 15
2023-06-14 09:22:18,055:INFO:_display_container: 2
2023-06-14 09:22:18,055:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:22:18,055:INFO:compare_models() successfully completed......................................
2023-06-14 09:22:20,600:INFO:Initializing tune_model()
2023-06-14 09:22:20,600:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>)
2023-06-14 09:22:20,600:INFO:Checking exceptions
2023-06-14 09:22:20,619:INFO:Copying training dataset
2023-06-14 09:22:20,623:INFO:Checking base model
2023-06-14 09:22:20,623:INFO:Base model : Decision Tree Classifier
2023-06-14 09:22:20,627:INFO:Declaring metric variables
2023-06-14 09:22:20,631:INFO:Defining Hyperparameters
2023-06-14 09:22:20,750:INFO:Tuning with n_jobs=-1
2023-06-14 09:22:20,750:INFO:Initializing RandomizedSearchCV
2023-06-14 09:22:37,078:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'gini'}
2023-06-14 09:22:37,079:INFO:Hyperparameter search completed
2023-06-14 09:22:37,079:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:37,080:INFO:Initializing create_model()
2023-06-14 09:22:37,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000144A9F5BD60>, model_only=True, return_train_score=False, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'gini'})
2023-06-14 09:22:37,080:INFO:Checking exceptions
2023-06-14 09:22:37,080:INFO:Importing libraries
2023-06-14 09:22:37,080:INFO:Copying training dataset
2023-06-14 09:22:37,084:INFO:Defining folds
2023-06-14 09:22:37,085:INFO:Declaring metric variables
2023-06-14 09:22:37,093:INFO:Importing untrained model
2023-06-14 09:22:37,093:INFO:Declaring custom model
2023-06-14 09:22:37,097:INFO:Decision Tree Classifier Imported successfully
2023-06-14 09:22:37,104:INFO:Starting cross validation
2023-06-14 09:22:37,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:37,376:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,378:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,380:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,383:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,417:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,419:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,420:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,850:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,852:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,855:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,874:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,876:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,878:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,934:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,936:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,938:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,944:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:37,946:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,314:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,333:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:38,892:INFO:Calculating mean and std
2023-06-14 09:22:38,893:INFO:Creating metrics dataframe
2023-06-14 09:22:38,898:INFO:Finalizing model
2023-06-14 09:22:39,209:INFO:Uploading results into container
2023-06-14 09:22:39,210:INFO:Uploading model into container now
2023-06-14 09:22:39,210:INFO:_master_model_container: 16
2023-06-14 09:22:39,210:INFO:_display_container: 3
2023-06-14 09:22:39,211:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:22:39,211:INFO:create_model() successfully completed......................................
2023-06-14 09:22:39,305:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:39,305:INFO:choose_better activated
2023-06-14 09:22:39,310:INFO:SubProcess create_model() called ==================================
2023-06-14 09:22:39,310:INFO:Initializing create_model()
2023-06-14 09:22:39,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144A9F5B7C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 09:22:39,311:INFO:Checking exceptions
2023-06-14 09:22:39,313:INFO:Importing libraries
2023-06-14 09:22:39,313:INFO:Copying training dataset
2023-06-14 09:22:39,316:INFO:Defining folds
2023-06-14 09:22:39,318:INFO:Declaring metric variables
2023-06-14 09:22:39,318:INFO:Importing untrained model
2023-06-14 09:22:39,318:INFO:Declaring custom model
2023-06-14 09:22:39,318:INFO:Decision Tree Classifier Imported successfully
2023-06-14 09:22:39,319:INFO:Starting cross validation
2023-06-14 09:22:39,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 09:22:39,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,600:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,610:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,621:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,623:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:39,660:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,109:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,111:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,113:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,139:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,141:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,143:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,167:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,171:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,173:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,173:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,569:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,629:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,631:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:40,633:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-14 09:22:41,177:INFO:Calculating mean and std
2023-06-14 09:22:41,178:INFO:Creating metrics dataframe
2023-06-14 09:22:41,179:INFO:Finalizing model
2023-06-14 09:22:41,486:INFO:Uploading results into container
2023-06-14 09:22:41,488:INFO:Uploading model into container now
2023-06-14 09:22:41,488:INFO:_master_model_container: 17
2023-06-14 09:22:41,489:INFO:_display_container: 4
2023-06-14 09:22:41,489:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:22:41,489:INFO:create_model() successfully completed......................................
2023-06-14 09:22:41,571:INFO:SubProcess create_model() end ==================================
2023-06-14 09:22:41,572:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best') result for Accuracy is 0.9989
2023-06-14 09:22:41,572:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best') result for Accuracy is 0.9989
2023-06-14 09:22:41,573:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best') is best model
2023-06-14 09:22:41,573:INFO:choose_better completed
2023-06-14 09:22:41,573:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-14 09:22:41,583:INFO:_master_model_container: 17
2023-06-14 09:22:41,583:INFO:_display_container: 3
2023-06-14 09:22:41,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1027, splitter='best')
2023-06-14 09:22:41,584:INFO:tune_model() successfully completed......................................
2023-06-14 09:26:12,823:INFO:PyCaret ClassificationExperiment
2023-06-14 09:26:12,824:INFO:Logging name: clf-default-name
2023-06-14 09:26:12,824:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 09:26:12,824:INFO:version 3.0.2
2023-06-14 09:26:12,825:INFO:Initializing setup()
2023-06-14 09:26:12,825:INFO:self.USI: 45a6
2023-06-14 09:26:12,825:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 09:26:12,825:INFO:Checking environment
2023-06-14 09:26:12,825:INFO:python_version: 3.10.5
2023-06-14 09:26:12,825:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 09:26:12,825:INFO:machine: AMD64
2023-06-14 09:26:12,825:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 09:26:12,829:INFO:Memory: svmem(total=17130000384, available=9994084352, percent=41.7, used=7135916032, free=9994084352)
2023-06-14 09:26:12,829:INFO:Physical Core: 4
2023-06-14 09:26:12,829:INFO:Logical Core: 4
2023-06-14 09:26:12,829:INFO:Checking libraries
2023-06-14 09:26:12,829:INFO:System:
2023-06-14 09:26:12,829:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 09:26:12,829:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 09:26:12,829:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 09:26:12,829:INFO:PyCaret required dependencies:
2023-06-14 09:26:12,830:INFO:                 pip: 23.0.1
2023-06-14 09:26:12,830:INFO:          setuptools: 58.1.0
2023-06-14 09:26:12,830:INFO:             pycaret: 3.0.2
2023-06-14 09:26:12,830:INFO:             IPython: 8.9.0
2023-06-14 09:26:12,830:INFO:          ipywidgets: 8.0.6
2023-06-14 09:26:12,830:INFO:                tqdm: 4.65.0
2023-06-14 09:26:12,830:INFO:               numpy: 1.23.5
2023-06-14 09:26:12,830:INFO:              pandas: 1.5.3
2023-06-14 09:26:12,830:INFO:              jinja2: 3.1.2
2023-06-14 09:26:12,830:INFO:               scipy: 1.10.1
2023-06-14 09:26:12,831:INFO:              joblib: 1.2.0
2023-06-14 09:26:12,831:INFO:             sklearn: 1.2.2
2023-06-14 09:26:12,831:INFO:                pyod: 1.0.9
2023-06-14 09:26:12,831:INFO:            imblearn: 0.10.1
2023-06-14 09:26:12,831:INFO:   category_encoders: 2.6.1
2023-06-14 09:26:12,831:INFO:            lightgbm: 3.3.5
2023-06-14 09:26:12,831:INFO:               numba: 0.57.0
2023-06-14 09:26:12,831:INFO:            requests: 2.28.2
2023-06-14 09:26:12,831:INFO:          matplotlib: 3.7.1
2023-06-14 09:26:12,831:INFO:          scikitplot: 0.3.7
2023-06-14 09:26:12,831:INFO:         yellowbrick: 1.5
2023-06-14 09:26:12,831:INFO:              plotly: 5.15.0
2023-06-14 09:26:12,831:INFO:             kaleido: 0.2.1
2023-06-14 09:26:12,831:INFO:         statsmodels: 0.14.0
2023-06-14 09:26:12,832:INFO:              sktime: 0.17.0
2023-06-14 09:26:12,832:INFO:               tbats: 1.1.3
2023-06-14 09:26:12,832:INFO:            pmdarima: 2.0.3
2023-06-14 09:26:12,832:INFO:              psutil: 5.9.4
2023-06-14 09:26:12,832:INFO:PyCaret optional dependencies:
2023-06-14 09:26:12,832:INFO:                shap: Not installed
2023-06-14 09:26:12,832:INFO:           interpret: Not installed
2023-06-14 09:26:12,832:INFO:                umap: Not installed
2023-06-14 09:26:12,832:INFO:    pandas_profiling: Not installed
2023-06-14 09:26:12,832:INFO:  explainerdashboard: Not installed
2023-06-14 09:26:12,832:INFO:             autoviz: Not installed
2023-06-14 09:26:12,832:INFO:           fairlearn: Not installed
2023-06-14 09:26:12,832:INFO:             xgboost: 1.7.5
2023-06-14 09:26:12,833:INFO:            catboost: Not installed
2023-06-14 09:26:12,833:INFO:              kmodes: Not installed
2023-06-14 09:26:12,833:INFO:             mlxtend: Not installed
2023-06-14 09:26:12,833:INFO:       statsforecast: Not installed
2023-06-14 09:26:12,833:INFO:        tune_sklearn: Not installed
2023-06-14 09:26:12,833:INFO:                 ray: Not installed
2023-06-14 09:26:12,833:INFO:            hyperopt: Not installed
2023-06-14 09:26:12,833:INFO:              optuna: Not installed
2023-06-14 09:26:12,833:INFO:               skopt: Not installed
2023-06-14 09:26:12,833:INFO:              mlflow: Not installed
2023-06-14 09:26:12,834:INFO:              gradio: Not installed
2023-06-14 09:26:12,834:INFO:             fastapi: Not installed
2023-06-14 09:26:12,834:INFO:             uvicorn: Not installed
2023-06-14 09:26:12,834:INFO:              m2cgen: Not installed
2023-06-14 09:26:12,834:INFO:           evidently: Not installed
2023-06-14 09:26:12,834:INFO:               fugue: Not installed
2023-06-14 09:26:12,834:INFO:           streamlit: Not installed
2023-06-14 09:26:12,834:INFO:             prophet: Not installed
2023-06-14 09:26:12,834:INFO:None
2023-06-14 09:26:12,834:INFO:Set up data.
2023-06-14 09:26:27,451:INFO:PyCaret ClassificationExperiment
2023-06-14 09:26:27,451:INFO:Logging name: clf-default-name
2023-06-14 09:26:27,451:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 09:26:27,451:INFO:version 3.0.2
2023-06-14 09:26:27,451:INFO:Initializing setup()
2023-06-14 09:26:27,451:INFO:self.USI: c988
2023-06-14 09:26:27,451:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 09:26:27,452:INFO:Checking environment
2023-06-14 09:26:27,452:INFO:python_version: 3.10.5
2023-06-14 09:26:27,452:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 09:26:27,452:INFO:machine: AMD64
2023-06-14 09:26:27,452:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 09:26:27,455:INFO:Memory: svmem(total=17130000384, available=9881366528, percent=42.3, used=7248633856, free=9881366528)
2023-06-14 09:26:27,455:INFO:Physical Core: 4
2023-06-14 09:26:27,455:INFO:Logical Core: 4
2023-06-14 09:26:27,455:INFO:Checking libraries
2023-06-14 09:26:27,455:INFO:System:
2023-06-14 09:26:27,455:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 09:26:27,455:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 09:26:27,455:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 09:26:27,455:INFO:PyCaret required dependencies:
2023-06-14 09:26:27,456:INFO:                 pip: 23.0.1
2023-06-14 09:26:27,456:INFO:          setuptools: 58.1.0
2023-06-14 09:26:27,456:INFO:             pycaret: 3.0.2
2023-06-14 09:26:27,457:INFO:             IPython: 8.9.0
2023-06-14 09:26:27,457:INFO:          ipywidgets: 8.0.6
2023-06-14 09:26:27,457:INFO:                tqdm: 4.65.0
2023-06-14 09:26:27,457:INFO:               numpy: 1.23.5
2023-06-14 09:26:27,457:INFO:              pandas: 1.5.3
2023-06-14 09:26:27,457:INFO:              jinja2: 3.1.2
2023-06-14 09:26:27,457:INFO:               scipy: 1.10.1
2023-06-14 09:26:27,457:INFO:              joblib: 1.2.0
2023-06-14 09:26:27,457:INFO:             sklearn: 1.2.2
2023-06-14 09:26:27,457:INFO:                pyod: 1.0.9
2023-06-14 09:26:27,458:INFO:            imblearn: 0.10.1
2023-06-14 09:26:27,458:INFO:   category_encoders: 2.6.1
2023-06-14 09:26:27,458:INFO:            lightgbm: 3.3.5
2023-06-14 09:26:27,458:INFO:               numba: 0.57.0
2023-06-14 09:26:27,458:INFO:            requests: 2.28.2
2023-06-14 09:26:27,458:INFO:          matplotlib: 3.7.1
2023-06-14 09:26:27,458:INFO:          scikitplot: 0.3.7
2023-06-14 09:26:27,458:INFO:         yellowbrick: 1.5
2023-06-14 09:26:27,458:INFO:              plotly: 5.15.0
2023-06-14 09:26:27,458:INFO:             kaleido: 0.2.1
2023-06-14 09:26:27,458:INFO:         statsmodels: 0.14.0
2023-06-14 09:26:27,458:INFO:              sktime: 0.17.0
2023-06-14 09:26:27,458:INFO:               tbats: 1.1.3
2023-06-14 09:26:27,458:INFO:            pmdarima: 2.0.3
2023-06-14 09:26:27,459:INFO:              psutil: 5.9.4
2023-06-14 09:26:27,459:INFO:PyCaret optional dependencies:
2023-06-14 09:26:27,460:INFO:                shap: Not installed
2023-06-14 09:26:27,460:INFO:           interpret: Not installed
2023-06-14 09:26:27,460:INFO:                umap: Not installed
2023-06-14 09:26:27,461:INFO:    pandas_profiling: Not installed
2023-06-14 09:26:27,461:INFO:  explainerdashboard: Not installed
2023-06-14 09:26:27,461:INFO:             autoviz: Not installed
2023-06-14 09:26:27,461:INFO:           fairlearn: Not installed
2023-06-14 09:26:27,461:INFO:             xgboost: 1.7.5
2023-06-14 09:26:27,461:INFO:            catboost: Not installed
2023-06-14 09:26:27,461:INFO:              kmodes: Not installed
2023-06-14 09:26:27,461:INFO:             mlxtend: Not installed
2023-06-14 09:26:27,461:INFO:       statsforecast: Not installed
2023-06-14 09:26:27,461:INFO:        tune_sklearn: Not installed
2023-06-14 09:26:27,462:INFO:                 ray: Not installed
2023-06-14 09:26:27,463:INFO:            hyperopt: Not installed
2023-06-14 09:26:27,463:INFO:              optuna: Not installed
2023-06-14 09:26:27,463:INFO:               skopt: Not installed
2023-06-14 09:26:27,463:INFO:              mlflow: Not installed
2023-06-14 09:26:27,463:INFO:              gradio: Not installed
2023-06-14 09:26:27,463:INFO:             fastapi: Not installed
2023-06-14 09:26:27,463:INFO:             uvicorn: Not installed
2023-06-14 09:26:27,463:INFO:              m2cgen: Not installed
2023-06-14 09:26:27,463:INFO:           evidently: Not installed
2023-06-14 09:26:27,464:INFO:               fugue: Not installed
2023-06-14 09:26:27,464:INFO:           streamlit: Not installed
2023-06-14 09:26:27,464:INFO:             prophet: Not installed
2023-06-14 09:26:27,464:INFO:None
2023-06-14 09:26:27,464:INFO:Set up data.
2023-06-14 09:26:40,674:INFO:PyCaret ClassificationExperiment
2023-06-14 09:26:40,674:INFO:Logging name: clf-default-name
2023-06-14 09:26:40,674:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 09:26:40,674:INFO:version 3.0.2
2023-06-14 09:26:40,674:INFO:Initializing setup()
2023-06-14 09:26:40,674:INFO:self.USI: 2650
2023-06-14 09:26:40,674:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 09:26:40,675:INFO:Checking environment
2023-06-14 09:26:40,675:INFO:python_version: 3.10.5
2023-06-14 09:26:40,675:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 09:26:40,675:INFO:machine: AMD64
2023-06-14 09:26:40,675:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 09:26:40,678:INFO:Memory: svmem(total=17130000384, available=9910222848, percent=42.1, used=7219777536, free=9910222848)
2023-06-14 09:26:40,678:INFO:Physical Core: 4
2023-06-14 09:26:40,678:INFO:Logical Core: 4
2023-06-14 09:26:40,678:INFO:Checking libraries
2023-06-14 09:26:40,678:INFO:System:
2023-06-14 09:26:40,679:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 09:26:40,679:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 09:26:40,679:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 09:26:40,679:INFO:PyCaret required dependencies:
2023-06-14 09:26:40,679:INFO:                 pip: 23.0.1
2023-06-14 09:26:40,679:INFO:          setuptools: 58.1.0
2023-06-14 09:26:40,679:INFO:             pycaret: 3.0.2
2023-06-14 09:26:40,679:INFO:             IPython: 8.9.0
2023-06-14 09:26:40,679:INFO:          ipywidgets: 8.0.6
2023-06-14 09:26:40,679:INFO:                tqdm: 4.65.0
2023-06-14 09:26:40,679:INFO:               numpy: 1.23.5
2023-06-14 09:26:40,679:INFO:              pandas: 1.5.3
2023-06-14 09:26:40,679:INFO:              jinja2: 3.1.2
2023-06-14 09:26:40,679:INFO:               scipy: 1.10.1
2023-06-14 09:26:40,679:INFO:              joblib: 1.2.0
2023-06-14 09:26:40,679:INFO:             sklearn: 1.2.2
2023-06-14 09:26:40,679:INFO:                pyod: 1.0.9
2023-06-14 09:26:40,680:INFO:            imblearn: 0.10.1
2023-06-14 09:26:40,680:INFO:   category_encoders: 2.6.1
2023-06-14 09:26:40,680:INFO:            lightgbm: 3.3.5
2023-06-14 09:26:40,680:INFO:               numba: 0.57.0
2023-06-14 09:26:40,680:INFO:            requests: 2.28.2
2023-06-14 09:26:40,680:INFO:          matplotlib: 3.7.1
2023-06-14 09:26:40,680:INFO:          scikitplot: 0.3.7
2023-06-14 09:26:40,680:INFO:         yellowbrick: 1.5
2023-06-14 09:26:40,680:INFO:              plotly: 5.15.0
2023-06-14 09:26:40,680:INFO:             kaleido: 0.2.1
2023-06-14 09:26:40,680:INFO:         statsmodels: 0.14.0
2023-06-14 09:26:40,680:INFO:              sktime: 0.17.0
2023-06-14 09:26:40,681:INFO:               tbats: 1.1.3
2023-06-14 09:26:40,681:INFO:            pmdarima: 2.0.3
2023-06-14 09:26:40,681:INFO:              psutil: 5.9.4
2023-06-14 09:26:40,681:INFO:PyCaret optional dependencies:
2023-06-14 09:26:40,681:INFO:                shap: Not installed
2023-06-14 09:26:40,681:INFO:           interpret: Not installed
2023-06-14 09:26:40,681:INFO:                umap: Not installed
2023-06-14 09:26:40,681:INFO:    pandas_profiling: Not installed
2023-06-14 09:26:40,681:INFO:  explainerdashboard: Not installed
2023-06-14 09:26:40,681:INFO:             autoviz: Not installed
2023-06-14 09:26:40,681:INFO:           fairlearn: Not installed
2023-06-14 09:26:40,681:INFO:             xgboost: 1.7.5
2023-06-14 09:26:40,681:INFO:            catboost: Not installed
2023-06-14 09:26:40,682:INFO:              kmodes: Not installed
2023-06-14 09:26:40,682:INFO:             mlxtend: Not installed
2023-06-14 09:26:40,682:INFO:       statsforecast: Not installed
2023-06-14 09:26:40,682:INFO:        tune_sklearn: Not installed
2023-06-14 09:26:40,682:INFO:                 ray: Not installed
2023-06-14 09:26:40,682:INFO:            hyperopt: Not installed
2023-06-14 09:26:40,682:INFO:              optuna: Not installed
2023-06-14 09:26:40,682:INFO:               skopt: Not installed
2023-06-14 09:26:40,682:INFO:              mlflow: Not installed
2023-06-14 09:26:40,682:INFO:              gradio: Not installed
2023-06-14 09:26:40,682:INFO:             fastapi: Not installed
2023-06-14 09:26:40,682:INFO:             uvicorn: Not installed
2023-06-14 09:26:40,682:INFO:              m2cgen: Not installed
2023-06-14 09:26:40,683:INFO:           evidently: Not installed
2023-06-14 09:26:40,683:INFO:               fugue: Not installed
2023-06-14 09:26:40,683:INFO:           streamlit: Not installed
2023-06-14 09:26:40,683:INFO:             prophet: Not installed
2023-06-14 09:26:40,683:INFO:None
2023-06-14 09:26:40,683:INFO:Set up data.
2023-06-14 11:31:05,275:INFO:PyCaret RegressionExperiment
2023-06-14 11:31:05,276:INFO:Logging name: reg-default-name
2023-06-14 11:31:05,276:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 11:31:05,276:INFO:version 3.0.2
2023-06-14 11:31:05,276:INFO:Initializing setup()
2023-06-14 11:31:05,276:INFO:self.USI: 3885
2023-06-14 11:31:05,276:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 11:31:05,276:INFO:Checking environment
2023-06-14 11:31:05,276:INFO:python_version: 3.10.5
2023-06-14 11:31:05,276:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 11:31:05,276:INFO:machine: AMD64
2023-06-14 11:31:05,276:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 11:31:05,280:INFO:Memory: svmem(total=17130000384, available=9466384384, percent=44.7, used=7663616000, free=9466384384)
2023-06-14 11:31:05,280:INFO:Physical Core: 4
2023-06-14 11:31:05,280:INFO:Logical Core: 4
2023-06-14 11:31:05,280:INFO:Checking libraries
2023-06-14 11:31:05,280:INFO:System:
2023-06-14 11:31:05,280:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 11:31:05,280:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 11:31:05,280:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 11:31:05,280:INFO:PyCaret required dependencies:
2023-06-14 11:31:05,280:INFO:                 pip: 23.0.1
2023-06-14 11:31:05,280:INFO:          setuptools: 58.1.0
2023-06-14 11:31:05,280:INFO:             pycaret: 3.0.2
2023-06-14 11:31:05,280:INFO:             IPython: 8.9.0
2023-06-14 11:31:05,280:INFO:          ipywidgets: 8.0.6
2023-06-14 11:31:05,281:INFO:                tqdm: 4.65.0
2023-06-14 11:31:05,281:INFO:               numpy: 1.23.5
2023-06-14 11:31:05,281:INFO:              pandas: 1.5.3
2023-06-14 11:31:05,281:INFO:              jinja2: 3.1.2
2023-06-14 11:31:05,281:INFO:               scipy: 1.10.1
2023-06-14 11:31:05,281:INFO:              joblib: 1.2.0
2023-06-14 11:31:05,281:INFO:             sklearn: 1.2.2
2023-06-14 11:31:05,281:INFO:                pyod: 1.0.9
2023-06-14 11:31:05,281:INFO:            imblearn: 0.10.1
2023-06-14 11:31:05,281:INFO:   category_encoders: 2.6.1
2023-06-14 11:31:05,281:INFO:            lightgbm: 3.3.5
2023-06-14 11:31:05,281:INFO:               numba: 0.57.0
2023-06-14 11:31:05,281:INFO:            requests: 2.28.2
2023-06-14 11:31:05,281:INFO:          matplotlib: 3.7.1
2023-06-14 11:31:05,281:INFO:          scikitplot: 0.3.7
2023-06-14 11:31:05,282:INFO:         yellowbrick: 1.5
2023-06-14 11:31:05,282:INFO:              plotly: 5.15.0
2023-06-14 11:31:05,282:INFO:             kaleido: 0.2.1
2023-06-14 11:31:05,282:INFO:         statsmodels: 0.14.0
2023-06-14 11:31:05,282:INFO:              sktime: 0.17.0
2023-06-14 11:31:05,282:INFO:               tbats: 1.1.3
2023-06-14 11:31:05,282:INFO:            pmdarima: 2.0.3
2023-06-14 11:31:05,282:INFO:              psutil: 5.9.4
2023-06-14 11:31:05,282:INFO:PyCaret optional dependencies:
2023-06-14 11:31:05,282:INFO:                shap: Not installed
2023-06-14 11:31:05,282:INFO:           interpret: Not installed
2023-06-14 11:31:05,282:INFO:                umap: Not installed
2023-06-14 11:31:05,282:INFO:    pandas_profiling: Not installed
2023-06-14 11:31:05,282:INFO:  explainerdashboard: Not installed
2023-06-14 11:31:05,282:INFO:             autoviz: Not installed
2023-06-14 11:31:05,282:INFO:           fairlearn: Not installed
2023-06-14 11:31:05,283:INFO:             xgboost: 1.7.5
2023-06-14 11:31:05,283:INFO:            catboost: Not installed
2023-06-14 11:31:05,283:INFO:              kmodes: Not installed
2023-06-14 11:31:05,283:INFO:             mlxtend: Not installed
2023-06-14 11:31:05,283:INFO:       statsforecast: Not installed
2023-06-14 11:31:05,283:INFO:        tune_sklearn: Not installed
2023-06-14 11:31:05,283:INFO:                 ray: Not installed
2023-06-14 11:31:05,283:INFO:            hyperopt: Not installed
2023-06-14 11:31:05,283:INFO:              optuna: Not installed
2023-06-14 11:31:05,284:INFO:               skopt: Not installed
2023-06-14 11:31:05,284:INFO:              mlflow: Not installed
2023-06-14 11:31:05,284:INFO:              gradio: Not installed
2023-06-14 11:31:05,284:INFO:             fastapi: Not installed
2023-06-14 11:31:05,284:INFO:             uvicorn: Not installed
2023-06-14 11:31:05,284:INFO:              m2cgen: Not installed
2023-06-14 11:31:05,284:INFO:           evidently: Not installed
2023-06-14 11:31:05,284:INFO:               fugue: Not installed
2023-06-14 11:31:05,284:INFO:           streamlit: Not installed
2023-06-14 11:31:05,284:INFO:             prophet: Not installed
2023-06-14 11:31:05,284:INFO:None
2023-06-14 11:31:05,284:INFO:Set up data.
2023-06-14 11:31:05,289:INFO:Set up train/test split.
2023-06-14 11:31:05,292:INFO:Set up index.
2023-06-14 11:31:05,292:INFO:Set up folding strategy.
2023-06-14 11:31:05,292:INFO:Assigning column types.
2023-06-14 11:31:05,295:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 11:31:05,295:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,300:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,305:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,375:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,423:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:05,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:05,426:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,436:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,560:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,561:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:05,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:05,563:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 11:31:05,570:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,575:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,680:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:05,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:05,691:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,697:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,766:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,815:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:05,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:05,821:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 11:31:05,831:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,895:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,941:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:05,942:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:05,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:05,953:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,010:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,055:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,058:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 11:31:06,123:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,168:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,280:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,283:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 11:31:06,347:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,392:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:06,502:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,505:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 11:31:06,611:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,725:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:06,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:06,729:INFO:Preparing preprocessing pipeline...
2023-06-14 11:31:06,729:INFO:Set up simple imputation.
2023-06-14 11:31:06,730:INFO:Set up column name cleaning.
2023-06-14 11:31:06,791:INFO:Finished creating preprocessing pipeline.
2023-06-14 11:31:06,795:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 11:31:06,795:INFO:Creating final display dataframe.
2023-06-14 11:31:06,946:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3885
2023-06-14 11:31:07,115:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:07,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:07,228:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:07,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:07,231:INFO:setup() successfully completed in 2.13s...............
2023-06-14 11:31:07,231:INFO:Initializing create_model()
2023-06-14 11:31:07,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144A6875390>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 11:31:07,231:INFO:Checking exceptions
2023-06-14 11:31:07,247:INFO:Importing libraries
2023-06-14 11:31:07,247:INFO:Copying training dataset
2023-06-14 11:31:07,252:INFO:Defining folds
2023-06-14 11:31:07,252:INFO:Declaring metric variables
2023-06-14 11:31:07,256:INFO:Importing untrained model
2023-06-14 11:31:07,260:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 11:31:07,267:INFO:Starting cross validation
2023-06-14 11:31:07,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 11:31:24,547:INFO:PyCaret RegressionExperiment
2023-06-14 11:31:24,547:INFO:Logging name: reg-default-name
2023-06-14 11:31:24,547:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 11:31:24,547:INFO:version 3.0.2
2023-06-14 11:31:24,547:INFO:Initializing setup()
2023-06-14 11:31:24,547:INFO:self.USI: 519e
2023-06-14 11:31:24,547:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 11:31:24,548:INFO:Checking environment
2023-06-14 11:31:24,548:INFO:python_version: 3.10.5
2023-06-14 11:31:24,548:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 11:31:24,548:INFO:machine: AMD64
2023-06-14 11:31:24,548:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 11:31:24,552:INFO:Memory: svmem(total=17130000384, available=8890355712, percent=48.1, used=8239644672, free=8890355712)
2023-06-14 11:31:24,552:INFO:Physical Core: 4
2023-06-14 11:31:24,552:INFO:Logical Core: 4
2023-06-14 11:31:24,553:INFO:Checking libraries
2023-06-14 11:31:24,553:INFO:System:
2023-06-14 11:31:24,553:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 11:31:24,553:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 11:31:24,553:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 11:31:24,553:INFO:PyCaret required dependencies:
2023-06-14 11:31:24,554:INFO:                 pip: 23.0.1
2023-06-14 11:31:24,554:INFO:          setuptools: 58.1.0
2023-06-14 11:31:24,554:INFO:             pycaret: 3.0.2
2023-06-14 11:31:24,554:INFO:             IPython: 8.9.0
2023-06-14 11:31:24,554:INFO:          ipywidgets: 8.0.6
2023-06-14 11:31:24,554:INFO:                tqdm: 4.65.0
2023-06-14 11:31:24,554:INFO:               numpy: 1.23.5
2023-06-14 11:31:24,554:INFO:              pandas: 1.5.3
2023-06-14 11:31:24,554:INFO:              jinja2: 3.1.2
2023-06-14 11:31:24,554:INFO:               scipy: 1.10.1
2023-06-14 11:31:24,554:INFO:              joblib: 1.2.0
2023-06-14 11:31:24,554:INFO:             sklearn: 1.2.2
2023-06-14 11:31:24,554:INFO:                pyod: 1.0.9
2023-06-14 11:31:24,555:INFO:            imblearn: 0.10.1
2023-06-14 11:31:24,555:INFO:   category_encoders: 2.6.1
2023-06-14 11:31:24,555:INFO:            lightgbm: 3.3.5
2023-06-14 11:31:24,555:INFO:               numba: 0.57.0
2023-06-14 11:31:24,555:INFO:            requests: 2.28.2
2023-06-14 11:31:24,556:INFO:          matplotlib: 3.7.1
2023-06-14 11:31:24,556:INFO:          scikitplot: 0.3.7
2023-06-14 11:31:24,556:INFO:         yellowbrick: 1.5
2023-06-14 11:31:24,556:INFO:              plotly: 5.15.0
2023-06-14 11:31:24,556:INFO:             kaleido: 0.2.1
2023-06-14 11:31:24,556:INFO:         statsmodels: 0.14.0
2023-06-14 11:31:24,556:INFO:              sktime: 0.17.0
2023-06-14 11:31:24,557:INFO:               tbats: 1.1.3
2023-06-14 11:31:24,557:INFO:            pmdarima: 2.0.3
2023-06-14 11:31:24,557:INFO:              psutil: 5.9.4
2023-06-14 11:31:24,557:INFO:PyCaret optional dependencies:
2023-06-14 11:31:24,557:INFO:                shap: Not installed
2023-06-14 11:31:24,557:INFO:           interpret: Not installed
2023-06-14 11:31:24,557:INFO:                umap: Not installed
2023-06-14 11:31:24,557:INFO:    pandas_profiling: Not installed
2023-06-14 11:31:24,557:INFO:  explainerdashboard: Not installed
2023-06-14 11:31:24,557:INFO:             autoviz: Not installed
2023-06-14 11:31:24,557:INFO:           fairlearn: Not installed
2023-06-14 11:31:24,557:INFO:             xgboost: 1.7.5
2023-06-14 11:31:24,558:INFO:            catboost: Not installed
2023-06-14 11:31:24,558:INFO:              kmodes: Not installed
2023-06-14 11:31:24,558:INFO:             mlxtend: Not installed
2023-06-14 11:31:24,558:INFO:       statsforecast: Not installed
2023-06-14 11:31:24,558:INFO:        tune_sklearn: Not installed
2023-06-14 11:31:24,558:INFO:                 ray: Not installed
2023-06-14 11:31:24,558:INFO:            hyperopt: Not installed
2023-06-14 11:31:24,558:INFO:              optuna: Not installed
2023-06-14 11:31:24,558:INFO:               skopt: Not installed
2023-06-14 11:31:24,559:INFO:              mlflow: Not installed
2023-06-14 11:31:24,559:INFO:              gradio: Not installed
2023-06-14 11:31:24,559:INFO:             fastapi: Not installed
2023-06-14 11:31:24,559:INFO:             uvicorn: Not installed
2023-06-14 11:31:24,559:INFO:              m2cgen: Not installed
2023-06-14 11:31:24,559:INFO:           evidently: Not installed
2023-06-14 11:31:24,559:INFO:               fugue: Not installed
2023-06-14 11:31:24,559:INFO:           streamlit: Not installed
2023-06-14 11:31:24,559:INFO:             prophet: Not installed
2023-06-14 11:31:24,559:INFO:None
2023-06-14 11:31:24,559:INFO:Set up data.
2023-06-14 11:31:24,564:INFO:Set up train/test split.
2023-06-14 11:31:24,570:INFO:Set up index.
2023-06-14 11:31:24,570:INFO:Set up folding strategy.
2023-06-14 11:31:24,570:INFO:Assigning column types.
2023-06-14 11:31:24,573:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 11:31:24,573:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,578:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,650:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,693:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,694:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:24,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:24,697:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,702:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,706:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,808:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:24,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:24,812:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 11:31:24,817:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,822:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,883:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,930:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:24,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:24,938:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 11:31:24,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,008:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,055:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,058:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 11:31:25,068:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,171:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,172:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,289:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,292:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 11:31:25,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,426:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,518:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,602:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,603:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,620:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 11:31:25,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,736:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 11:31:25,852:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:25,855:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 11:31:25,969:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:25,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:26,087:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:26,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:26,091:INFO:Preparing preprocessing pipeline...
2023-06-14 11:31:26,091:INFO:Set up simple imputation.
2023-06-14 11:31:26,092:INFO:Set up column name cleaning.
2023-06-14 11:31:26,150:INFO:Finished creating preprocessing pipeline.
2023-06-14 11:31:26,154:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 11:31:26,154:INFO:Creating final display dataframe.
2023-06-14 11:31:26,340:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              519e
2023-06-14 11:31:26,548:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:26,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:26,662:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 11:31:26,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 11:31:26,665:INFO:setup() successfully completed in 2.28s...............
2023-06-14 11:31:26,665:INFO:Initializing tune_model()
2023-06-14 11:31:26,665:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144AEF2A4D0>)
2023-06-14 11:31:26,665:INFO:Checking exceptions
2023-06-14 13:11:49,622:INFO:PyCaret RegressionExperiment
2023-06-14 13:11:49,622:INFO:Logging name: reg-default-name
2023-06-14 13:11:49,622:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 13:11:49,622:INFO:version 3.0.2
2023-06-14 13:11:49,622:INFO:Initializing setup()
2023-06-14 13:11:49,622:INFO:self.USI: 0fa2
2023-06-14 13:11:49,622:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 13:11:49,623:INFO:Checking environment
2023-06-14 13:11:49,623:INFO:python_version: 3.10.5
2023-06-14 13:11:49,623:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 13:11:49,623:INFO:machine: AMD64
2023-06-14 13:11:49,623:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 13:11:49,626:INFO:Memory: svmem(total=17130000384, available=9247232000, percent=46.0, used=7882768384, free=9247232000)
2023-06-14 13:11:49,627:INFO:Physical Core: 4
2023-06-14 13:11:49,627:INFO:Logical Core: 4
2023-06-14 13:11:49,627:INFO:Checking libraries
2023-06-14 13:11:49,627:INFO:System:
2023-06-14 13:11:49,627:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 13:11:49,627:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 13:11:49,627:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 13:11:49,627:INFO:PyCaret required dependencies:
2023-06-14 13:11:49,627:INFO:                 pip: 23.0.1
2023-06-14 13:11:49,627:INFO:          setuptools: 58.1.0
2023-06-14 13:11:49,627:INFO:             pycaret: 3.0.2
2023-06-14 13:11:49,627:INFO:             IPython: 8.9.0
2023-06-14 13:11:49,627:INFO:          ipywidgets: 8.0.6
2023-06-14 13:11:49,627:INFO:                tqdm: 4.65.0
2023-06-14 13:11:49,628:INFO:               numpy: 1.23.5
2023-06-14 13:11:49,628:INFO:              pandas: 1.5.3
2023-06-14 13:11:49,628:INFO:              jinja2: 3.1.2
2023-06-14 13:11:49,628:INFO:               scipy: 1.10.1
2023-06-14 13:11:49,628:INFO:              joblib: 1.2.0
2023-06-14 13:11:49,628:INFO:             sklearn: 1.2.2
2023-06-14 13:11:49,628:INFO:                pyod: 1.0.9
2023-06-14 13:11:49,628:INFO:            imblearn: 0.10.1
2023-06-14 13:11:49,628:INFO:   category_encoders: 2.6.1
2023-06-14 13:11:49,628:INFO:            lightgbm: 3.3.5
2023-06-14 13:11:49,628:INFO:               numba: 0.57.0
2023-06-14 13:11:49,628:INFO:            requests: 2.28.2
2023-06-14 13:11:49,628:INFO:          matplotlib: 3.7.1
2023-06-14 13:11:49,628:INFO:          scikitplot: 0.3.7
2023-06-14 13:11:49,628:INFO:         yellowbrick: 1.5
2023-06-14 13:11:49,628:INFO:              plotly: 5.15.0
2023-06-14 13:11:49,628:INFO:             kaleido: 0.2.1
2023-06-14 13:11:49,629:INFO:         statsmodels: 0.14.0
2023-06-14 13:11:49,629:INFO:              sktime: 0.17.0
2023-06-14 13:11:49,629:INFO:               tbats: 1.1.3
2023-06-14 13:11:49,629:INFO:            pmdarima: 2.0.3
2023-06-14 13:11:49,629:INFO:              psutil: 5.9.4
2023-06-14 13:11:49,629:INFO:PyCaret optional dependencies:
2023-06-14 13:11:49,629:INFO:                shap: Not installed
2023-06-14 13:11:49,629:INFO:           interpret: Not installed
2023-06-14 13:11:49,630:INFO:                umap: Not installed
2023-06-14 13:11:49,631:INFO:    pandas_profiling: Not installed
2023-06-14 13:11:49,631:INFO:  explainerdashboard: Not installed
2023-06-14 13:11:49,631:INFO:             autoviz: Not installed
2023-06-14 13:11:49,631:INFO:           fairlearn: Not installed
2023-06-14 13:11:49,631:INFO:             xgboost: 1.7.5
2023-06-14 13:11:49,631:INFO:            catboost: Not installed
2023-06-14 13:11:49,631:INFO:              kmodes: Not installed
2023-06-14 13:11:49,631:INFO:             mlxtend: Not installed
2023-06-14 13:11:49,631:INFO:       statsforecast: Not installed
2023-06-14 13:11:49,631:INFO:        tune_sklearn: Not installed
2023-06-14 13:11:49,631:INFO:                 ray: Not installed
2023-06-14 13:11:49,631:INFO:            hyperopt: Not installed
2023-06-14 13:11:49,631:INFO:              optuna: Not installed
2023-06-14 13:11:49,631:INFO:               skopt: Not installed
2023-06-14 13:11:49,631:INFO:              mlflow: Not installed
2023-06-14 13:11:49,631:INFO:              gradio: Not installed
2023-06-14 13:11:49,632:INFO:             fastapi: Not installed
2023-06-14 13:11:49,632:INFO:             uvicorn: Not installed
2023-06-14 13:11:49,632:INFO:              m2cgen: Not installed
2023-06-14 13:11:49,632:INFO:           evidently: Not installed
2023-06-14 13:11:49,632:INFO:               fugue: Not installed
2023-06-14 13:11:49,632:INFO:           streamlit: Not installed
2023-06-14 13:11:49,632:INFO:             prophet: Not installed
2023-06-14 13:11:49,632:INFO:None
2023-06-14 13:11:49,632:INFO:Set up data.
2023-06-14 13:11:49,638:INFO:Set up train/test split.
2023-06-14 13:11:49,641:INFO:Set up index.
2023-06-14 13:11:49,642:INFO:Set up folding strategy.
2023-06-14 13:11:49,642:INFO:Assigning column types.
2023-06-14 13:11:49,649:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 13:11:49,650:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,657:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,662:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,774:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:49,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:49,777:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,782:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,890:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:49,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:49,895:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 13:11:49,900:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,905:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:49,964:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,016:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,017:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,025:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,135:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,138:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 13:11:50,148:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,259:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,273:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,388:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,391:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 13:11:50,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,518:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,763:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,766:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 13:11:50,832:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,874:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:11:50,981:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:50,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:50,984:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 13:11:51,089:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:51,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:51,201:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:51,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:51,207:INFO:Preparing preprocessing pipeline...
2023-06-14 13:11:51,207:INFO:Set up simple imputation.
2023-06-14 13:11:51,207:INFO:Set up column name cleaning.
2023-06-14 13:11:51,262:INFO:Finished creating preprocessing pipeline.
2023-06-14 13:11:51,267:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 13:11:51,267:INFO:Creating final display dataframe.
2023-06-14 13:11:51,433:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0fa2
2023-06-14 13:11:51,552:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:51,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:51,664:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:11:51,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:11:51,667:INFO:setup() successfully completed in 2.21s...............
2023-06-14 13:11:51,667:INFO:Initializing create_model()
2023-06-14 13:11:51,667:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B0649CF0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 13:11:51,667:INFO:Checking exceptions
2023-06-14 13:11:51,681:INFO:Importing libraries
2023-06-14 13:11:51,681:INFO:Copying training dataset
2023-06-14 13:11:51,689:INFO:Defining folds
2023-06-14 13:11:51,689:INFO:Declaring metric variables
2023-06-14 13:11:51,693:INFO:Importing untrained model
2023-06-14 13:11:51,698:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 13:11:51,706:INFO:Starting cross validation
2023-06-14 13:11:51,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 13:12:54,829:INFO:PyCaret RegressionExperiment
2023-06-14 13:12:54,829:INFO:Logging name: reg-default-name
2023-06-14 13:12:54,829:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 13:12:54,829:INFO:version 3.0.2
2023-06-14 13:12:54,829:INFO:Initializing setup()
2023-06-14 13:12:54,829:INFO:self.USI: f5d4
2023-06-14 13:12:54,829:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 13:12:54,829:INFO:Checking environment
2023-06-14 13:12:54,829:INFO:python_version: 3.10.5
2023-06-14 13:12:54,829:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 13:12:54,830:INFO:machine: AMD64
2023-06-14 13:12:54,830:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 13:12:54,833:INFO:Memory: svmem(total=17130000384, available=8736792576, percent=49.0, used=8393207808, free=8736792576)
2023-06-14 13:12:54,833:INFO:Physical Core: 4
2023-06-14 13:12:54,833:INFO:Logical Core: 4
2023-06-14 13:12:54,833:INFO:Checking libraries
2023-06-14 13:12:54,833:INFO:System:
2023-06-14 13:12:54,833:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 13:12:54,833:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 13:12:54,833:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 13:12:54,833:INFO:PyCaret required dependencies:
2023-06-14 13:12:54,834:INFO:                 pip: 23.0.1
2023-06-14 13:12:54,834:INFO:          setuptools: 58.1.0
2023-06-14 13:12:54,834:INFO:             pycaret: 3.0.2
2023-06-14 13:12:54,834:INFO:             IPython: 8.9.0
2023-06-14 13:12:54,834:INFO:          ipywidgets: 8.0.6
2023-06-14 13:12:54,834:INFO:                tqdm: 4.65.0
2023-06-14 13:12:54,834:INFO:               numpy: 1.23.5
2023-06-14 13:12:54,834:INFO:              pandas: 1.5.3
2023-06-14 13:12:54,834:INFO:              jinja2: 3.1.2
2023-06-14 13:12:54,834:INFO:               scipy: 1.10.1
2023-06-14 13:12:54,834:INFO:              joblib: 1.2.0
2023-06-14 13:12:54,834:INFO:             sklearn: 1.2.2
2023-06-14 13:12:54,834:INFO:                pyod: 1.0.9
2023-06-14 13:12:54,834:INFO:            imblearn: 0.10.1
2023-06-14 13:12:54,835:INFO:   category_encoders: 2.6.1
2023-06-14 13:12:54,835:INFO:            lightgbm: 3.3.5
2023-06-14 13:12:54,835:INFO:               numba: 0.57.0
2023-06-14 13:12:54,835:INFO:            requests: 2.28.2
2023-06-14 13:12:54,835:INFO:          matplotlib: 3.7.1
2023-06-14 13:12:54,835:INFO:          scikitplot: 0.3.7
2023-06-14 13:12:54,835:INFO:         yellowbrick: 1.5
2023-06-14 13:12:54,835:INFO:              plotly: 5.15.0
2023-06-14 13:12:54,835:INFO:             kaleido: 0.2.1
2023-06-14 13:12:54,835:INFO:         statsmodels: 0.14.0
2023-06-14 13:12:54,835:INFO:              sktime: 0.17.0
2023-06-14 13:12:54,835:INFO:               tbats: 1.1.3
2023-06-14 13:12:54,835:INFO:            pmdarima: 2.0.3
2023-06-14 13:12:54,835:INFO:              psutil: 5.9.4
2023-06-14 13:12:54,835:INFO:PyCaret optional dependencies:
2023-06-14 13:12:54,835:INFO:                shap: Not installed
2023-06-14 13:12:54,835:INFO:           interpret: Not installed
2023-06-14 13:12:54,835:INFO:                umap: Not installed
2023-06-14 13:12:54,835:INFO:    pandas_profiling: Not installed
2023-06-14 13:12:54,835:INFO:  explainerdashboard: Not installed
2023-06-14 13:12:54,835:INFO:             autoviz: Not installed
2023-06-14 13:12:54,835:INFO:           fairlearn: Not installed
2023-06-14 13:12:54,835:INFO:             xgboost: 1.7.5
2023-06-14 13:12:54,835:INFO:            catboost: Not installed
2023-06-14 13:12:54,835:INFO:              kmodes: Not installed
2023-06-14 13:12:54,835:INFO:             mlxtend: Not installed
2023-06-14 13:12:54,835:INFO:       statsforecast: Not installed
2023-06-14 13:12:54,835:INFO:        tune_sklearn: Not installed
2023-06-14 13:12:54,836:INFO:                 ray: Not installed
2023-06-14 13:12:54,836:INFO:            hyperopt: Not installed
2023-06-14 13:12:54,836:INFO:              optuna: Not installed
2023-06-14 13:12:54,836:INFO:               skopt: Not installed
2023-06-14 13:12:54,836:INFO:              mlflow: Not installed
2023-06-14 13:12:54,836:INFO:              gradio: Not installed
2023-06-14 13:12:54,837:INFO:             fastapi: Not installed
2023-06-14 13:12:54,837:INFO:             uvicorn: Not installed
2023-06-14 13:12:54,837:INFO:              m2cgen: Not installed
2023-06-14 13:12:54,837:INFO:           evidently: Not installed
2023-06-14 13:12:54,837:INFO:               fugue: Not installed
2023-06-14 13:12:54,837:INFO:           streamlit: Not installed
2023-06-14 13:12:54,837:INFO:             prophet: Not installed
2023-06-14 13:12:54,837:INFO:None
2023-06-14 13:12:54,837:INFO:Set up data.
2023-06-14 13:12:54,849:INFO:Set up train/test split.
2023-06-14 13:12:54,855:INFO:Set up index.
2023-06-14 13:12:54,855:INFO:Set up folding strategy.
2023-06-14 13:12:54,856:INFO:Assigning column types.
2023-06-14 13:12:54,859:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 13:12:54,860:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,864:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,869:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,974:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:54,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:54,978:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,983:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:12:54,987:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,091:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,095:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 13:12:55,101:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,105:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,161:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,206:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,215:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,219:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,368:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,371:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 13:12:55,384:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,521:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,533:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,631:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,634:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 13:12:55,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,772:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,772:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,842:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:12:55,891:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:55,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:55,896:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 13:12:55,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:56,011:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:12:56,120:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,122:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 13:12:56,229:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,336:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,340:INFO:Preparing preprocessing pipeline...
2023-06-14 13:12:56,340:INFO:Set up simple imputation.
2023-06-14 13:12:56,341:INFO:Set up column name cleaning.
2023-06-14 13:12:56,394:INFO:Finished creating preprocessing pipeline.
2023-06-14 13:12:56,398:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 13:12:56,398:INFO:Creating final display dataframe.
2023-06-14 13:12:56,563:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f5d4
2023-06-14 13:12:56,689:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,800:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:12:56,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:12:56,803:INFO:setup() successfully completed in 2.13s...............
2023-06-14 13:12:56,803:INFO:Initializing create_model()
2023-06-14 13:12:56,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2263730>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 13:12:56,803:INFO:Checking exceptions
2023-06-14 13:12:56,819:INFO:Importing libraries
2023-06-14 13:12:56,819:INFO:Copying training dataset
2023-06-14 13:12:56,824:INFO:Defining folds
2023-06-14 13:12:56,824:INFO:Declaring metric variables
2023-06-14 13:12:56,828:INFO:Importing untrained model
2023-06-14 13:12:56,834:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 13:12:56,842:INFO:Starting cross validation
2023-06-14 13:12:56,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 13:13:54,853:INFO:PyCaret RegressionExperiment
2023-06-14 13:13:54,854:INFO:Logging name: reg-default-name
2023-06-14 13:13:54,854:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 13:13:54,854:INFO:version 3.0.2
2023-06-14 13:13:54,854:INFO:Initializing setup()
2023-06-14 13:13:54,854:INFO:self.USI: 0d83
2023-06-14 13:13:54,854:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 13:13:54,854:INFO:Checking environment
2023-06-14 13:13:54,854:INFO:python_version: 3.10.5
2023-06-14 13:13:54,854:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 13:13:54,854:INFO:machine: AMD64
2023-06-14 13:13:54,854:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 13:13:54,858:INFO:Memory: svmem(total=17130000384, available=8789053440, percent=48.7, used=8340946944, free=8789053440)
2023-06-14 13:13:54,859:INFO:Physical Core: 4
2023-06-14 13:13:54,859:INFO:Logical Core: 4
2023-06-14 13:13:54,859:INFO:Checking libraries
2023-06-14 13:13:54,859:INFO:System:
2023-06-14 13:13:54,859:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 13:13:54,859:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 13:13:54,859:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 13:13:54,859:INFO:PyCaret required dependencies:
2023-06-14 13:13:54,859:INFO:                 pip: 23.0.1
2023-06-14 13:13:54,859:INFO:          setuptools: 58.1.0
2023-06-14 13:13:54,859:INFO:             pycaret: 3.0.2
2023-06-14 13:13:54,859:INFO:             IPython: 8.9.0
2023-06-14 13:13:54,860:INFO:          ipywidgets: 8.0.6
2023-06-14 13:13:54,860:INFO:                tqdm: 4.65.0
2023-06-14 13:13:54,860:INFO:               numpy: 1.23.5
2023-06-14 13:13:54,860:INFO:              pandas: 1.5.3
2023-06-14 13:13:54,860:INFO:              jinja2: 3.1.2
2023-06-14 13:13:54,860:INFO:               scipy: 1.10.1
2023-06-14 13:13:54,860:INFO:              joblib: 1.2.0
2023-06-14 13:13:54,861:INFO:             sklearn: 1.2.2
2023-06-14 13:13:54,861:INFO:                pyod: 1.0.9
2023-06-14 13:13:54,861:INFO:            imblearn: 0.10.1
2023-06-14 13:13:54,861:INFO:   category_encoders: 2.6.1
2023-06-14 13:13:54,861:INFO:            lightgbm: 3.3.5
2023-06-14 13:13:54,861:INFO:               numba: 0.57.0
2023-06-14 13:13:54,861:INFO:            requests: 2.28.2
2023-06-14 13:13:54,861:INFO:          matplotlib: 3.7.1
2023-06-14 13:13:54,861:INFO:          scikitplot: 0.3.7
2023-06-14 13:13:54,861:INFO:         yellowbrick: 1.5
2023-06-14 13:13:54,861:INFO:              plotly: 5.15.0
2023-06-14 13:13:54,861:INFO:             kaleido: 0.2.1
2023-06-14 13:13:54,861:INFO:         statsmodels: 0.14.0
2023-06-14 13:13:54,861:INFO:              sktime: 0.17.0
2023-06-14 13:13:54,861:INFO:               tbats: 1.1.3
2023-06-14 13:13:54,862:INFO:            pmdarima: 2.0.3
2023-06-14 13:13:54,862:INFO:              psutil: 5.9.4
2023-06-14 13:13:54,862:INFO:PyCaret optional dependencies:
2023-06-14 13:13:54,862:INFO:                shap: Not installed
2023-06-14 13:13:54,862:INFO:           interpret: Not installed
2023-06-14 13:13:54,862:INFO:                umap: Not installed
2023-06-14 13:13:54,862:INFO:    pandas_profiling: Not installed
2023-06-14 13:13:54,862:INFO:  explainerdashboard: Not installed
2023-06-14 13:13:54,862:INFO:             autoviz: Not installed
2023-06-14 13:13:54,862:INFO:           fairlearn: Not installed
2023-06-14 13:13:54,862:INFO:             xgboost: 1.7.5
2023-06-14 13:13:54,862:INFO:            catboost: Not installed
2023-06-14 13:13:54,862:INFO:              kmodes: Not installed
2023-06-14 13:13:54,862:INFO:             mlxtend: Not installed
2023-06-14 13:13:54,862:INFO:       statsforecast: Not installed
2023-06-14 13:13:54,862:INFO:        tune_sklearn: Not installed
2023-06-14 13:13:54,863:INFO:                 ray: Not installed
2023-06-14 13:13:54,863:INFO:            hyperopt: Not installed
2023-06-14 13:13:54,863:INFO:              optuna: Not installed
2023-06-14 13:13:54,863:INFO:               skopt: Not installed
2023-06-14 13:13:54,863:INFO:              mlflow: Not installed
2023-06-14 13:13:54,863:INFO:              gradio: Not installed
2023-06-14 13:13:54,863:INFO:             fastapi: Not installed
2023-06-14 13:13:54,863:INFO:             uvicorn: Not installed
2023-06-14 13:13:54,863:INFO:              m2cgen: Not installed
2023-06-14 13:13:54,863:INFO:           evidently: Not installed
2023-06-14 13:13:54,863:INFO:               fugue: Not installed
2023-06-14 13:13:54,863:INFO:           streamlit: Not installed
2023-06-14 13:13:54,863:INFO:             prophet: Not installed
2023-06-14 13:13:54,864:INFO:None
2023-06-14 13:13:54,864:INFO:Set up data.
2023-06-14 13:13:54,869:INFO:Set up train/test split.
2023-06-14 13:13:54,874:INFO:Set up index.
2023-06-14 13:13:54,874:INFO:Set up folding strategy.
2023-06-14 13:13:54,874:INFO:Assigning column types.
2023-06-14 13:13:54,878:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 13:13:54,878:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:13:54,883:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:13:54,887:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:54,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,003:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,005:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,011:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,073:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,117:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,119:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 13:13:55,125:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,130:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,258:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,265:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,270:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,332:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,404:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,411:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 13:13:55,419:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,525:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,537:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,590:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,635:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,638:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 13:13:55,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,752:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:13:55,900:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:55,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:55,902:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 13:13:55,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:56,013:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:13:56,121:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,124:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 13:13:56,228:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,336:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,341:INFO:Preparing preprocessing pipeline...
2023-06-14 13:13:56,341:INFO:Set up simple imputation.
2023-06-14 13:13:56,342:INFO:Set up column name cleaning.
2023-06-14 13:13:56,396:INFO:Finished creating preprocessing pipeline.
2023-06-14 13:13:56,400:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 13:13:56,400:INFO:Creating final display dataframe.
2023-06-14 13:13:56,549:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              0d83
2023-06-14 13:13:56,669:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,778:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:13:56,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:13:56,781:INFO:setup() successfully completed in 2.09s...............
2023-06-14 13:13:56,781:INFO:Initializing tune_model()
2023-06-14 13:13:56,781:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2552260>)
2023-06-14 13:13:56,781:INFO:Checking exceptions
2023-06-14 13:14:40,924:INFO:PyCaret RegressionExperiment
2023-06-14 13:14:40,924:INFO:Logging name: reg-default-name
2023-06-14 13:14:40,924:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 13:14:40,924:INFO:version 3.0.2
2023-06-14 13:14:40,924:INFO:Initializing setup()
2023-06-14 13:14:40,924:INFO:self.USI: b626
2023-06-14 13:14:40,924:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 13:14:40,924:INFO:Checking environment
2023-06-14 13:14:40,924:INFO:python_version: 3.10.5
2023-06-14 13:14:40,924:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 13:14:40,925:INFO:machine: AMD64
2023-06-14 13:14:40,925:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 13:14:40,928:INFO:Memory: svmem(total=17130000384, available=8768036864, percent=48.8, used=8361963520, free=8768036864)
2023-06-14 13:14:40,928:INFO:Physical Core: 4
2023-06-14 13:14:40,928:INFO:Logical Core: 4
2023-06-14 13:14:40,928:INFO:Checking libraries
2023-06-14 13:14:40,928:INFO:System:
2023-06-14 13:14:40,928:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 13:14:40,928:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 13:14:40,928:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 13:14:40,928:INFO:PyCaret required dependencies:
2023-06-14 13:14:40,928:INFO:                 pip: 23.0.1
2023-06-14 13:14:40,928:INFO:          setuptools: 58.1.0
2023-06-14 13:14:40,928:INFO:             pycaret: 3.0.2
2023-06-14 13:14:40,928:INFO:             IPython: 8.9.0
2023-06-14 13:14:40,929:INFO:          ipywidgets: 8.0.6
2023-06-14 13:14:40,929:INFO:                tqdm: 4.65.0
2023-06-14 13:14:40,929:INFO:               numpy: 1.23.5
2023-06-14 13:14:40,929:INFO:              pandas: 1.5.3
2023-06-14 13:14:40,929:INFO:              jinja2: 3.1.2
2023-06-14 13:14:40,929:INFO:               scipy: 1.10.1
2023-06-14 13:14:40,929:INFO:              joblib: 1.2.0
2023-06-14 13:14:40,929:INFO:             sklearn: 1.2.2
2023-06-14 13:14:40,929:INFO:                pyod: 1.0.9
2023-06-14 13:14:40,929:INFO:            imblearn: 0.10.1
2023-06-14 13:14:40,929:INFO:   category_encoders: 2.6.1
2023-06-14 13:14:40,929:INFO:            lightgbm: 3.3.5
2023-06-14 13:14:40,929:INFO:               numba: 0.57.0
2023-06-14 13:14:40,929:INFO:            requests: 2.28.2
2023-06-14 13:14:40,929:INFO:          matplotlib: 3.7.1
2023-06-14 13:14:40,930:INFO:          scikitplot: 0.3.7
2023-06-14 13:14:40,930:INFO:         yellowbrick: 1.5
2023-06-14 13:14:40,930:INFO:              plotly: 5.15.0
2023-06-14 13:14:40,930:INFO:             kaleido: 0.2.1
2023-06-14 13:14:40,930:INFO:         statsmodels: 0.14.0
2023-06-14 13:14:40,930:INFO:              sktime: 0.17.0
2023-06-14 13:14:40,930:INFO:               tbats: 1.1.3
2023-06-14 13:14:40,930:INFO:            pmdarima: 2.0.3
2023-06-14 13:14:40,930:INFO:              psutil: 5.9.4
2023-06-14 13:14:40,930:INFO:PyCaret optional dependencies:
2023-06-14 13:14:40,930:INFO:                shap: Not installed
2023-06-14 13:14:40,930:INFO:           interpret: Not installed
2023-06-14 13:14:40,930:INFO:                umap: Not installed
2023-06-14 13:14:40,931:INFO:    pandas_profiling: Not installed
2023-06-14 13:14:40,931:INFO:  explainerdashboard: Not installed
2023-06-14 13:14:40,931:INFO:             autoviz: Not installed
2023-06-14 13:14:40,931:INFO:           fairlearn: Not installed
2023-06-14 13:14:40,931:INFO:             xgboost: 1.7.5
2023-06-14 13:14:40,931:INFO:            catboost: Not installed
2023-06-14 13:14:40,931:INFO:              kmodes: Not installed
2023-06-14 13:14:40,931:INFO:             mlxtend: Not installed
2023-06-14 13:14:40,931:INFO:       statsforecast: Not installed
2023-06-14 13:14:40,931:INFO:        tune_sklearn: Not installed
2023-06-14 13:14:40,931:INFO:                 ray: Not installed
2023-06-14 13:14:40,931:INFO:            hyperopt: Not installed
2023-06-14 13:14:40,931:INFO:              optuna: Not installed
2023-06-14 13:14:40,931:INFO:               skopt: Not installed
2023-06-14 13:14:40,931:INFO:              mlflow: Not installed
2023-06-14 13:14:40,931:INFO:              gradio: Not installed
2023-06-14 13:14:40,932:INFO:             fastapi: Not installed
2023-06-14 13:14:40,932:INFO:             uvicorn: Not installed
2023-06-14 13:14:40,932:INFO:              m2cgen: Not installed
2023-06-14 13:14:40,932:INFO:           evidently: Not installed
2023-06-14 13:14:40,932:INFO:               fugue: Not installed
2023-06-14 13:14:40,932:INFO:           streamlit: Not installed
2023-06-14 13:14:40,932:INFO:             prophet: Not installed
2023-06-14 13:14:40,932:INFO:None
2023-06-14 13:14:40,932:INFO:Set up data.
2023-06-14 13:14:40,938:INFO:Set up train/test split.
2023-06-14 13:14:40,941:INFO:Set up index.
2023-06-14 13:14:40,941:INFO:Set up folding strategy.
2023-06-14 13:14:40,941:INFO:Assigning column types.
2023-06-14 13:14:40,944:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 13:14:40,944:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:14:40,948:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:14:40,956:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,055:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,058:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,062:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,066:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,121:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,163:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,165:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 13:14:41,170:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,174:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,272:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,283:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,381:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,382:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,384:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 13:14:41,394:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,450:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,494:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,505:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,560:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,600:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,602:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,605:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 13:14:41,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,710:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,711:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,789:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,869:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:41,873:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 13:14:41,940:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:41,983:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:41,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:14:42,094:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:42,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,096:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 13:14:42,201:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:42,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,310:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:42,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,315:INFO:Preparing preprocessing pipeline...
2023-06-14 13:14:42,315:INFO:Set up simple imputation.
2023-06-14 13:14:42,315:INFO:Set up column name cleaning.
2023-06-14 13:14:42,369:INFO:Finished creating preprocessing pipeline.
2023-06-14 13:14:42,374:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 13:14:42,374:INFO:Creating final display dataframe.
2023-06-14 13:14:42,523:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b626
2023-06-14 13:14:42,642:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:42,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,750:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:14:42,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:14:42,753:INFO:setup() successfully completed in 2.0s...............
2023-06-14 13:14:42,755:INFO:Initializing create_model()
2023-06-14 13:14:42,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B24C3580>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 13:14:42,755:INFO:Checking exceptions
2023-06-14 13:14:42,774:INFO:Importing libraries
2023-06-14 13:14:42,775:INFO:Copying training dataset
2023-06-14 13:14:42,779:INFO:Defining folds
2023-06-14 13:14:42,779:INFO:Declaring metric variables
2023-06-14 13:14:42,784:INFO:Importing untrained model
2023-06-14 13:14:42,788:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 13:14:42,797:INFO:Starting cross validation
2023-06-14 13:14:42,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 13:25:16,443:INFO:PyCaret RegressionExperiment
2023-06-14 13:25:16,443:INFO:Logging name: reg-default-name
2023-06-14 13:25:16,443:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 13:25:16,443:INFO:version 3.0.2
2023-06-14 13:25:16,443:INFO:Initializing setup()
2023-06-14 13:25:16,443:INFO:self.USI: 1e47
2023-06-14 13:25:16,443:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 13:25:16,443:INFO:Checking environment
2023-06-14 13:25:16,443:INFO:python_version: 3.10.5
2023-06-14 13:25:16,443:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 13:25:16,443:INFO:machine: AMD64
2023-06-14 13:25:16,443:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 13:25:16,447:INFO:Memory: svmem(total=17130000384, available=9236357120, percent=46.1, used=7893643264, free=9236357120)
2023-06-14 13:25:16,447:INFO:Physical Core: 4
2023-06-14 13:25:16,447:INFO:Logical Core: 4
2023-06-14 13:25:16,447:INFO:Checking libraries
2023-06-14 13:25:16,448:INFO:System:
2023-06-14 13:25:16,448:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 13:25:16,448:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 13:25:16,448:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 13:25:16,449:INFO:PyCaret required dependencies:
2023-06-14 13:25:16,449:INFO:                 pip: 23.0.1
2023-06-14 13:25:16,449:INFO:          setuptools: 58.1.0
2023-06-14 13:25:16,449:INFO:             pycaret: 3.0.2
2023-06-14 13:25:16,449:INFO:             IPython: 8.9.0
2023-06-14 13:25:16,449:INFO:          ipywidgets: 8.0.6
2023-06-14 13:25:16,449:INFO:                tqdm: 4.65.0
2023-06-14 13:25:16,449:INFO:               numpy: 1.23.5
2023-06-14 13:25:16,449:INFO:              pandas: 1.5.3
2023-06-14 13:25:16,450:INFO:              jinja2: 3.1.2
2023-06-14 13:25:16,450:INFO:               scipy: 1.10.1
2023-06-14 13:25:16,450:INFO:              joblib: 1.2.0
2023-06-14 13:25:16,450:INFO:             sklearn: 1.2.2
2023-06-14 13:25:16,450:INFO:                pyod: 1.0.9
2023-06-14 13:25:16,450:INFO:            imblearn: 0.10.1
2023-06-14 13:25:16,450:INFO:   category_encoders: 2.6.1
2023-06-14 13:25:16,450:INFO:            lightgbm: 3.3.5
2023-06-14 13:25:16,450:INFO:               numba: 0.57.0
2023-06-14 13:25:16,450:INFO:            requests: 2.28.2
2023-06-14 13:25:16,450:INFO:          matplotlib: 3.7.1
2023-06-14 13:25:16,450:INFO:          scikitplot: 0.3.7
2023-06-14 13:25:16,450:INFO:         yellowbrick: 1.5
2023-06-14 13:25:16,451:INFO:              plotly: 5.15.0
2023-06-14 13:25:16,451:INFO:             kaleido: 0.2.1
2023-06-14 13:25:16,451:INFO:         statsmodels: 0.14.0
2023-06-14 13:25:16,451:INFO:              sktime: 0.17.0
2023-06-14 13:25:16,451:INFO:               tbats: 1.1.3
2023-06-14 13:25:16,451:INFO:            pmdarima: 2.0.3
2023-06-14 13:25:16,451:INFO:              psutil: 5.9.4
2023-06-14 13:25:16,451:INFO:PyCaret optional dependencies:
2023-06-14 13:25:16,451:INFO:                shap: Not installed
2023-06-14 13:25:16,451:INFO:           interpret: Not installed
2023-06-14 13:25:16,451:INFO:                umap: Not installed
2023-06-14 13:25:16,451:INFO:    pandas_profiling: Not installed
2023-06-14 13:25:16,451:INFO:  explainerdashboard: Not installed
2023-06-14 13:25:16,451:INFO:             autoviz: Not installed
2023-06-14 13:25:16,451:INFO:           fairlearn: Not installed
2023-06-14 13:25:16,451:INFO:             xgboost: 1.7.5
2023-06-14 13:25:16,452:INFO:            catboost: Not installed
2023-06-14 13:25:16,452:INFO:              kmodes: Not installed
2023-06-14 13:25:16,452:INFO:             mlxtend: Not installed
2023-06-14 13:25:16,452:INFO:       statsforecast: Not installed
2023-06-14 13:25:16,452:INFO:        tune_sklearn: Not installed
2023-06-14 13:25:16,452:INFO:                 ray: Not installed
2023-06-14 13:25:16,452:INFO:            hyperopt: Not installed
2023-06-14 13:25:16,452:INFO:              optuna: Not installed
2023-06-14 13:25:16,452:INFO:               skopt: Not installed
2023-06-14 13:25:16,452:INFO:              mlflow: Not installed
2023-06-14 13:25:16,452:INFO:              gradio: Not installed
2023-06-14 13:25:16,452:INFO:             fastapi: Not installed
2023-06-14 13:25:16,452:INFO:             uvicorn: Not installed
2023-06-14 13:25:16,452:INFO:              m2cgen: Not installed
2023-06-14 13:25:16,452:INFO:           evidently: Not installed
2023-06-14 13:25:16,452:INFO:               fugue: Not installed
2023-06-14 13:25:16,452:INFO:           streamlit: Not installed
2023-06-14 13:25:16,452:INFO:             prophet: Not installed
2023-06-14 13:25:16,453:INFO:None
2023-06-14 13:25:16,453:INFO:Set up data.
2023-06-14 13:25:16,457:INFO:Set up train/test split.
2023-06-14 13:25:16,460:INFO:Set up index.
2023-06-14 13:25:16,460:INFO:Set up folding strategy.
2023-06-14 13:25:16,460:INFO:Assigning column types.
2023-06-14 13:25:16,463:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 13:25:16,463:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,468:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,472:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,530:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,573:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:16,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:16,576:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,585:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,687:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,688:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:16,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:16,691:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 13:25:16,696:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,772:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,834:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:16,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:16,841:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,845:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,907:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:16,956:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:16,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:16,959:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 13:25:16,969:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,023:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,066:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,176:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,178:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 13:25:17,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,287:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,425:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,427:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 13:25:17,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,536:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,602:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 13:25:17,643:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,646:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 13:25:17,749:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,856:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:17,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:17,860:INFO:Preparing preprocessing pipeline...
2023-06-14 13:25:17,860:INFO:Set up simple imputation.
2023-06-14 13:25:17,861:INFO:Set up column name cleaning.
2023-06-14 13:25:17,918:INFO:Finished creating preprocessing pipeline.
2023-06-14 13:25:17,922:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 13:25:17,922:INFO:Creating final display dataframe.
2023-06-14 13:25:18,068:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1310, 8)
4        Transformed data shape         (1310, 8)
5   Transformed train set shape          (916, 8)
6    Transformed test set shape          (394, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1e47
2023-06-14 13:25:18,178:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:18,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:18,289:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 13:25:18,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 13:25:18,292:INFO:setup() successfully completed in 2.0s...............
2023-06-14 13:25:18,292:INFO:Initializing create_model()
2023-06-14 13:25:18,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2CAF310>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 13:25:18,292:INFO:Checking exceptions
2023-06-14 13:25:18,307:INFO:Importing libraries
2023-06-14 13:25:18,307:INFO:Copying training dataset
2023-06-14 13:25:18,313:INFO:Defining folds
2023-06-14 13:25:18,313:INFO:Declaring metric variables
2023-06-14 13:25:18,317:INFO:Importing untrained model
2023-06-14 13:25:18,321:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 13:25:18,330:INFO:Starting cross validation
2023-06-14 13:25:18,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 13:25:23,821:INFO:Calculating mean and std
2023-06-14 13:25:23,823:INFO:Creating metrics dataframe
2023-06-14 13:25:23,829:INFO:Finalizing model
2023-06-14 13:25:24,239:INFO:Uploading results into container
2023-06-14 13:25:24,240:INFO:Uploading model into container now
2023-06-14 13:25:24,249:INFO:_master_model_container: 1
2023-06-14 13:25:24,250:INFO:_display_container: 2
2023-06-14 13:25:24,251:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-06-14 13:25:24,251:INFO:create_model() successfully completed......................................
2023-06-14 13:25:25,920:INFO:Initializing tune_model()
2023-06-14 13:25:25,920:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2CAF310>)
2023-06-14 13:25:25,920:INFO:Checking exceptions
2023-06-14 14:25:49,232:INFO:PyCaret ClassificationExperiment
2023-06-14 14:25:49,233:INFO:Logging name: clf-default-name
2023-06-14 14:25:49,233:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 14:25:49,233:INFO:version 3.0.2
2023-06-14 14:25:49,233:INFO:Initializing setup()
2023-06-14 14:25:49,233:INFO:self.USI: b037
2023-06-14 14:25:49,233:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'fix_imbalance', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 14:25:49,233:INFO:Checking environment
2023-06-14 14:25:49,233:INFO:python_version: 3.10.5
2023-06-14 14:25:49,234:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 14:25:49,234:INFO:machine: AMD64
2023-06-14 14:25:49,234:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 14:25:49,237:INFO:Memory: svmem(total=17130000384, available=9789763584, percent=42.9, used=7340236800, free=9789763584)
2023-06-14 14:25:49,237:INFO:Physical Core: 4
2023-06-14 14:25:49,237:INFO:Logical Core: 4
2023-06-14 14:25:49,237:INFO:Checking libraries
2023-06-14 14:25:49,237:INFO:System:
2023-06-14 14:25:49,237:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 14:25:49,237:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 14:25:49,238:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 14:25:49,238:INFO:PyCaret required dependencies:
2023-06-14 14:25:49,238:INFO:                 pip: 23.0.1
2023-06-14 14:25:49,238:INFO:          setuptools: 58.1.0
2023-06-14 14:25:49,238:INFO:             pycaret: 3.0.2
2023-06-14 14:25:49,238:INFO:             IPython: 8.9.0
2023-06-14 14:25:49,238:INFO:          ipywidgets: 8.0.6
2023-06-14 14:25:49,238:INFO:                tqdm: 4.65.0
2023-06-14 14:25:49,239:INFO:               numpy: 1.23.5
2023-06-14 14:25:49,239:INFO:              pandas: 1.5.3
2023-06-14 14:25:49,239:INFO:              jinja2: 3.1.2
2023-06-14 14:25:49,239:INFO:               scipy: 1.10.1
2023-06-14 14:25:49,239:INFO:              joblib: 1.2.0
2023-06-14 14:25:49,239:INFO:             sklearn: 1.2.2
2023-06-14 14:25:49,239:INFO:                pyod: 1.0.9
2023-06-14 14:25:49,239:INFO:            imblearn: 0.10.1
2023-06-14 14:25:49,239:INFO:   category_encoders: 2.6.1
2023-06-14 14:25:49,239:INFO:            lightgbm: 3.3.5
2023-06-14 14:25:49,239:INFO:               numba: 0.57.0
2023-06-14 14:25:49,239:INFO:            requests: 2.28.2
2023-06-14 14:25:49,239:INFO:          matplotlib: 3.7.1
2023-06-14 14:25:49,240:INFO:          scikitplot: 0.3.7
2023-06-14 14:25:49,240:INFO:         yellowbrick: 1.5
2023-06-14 14:25:49,240:INFO:              plotly: 5.15.0
2023-06-14 14:25:49,240:INFO:             kaleido: 0.2.1
2023-06-14 14:25:49,240:INFO:         statsmodels: 0.14.0
2023-06-14 14:25:49,240:INFO:              sktime: 0.17.0
2023-06-14 14:25:49,240:INFO:               tbats: 1.1.3
2023-06-14 14:25:49,240:INFO:            pmdarima: 2.0.3
2023-06-14 14:25:49,240:INFO:              psutil: 5.9.4
2023-06-14 14:25:49,240:INFO:PyCaret optional dependencies:
2023-06-14 14:25:49,241:INFO:                shap: Not installed
2023-06-14 14:25:49,241:INFO:           interpret: Not installed
2023-06-14 14:25:49,241:INFO:                umap: Not installed
2023-06-14 14:25:49,241:INFO:    pandas_profiling: Not installed
2023-06-14 14:25:49,241:INFO:  explainerdashboard: Not installed
2023-06-14 14:25:49,241:INFO:             autoviz: Not installed
2023-06-14 14:25:49,241:INFO:           fairlearn: Not installed
2023-06-14 14:25:49,241:INFO:             xgboost: 1.7.5
2023-06-14 14:25:49,241:INFO:            catboost: Not installed
2023-06-14 14:25:49,241:INFO:              kmodes: Not installed
2023-06-14 14:25:49,241:INFO:             mlxtend: Not installed
2023-06-14 14:25:49,241:INFO:       statsforecast: Not installed
2023-06-14 14:25:49,241:INFO:        tune_sklearn: Not installed
2023-06-14 14:25:49,241:INFO:                 ray: Not installed
2023-06-14 14:25:49,242:INFO:            hyperopt: Not installed
2023-06-14 14:25:49,242:INFO:              optuna: Not installed
2023-06-14 14:25:49,242:INFO:               skopt: Not installed
2023-06-14 14:25:49,242:INFO:              mlflow: Not installed
2023-06-14 14:25:49,242:INFO:              gradio: Not installed
2023-06-14 14:25:49,242:INFO:             fastapi: Not installed
2023-06-14 14:25:49,242:INFO:             uvicorn: Not installed
2023-06-14 14:25:49,242:INFO:              m2cgen: Not installed
2023-06-14 14:25:49,242:INFO:           evidently: Not installed
2023-06-14 14:25:49,242:INFO:               fugue: Not installed
2023-06-14 14:25:49,243:INFO:           streamlit: Not installed
2023-06-14 14:25:49,244:INFO:             prophet: Not installed
2023-06-14 14:25:49,244:INFO:None
2023-06-14 14:25:49,244:INFO:Set up data.
2023-06-14 14:25:49,250:INFO:Set up train/test split.
2023-06-14 14:25:49,255:INFO:Set up index.
2023-06-14 14:25:49,256:INFO:Set up folding strategy.
2023-06-14 14:25:49,256:INFO:Assigning column types.
2023-06-14 14:25:49,261:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 14:25:49,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,346:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,431:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,434:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 14:25:49,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,507:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,555:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 14:25:49,583:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,586:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 14:25:49,659:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,740:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:49,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:49,746:INFO:Preparing preprocessing pipeline...
2023-06-14 14:25:49,747:INFO:Set up label encoding.
2023-06-14 14:25:49,747:INFO:Set up simple imputation.
2023-06-14 14:25:49,748:INFO:Set up column name cleaning.
2023-06-14 14:25:49,846:INFO:Finished creating preprocessing pipeline.
2023-06-14 14:25:49,851:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 14:25:49,851:INFO:Creating final display dataframe.
2023-06-14 14:25:50,049:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape          (1310, 8)
5        Transformed data shape          (1310, 8)
6   Transformed train set shape           (916, 8)
7    Transformed test set shape           (394, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               b037
2023-06-14 14:25:50,130:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:50,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:50,205:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:25:50,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:25:50,209:INFO:setup() successfully completed in 1.13s...............
2023-06-14 14:25:50,209:INFO:Initializing create_model()
2023-06-14 14:25:50,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144B2E8CF10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:25:50,209:INFO:Checking exceptions
2023-06-14 14:25:50,225:INFO:Importing libraries
2023-06-14 14:25:50,226:INFO:Copying training dataset
2023-06-14 14:25:50,231:INFO:Defining folds
2023-06-14 14:25:50,232:INFO:Declaring metric variables
2023-06-14 14:25:50,235:INFO:Importing untrained model
2023-06-14 14:25:50,239:INFO:Random Forest Classifier Imported successfully
2023-06-14 14:25:50,254:INFO:Starting cross validation
2023-06-14 14:25:50,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 14:26:10,435:INFO:Calculating mean and std
2023-06-14 14:26:10,436:INFO:Creating metrics dataframe
2023-06-14 14:26:10,445:INFO:Finalizing model
2023-06-14 14:26:11,009:INFO:Uploading results into container
2023-06-14 14:26:11,010:INFO:Uploading model into container now
2023-06-14 14:26:11,029:INFO:_master_model_container: 1
2023-06-14 14:26:11,029:INFO:_display_container: 2
2023-06-14 14:26:11,030:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-14 14:26:11,030:INFO:create_model() successfully completed......................................
2023-06-14 14:26:11,164:INFO:Initializing predict_model()
2023-06-14 14:26:11,165:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000144B2E8CF10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000144B1097400>)
2023-06-14 14:26:11,165:INFO:Checking exceptions
2023-06-14 14:26:11,165:INFO:Preloading libraries
2023-06-14 14:26:11,167:INFO:Set up data.
2023-06-14 14:26:11,170:INFO:Set up index.
2023-06-14 14:26:11,375:INFO:Initializing save_model()
2023-06-14 14:26:11,376:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), model_name=rf_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-14 14:26:11,376:INFO:Adding model into prep_pipe
2023-06-14 14:26:11,421:INFO:rf_model.pkl saved in current working directory
2023-06-14 14:26:11,428:INFO:Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=123,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-06-14 14:26:11,428:INFO:save_model() successfully completed......................................
2023-06-14 14:30:17,288:INFO:PyCaret RegressionExperiment
2023-06-14 14:30:17,288:INFO:Logging name: reg-default-name
2023-06-14 14:30:17,288:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 14:30:17,288:INFO:version 3.0.2
2023-06-14 14:30:17,288:INFO:Initializing setup()
2023-06-14 14:30:17,288:INFO:self.USI: 877c
2023-06-14 14:30:17,289:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 14:30:17,289:INFO:Checking environment
2023-06-14 14:30:17,289:INFO:python_version: 3.10.5
2023-06-14 14:30:17,289:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 14:30:17,289:INFO:machine: AMD64
2023-06-14 14:30:17,289:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 14:30:17,292:INFO:Memory: svmem(total=17130000384, available=9397293056, percent=45.1, used=7732707328, free=9397293056)
2023-06-14 14:30:17,292:INFO:Physical Core: 4
2023-06-14 14:30:17,292:INFO:Logical Core: 4
2023-06-14 14:30:17,292:INFO:Checking libraries
2023-06-14 14:30:17,292:INFO:System:
2023-06-14 14:30:17,292:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 14:30:17,292:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 14:30:17,293:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 14:30:17,293:INFO:PyCaret required dependencies:
2023-06-14 14:30:17,293:INFO:                 pip: 23.0.1
2023-06-14 14:30:17,293:INFO:          setuptools: 58.1.0
2023-06-14 14:30:17,294:INFO:             pycaret: 3.0.2
2023-06-14 14:30:17,294:INFO:             IPython: 8.9.0
2023-06-14 14:30:17,294:INFO:          ipywidgets: 8.0.6
2023-06-14 14:30:17,295:INFO:                tqdm: 4.65.0
2023-06-14 14:30:17,295:INFO:               numpy: 1.23.5
2023-06-14 14:30:17,295:INFO:              pandas: 1.5.3
2023-06-14 14:30:17,296:INFO:              jinja2: 3.1.2
2023-06-14 14:30:17,296:INFO:               scipy: 1.10.1
2023-06-14 14:30:17,296:INFO:              joblib: 1.2.0
2023-06-14 14:30:17,296:INFO:             sklearn: 1.2.2
2023-06-14 14:30:17,296:INFO:                pyod: 1.0.9
2023-06-14 14:30:17,296:INFO:            imblearn: 0.10.1
2023-06-14 14:30:17,296:INFO:   category_encoders: 2.6.1
2023-06-14 14:30:17,296:INFO:            lightgbm: 3.3.5
2023-06-14 14:30:17,296:INFO:               numba: 0.57.0
2023-06-14 14:30:17,296:INFO:            requests: 2.28.2
2023-06-14 14:30:17,296:INFO:          matplotlib: 3.7.1
2023-06-14 14:30:17,296:INFO:          scikitplot: 0.3.7
2023-06-14 14:30:17,296:INFO:         yellowbrick: 1.5
2023-06-14 14:30:17,296:INFO:              plotly: 5.15.0
2023-06-14 14:30:17,297:INFO:             kaleido: 0.2.1
2023-06-14 14:30:17,297:INFO:         statsmodels: 0.14.0
2023-06-14 14:30:17,297:INFO:              sktime: 0.17.0
2023-06-14 14:30:17,297:INFO:               tbats: 1.1.3
2023-06-14 14:30:17,297:INFO:            pmdarima: 2.0.3
2023-06-14 14:30:17,297:INFO:              psutil: 5.9.4
2023-06-14 14:30:17,297:INFO:PyCaret optional dependencies:
2023-06-14 14:30:17,297:INFO:                shap: Not installed
2023-06-14 14:30:17,297:INFO:           interpret: Not installed
2023-06-14 14:30:17,297:INFO:                umap: Not installed
2023-06-14 14:30:17,297:INFO:    pandas_profiling: Not installed
2023-06-14 14:30:17,297:INFO:  explainerdashboard: Not installed
2023-06-14 14:30:17,297:INFO:             autoviz: Not installed
2023-06-14 14:30:17,298:INFO:           fairlearn: Not installed
2023-06-14 14:30:17,298:INFO:             xgboost: 1.7.5
2023-06-14 14:30:17,298:INFO:            catboost: Not installed
2023-06-14 14:30:17,298:INFO:              kmodes: Not installed
2023-06-14 14:30:17,298:INFO:             mlxtend: Not installed
2023-06-14 14:30:17,298:INFO:       statsforecast: Not installed
2023-06-14 14:30:17,298:INFO:        tune_sklearn: Not installed
2023-06-14 14:30:17,298:INFO:                 ray: Not installed
2023-06-14 14:30:17,298:INFO:            hyperopt: Not installed
2023-06-14 14:30:17,298:INFO:              optuna: Not installed
2023-06-14 14:30:17,298:INFO:               skopt: Not installed
2023-06-14 14:30:17,298:INFO:              mlflow: Not installed
2023-06-14 14:30:17,298:INFO:              gradio: Not installed
2023-06-14 14:30:17,299:INFO:             fastapi: Not installed
2023-06-14 14:30:17,299:INFO:             uvicorn: Not installed
2023-06-14 14:30:17,299:INFO:              m2cgen: Not installed
2023-06-14 14:30:17,299:INFO:           evidently: Not installed
2023-06-14 14:30:17,299:INFO:               fugue: Not installed
2023-06-14 14:30:17,299:INFO:           streamlit: Not installed
2023-06-14 14:30:17,299:INFO:             prophet: Not installed
2023-06-14 14:30:17,299:INFO:None
2023-06-14 14:30:17,299:INFO:Set up data.
2023-06-14 14:30:17,305:INFO:Set up train/test split.
2023-06-14 14:30:17,309:INFO:Set up index.
2023-06-14 14:30:17,309:INFO:Set up folding strategy.
2023-06-14 14:30:17,309:INFO:Assigning column types.
2023-06-14 14:30:17,317:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 14:30:17,318:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,326:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,434:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:17,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:17,437:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,442:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,447:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,547:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:17,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:17,551:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 14:30:17,555:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,561:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,621:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,667:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:17,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:17,674:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,740:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,790:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:17,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:17,796:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 14:30:17,820:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:17,934:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:17,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:17,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,013:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,074:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,085:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 14:30:18,224:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,282:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,429:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,430:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,433:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 14:30:18,503:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,548:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:18,676:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,679:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 14:30:18,788:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,913:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:18,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:18,917:INFO:Preparing preprocessing pipeline...
2023-06-14 14:30:18,917:INFO:Set up simple imputation.
2023-06-14 14:30:18,918:INFO:Set up column name cleaning.
2023-06-14 14:30:18,965:INFO:Finished creating preprocessing pipeline.
2023-06-14 14:30:18,969:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 14:30:18,969:INFO:Creating final display dataframe.
2023-06-14 14:30:19,102:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1048, 8)
4        Transformed data shape         (1048, 8)
5   Transformed train set shape          (733, 8)
6    Transformed test set shape          (315, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              877c
2023-06-14 14:30:19,221:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:19,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:19,329:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:30:19,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:19,332:INFO:setup() successfully completed in 2.22s...............
2023-06-14 14:30:19,332:INFO:Initializing create_model()
2023-06-14 14:30:19,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2FACB50>, estimator=randomforest, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:19,332:INFO:Checking exceptions
2023-06-14 14:51:43,837:INFO:PyCaret RegressionExperiment
2023-06-14 14:51:43,837:INFO:Logging name: reg-default-name
2023-06-14 14:51:43,837:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 14:51:43,837:INFO:version 3.0.2
2023-06-14 14:51:43,837:INFO:Initializing setup()
2023-06-14 14:51:43,837:INFO:self.USI: da8e
2023-06-14 14:51:43,838:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 14:51:43,838:INFO:Checking environment
2023-06-14 14:51:43,838:INFO:python_version: 3.10.5
2023-06-14 14:51:43,838:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 14:51:43,838:INFO:machine: AMD64
2023-06-14 14:51:43,838:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 14:51:43,841:INFO:Memory: svmem(total=17130000384, available=9794306048, percent=42.8, used=7335694336, free=9794306048)
2023-06-14 14:51:43,841:INFO:Physical Core: 4
2023-06-14 14:51:43,841:INFO:Logical Core: 4
2023-06-14 14:51:43,841:INFO:Checking libraries
2023-06-14 14:51:43,841:INFO:System:
2023-06-14 14:51:43,841:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 14:51:43,841:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 14:51:43,841:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 14:51:43,842:INFO:PyCaret required dependencies:
2023-06-14 14:51:43,842:INFO:                 pip: 23.0.1
2023-06-14 14:51:43,842:INFO:          setuptools: 58.1.0
2023-06-14 14:51:43,842:INFO:             pycaret: 3.0.2
2023-06-14 14:51:43,842:INFO:             IPython: 8.9.0
2023-06-14 14:51:43,842:INFO:          ipywidgets: 8.0.6
2023-06-14 14:51:43,842:INFO:                tqdm: 4.65.0
2023-06-14 14:51:43,842:INFO:               numpy: 1.23.5
2023-06-14 14:51:43,842:INFO:              pandas: 1.5.3
2023-06-14 14:51:43,842:INFO:              jinja2: 3.1.2
2023-06-14 14:51:43,842:INFO:               scipy: 1.10.1
2023-06-14 14:51:43,842:INFO:              joblib: 1.2.0
2023-06-14 14:51:43,843:INFO:             sklearn: 1.2.2
2023-06-14 14:51:43,843:INFO:                pyod: 1.0.9
2023-06-14 14:51:43,843:INFO:            imblearn: 0.10.1
2023-06-14 14:51:43,843:INFO:   category_encoders: 2.6.1
2023-06-14 14:51:43,843:INFO:            lightgbm: 3.3.5
2023-06-14 14:51:43,843:INFO:               numba: 0.57.0
2023-06-14 14:51:43,843:INFO:            requests: 2.28.2
2023-06-14 14:51:43,843:INFO:          matplotlib: 3.7.1
2023-06-14 14:51:43,843:INFO:          scikitplot: 0.3.7
2023-06-14 14:51:43,843:INFO:         yellowbrick: 1.5
2023-06-14 14:51:43,843:INFO:              plotly: 5.15.0
2023-06-14 14:51:43,843:INFO:             kaleido: 0.2.1
2023-06-14 14:51:43,843:INFO:         statsmodels: 0.14.0
2023-06-14 14:51:43,843:INFO:              sktime: 0.17.0
2023-06-14 14:51:43,844:INFO:               tbats: 1.1.3
2023-06-14 14:51:43,844:INFO:            pmdarima: 2.0.3
2023-06-14 14:51:43,844:INFO:              psutil: 5.9.4
2023-06-14 14:51:43,844:INFO:PyCaret optional dependencies:
2023-06-14 14:51:43,844:INFO:                shap: Not installed
2023-06-14 14:51:43,844:INFO:           interpret: Not installed
2023-06-14 14:51:43,844:INFO:                umap: Not installed
2023-06-14 14:51:43,844:INFO:    pandas_profiling: Not installed
2023-06-14 14:51:43,844:INFO:  explainerdashboard: Not installed
2023-06-14 14:51:43,844:INFO:             autoviz: Not installed
2023-06-14 14:51:43,844:INFO:           fairlearn: Not installed
2023-06-14 14:51:43,844:INFO:             xgboost: 1.7.5
2023-06-14 14:51:43,844:INFO:            catboost: Not installed
2023-06-14 14:51:43,844:INFO:              kmodes: Not installed
2023-06-14 14:51:43,844:INFO:             mlxtend: Not installed
2023-06-14 14:51:43,844:INFO:       statsforecast: Not installed
2023-06-14 14:51:43,845:INFO:        tune_sklearn: Not installed
2023-06-14 14:51:43,845:INFO:                 ray: Not installed
2023-06-14 14:51:43,845:INFO:            hyperopt: Not installed
2023-06-14 14:51:43,845:INFO:              optuna: Not installed
2023-06-14 14:51:43,845:INFO:               skopt: Not installed
2023-06-14 14:51:43,845:INFO:              mlflow: Not installed
2023-06-14 14:51:43,845:INFO:              gradio: Not installed
2023-06-14 14:51:43,845:INFO:             fastapi: Not installed
2023-06-14 14:51:43,845:INFO:             uvicorn: Not installed
2023-06-14 14:51:43,845:INFO:              m2cgen: Not installed
2023-06-14 14:51:43,845:INFO:           evidently: Not installed
2023-06-14 14:51:43,845:INFO:               fugue: Not installed
2023-06-14 14:51:43,845:INFO:           streamlit: Not installed
2023-06-14 14:51:43,845:INFO:             prophet: Not installed
2023-06-14 14:51:43,845:INFO:None
2023-06-14 14:51:43,845:INFO:Set up data.
2023-06-14 14:51:43,851:INFO:Set up train/test split.
2023-06-14 14:51:43,854:INFO:Set up index.
2023-06-14 14:51:43,855:INFO:Set up folding strategy.
2023-06-14 14:51:43,855:INFO:Assigning column types.
2023-06-14 14:51:43,858:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 14:51:43,858:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,863:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,981:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:43,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:43,985:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,990:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:51:43,994:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,153:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,158:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 14:51:44,163:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,180:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,311:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,319:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,324:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,437:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,510:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,522:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 14:51:44,532:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,633:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,647:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,706:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,756:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,759:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 14:51:44,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:44,891:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:44,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:44,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:45,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:51:45,010:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:45,018:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 14:51:45,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:45,135:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:45,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:51:45,264:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:45,269:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 14:51:45,387:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:45,511:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:45,515:INFO:Preparing preprocessing pipeline...
2023-06-14 14:51:45,516:INFO:Set up simple imputation.
2023-06-14 14:51:45,516:INFO:Set up column name cleaning.
2023-06-14 14:51:45,569:INFO:Finished creating preprocessing pipeline.
2023-06-14 14:51:45,580:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 14:51:45,580:INFO:Creating final display dataframe.
2023-06-14 14:51:45,739:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1048, 8)
4        Transformed data shape         (1048, 8)
5   Transformed train set shape          (733, 8)
6    Transformed test set shape          (315, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              da8e
2023-06-14 14:51:45,896:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:45,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:46,011:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 14:51:46,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:51:46,014:INFO:setup() successfully completed in 2.39s...............
2023-06-14 14:51:46,014:INFO:Initializing create_model()
2023-06-14 14:51:46,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2FAC970>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:51:46,014:INFO:Checking exceptions
2023-06-14 14:51:46,031:INFO:Importing libraries
2023-06-14 14:51:46,031:INFO:Copying training dataset
2023-06-14 14:51:46,036:INFO:Defining folds
2023-06-14 14:51:46,036:INFO:Declaring metric variables
2023-06-14 14:51:46,040:INFO:Importing untrained model
2023-06-14 14:51:46,045:INFO:Random Forest Regressor Imported successfully
2023-06-14 14:51:46,070:INFO:Starting cross validation
2023-06-14 14:51:46,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 14:51:52,921:INFO:Calculating mean and std
2023-06-14 14:51:52,922:INFO:Creating metrics dataframe
2023-06-14 14:51:52,931:INFO:Finalizing model
2023-06-14 14:51:53,542:INFO:Uploading results into container
2023-06-14 14:51:53,543:INFO:Uploading model into container now
2023-06-14 14:51:53,558:INFO:_master_model_container: 1
2023-06-14 14:51:53,559:INFO:_display_container: 2
2023-06-14 14:51:53,559:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-06-14 14:51:53,559:INFO:create_model() successfully completed......................................
2023-06-14 14:51:54,106:INFO:Initializing tune_model()
2023-06-14 14:51:54,106:INFO:tune_model(estimator=rf, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B2FAC970>)
2023-06-14 14:51:54,106:INFO:Checking exceptions
2023-06-14 15:04:35,889:INFO:PyCaret RegressionExperiment
2023-06-14 15:04:35,889:INFO:Logging name: reg-default-name
2023-06-14 15:04:35,889:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 15:04:35,889:INFO:version 3.0.2
2023-06-14 15:04:35,889:INFO:Initializing setup()
2023-06-14 15:04:35,890:INFO:self.USI: b7b0
2023-06-14 15:04:35,890:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'memory', 'y_test', 'X', 'USI', 'X_test', 'transform_target_param', 'fold_generator', 'logging_param', 'y_train', 'fold_groups_param', 'seed', 'X_train', 'log_plots_param', 'n_jobs_param', 'exp_name_log', 'idx', 'target_param', 'y', 'pipeline', 'html_param', '_available_plots', 'data', 'exp_id', 'gpu_n_jobs_param'}
2023-06-14 15:04:35,890:INFO:Checking environment
2023-06-14 15:04:35,890:INFO:python_version: 3.10.5
2023-06-14 15:04:35,890:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:04:35,890:INFO:machine: AMD64
2023-06-14 15:04:35,890:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:04:35,893:INFO:Memory: svmem(total=17130000384, available=9876000768, percent=42.3, used=7253999616, free=9876000768)
2023-06-14 15:04:35,893:INFO:Physical Core: 4
2023-06-14 15:04:35,893:INFO:Logical Core: 4
2023-06-14 15:04:35,893:INFO:Checking libraries
2023-06-14 15:04:35,893:INFO:System:
2023-06-14 15:04:35,893:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:04:35,893:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:04:35,894:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:04:35,894:INFO:PyCaret required dependencies:
2023-06-14 15:04:35,894:INFO:                 pip: 23.0.1
2023-06-14 15:04:35,894:INFO:          setuptools: 58.1.0
2023-06-14 15:04:35,894:INFO:             pycaret: 3.0.2
2023-06-14 15:04:35,894:INFO:             IPython: 8.9.0
2023-06-14 15:04:35,894:INFO:          ipywidgets: 8.0.6
2023-06-14 15:04:35,894:INFO:                tqdm: 4.65.0
2023-06-14 15:04:35,894:INFO:               numpy: 1.23.5
2023-06-14 15:04:35,894:INFO:              pandas: 1.5.3
2023-06-14 15:04:35,894:INFO:              jinja2: 3.1.2
2023-06-14 15:04:35,894:INFO:               scipy: 1.10.1
2023-06-14 15:04:35,894:INFO:              joblib: 1.2.0
2023-06-14 15:04:35,894:INFO:             sklearn: 1.2.2
2023-06-14 15:04:35,895:INFO:                pyod: 1.0.9
2023-06-14 15:04:35,895:INFO:            imblearn: 0.10.1
2023-06-14 15:04:35,895:INFO:   category_encoders: 2.6.1
2023-06-14 15:04:35,895:INFO:            lightgbm: 3.3.5
2023-06-14 15:04:35,895:INFO:               numba: 0.57.0
2023-06-14 15:04:35,895:INFO:            requests: 2.28.2
2023-06-14 15:04:35,895:INFO:          matplotlib: 3.7.1
2023-06-14 15:04:35,895:INFO:          scikitplot: 0.3.7
2023-06-14 15:04:35,895:INFO:         yellowbrick: 1.5
2023-06-14 15:04:35,895:INFO:              plotly: 5.15.0
2023-06-14 15:04:35,895:INFO:             kaleido: 0.2.1
2023-06-14 15:04:35,895:INFO:         statsmodels: 0.14.0
2023-06-14 15:04:35,895:INFO:              sktime: 0.17.0
2023-06-14 15:04:35,895:INFO:               tbats: 1.1.3
2023-06-14 15:04:35,895:INFO:            pmdarima: 2.0.3
2023-06-14 15:04:35,895:INFO:              psutil: 5.9.4
2023-06-14 15:04:35,896:INFO:PyCaret optional dependencies:
2023-06-14 15:04:35,896:INFO:                shap: Not installed
2023-06-14 15:04:35,896:INFO:           interpret: Not installed
2023-06-14 15:04:35,896:INFO:                umap: Not installed
2023-06-14 15:04:35,896:INFO:    pandas_profiling: Not installed
2023-06-14 15:04:35,896:INFO:  explainerdashboard: Not installed
2023-06-14 15:04:35,896:INFO:             autoviz: Not installed
2023-06-14 15:04:35,896:INFO:           fairlearn: Not installed
2023-06-14 15:04:35,896:INFO:             xgboost: 1.7.5
2023-06-14 15:04:35,896:INFO:            catboost: Not installed
2023-06-14 15:04:35,896:INFO:              kmodes: Not installed
2023-06-14 15:04:35,896:INFO:             mlxtend: Not installed
2023-06-14 15:04:35,896:INFO:       statsforecast: Not installed
2023-06-14 15:04:35,896:INFO:        tune_sklearn: Not installed
2023-06-14 15:04:35,896:INFO:                 ray: Not installed
2023-06-14 15:04:35,896:INFO:            hyperopt: Not installed
2023-06-14 15:04:35,896:INFO:              optuna: Not installed
2023-06-14 15:04:35,897:INFO:               skopt: Not installed
2023-06-14 15:04:35,897:INFO:              mlflow: Not installed
2023-06-14 15:04:35,897:INFO:              gradio: Not installed
2023-06-14 15:04:35,897:INFO:             fastapi: Not installed
2023-06-14 15:04:35,897:INFO:             uvicorn: Not installed
2023-06-14 15:04:35,897:INFO:              m2cgen: Not installed
2023-06-14 15:04:35,897:INFO:           evidently: Not installed
2023-06-14 15:04:35,897:INFO:               fugue: Not installed
2023-06-14 15:04:35,897:INFO:           streamlit: Not installed
2023-06-14 15:04:35,897:INFO:             prophet: Not installed
2023-06-14 15:04:35,897:INFO:None
2023-06-14 15:04:35,897:INFO:Set up data.
2023-06-14 15:04:35,903:INFO:Set up train/test split.
2023-06-14 15:04:35,906:INFO:Set up index.
2023-06-14 15:04:35,907:INFO:Set up folding strategy.
2023-06-14 15:04:35,908:INFO:Assigning column types.
2023-06-14 15:04:35,913:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:04:35,913:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:04:35,919:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:04:35,925:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:35,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,078:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,081:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,092:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,097:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,271:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,275:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 15:04:36,281:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,287:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,373:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,424:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,437:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,578:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,581:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 15:04:36,592:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,787:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:36,903:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:36,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:36,907:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 15:04:36,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,016:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,111:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,154:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,157:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:04:37,222:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,265:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:04:37,374:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,377:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 15:04:37,480:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,594:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:37,598:INFO:Preparing preprocessing pipeline...
2023-06-14 15:04:37,599:INFO:Set up simple imputation.
2023-06-14 15:04:37,599:INFO:Set up column name cleaning.
2023-06-14 15:04:37,648:INFO:Finished creating preprocessing pipeline.
2023-06-14 15:04:37,653:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 15:04:37,653:INFO:Creating final display dataframe.
2023-06-14 15:04:37,782:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1048, 8)
4        Transformed data shape         (1048, 8)
5   Transformed train set shape          (733, 8)
6    Transformed test set shape          (315, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b7b0
2023-06-14 15:04:37,906:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:37,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:38,017:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:04:38,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:04:38,021:INFO:setup() successfully completed in 2.32s...............
2023-06-14 15:04:38,021:INFO:Initializing create_model()
2023-06-14 15:04:38,021:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B1B24310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:04:38,021:INFO:Checking exceptions
2023-06-14 15:04:38,040:INFO:Importing libraries
2023-06-14 15:04:38,040:INFO:Copying training dataset
2023-06-14 15:04:38,044:INFO:Defining folds
2023-06-14 15:04:38,044:INFO:Declaring metric variables
2023-06-14 15:04:38,047:INFO:Importing untrained model
2023-06-14 15:04:38,052:INFO:Random Forest Regressor Imported successfully
2023-06-14 15:04:38,061:INFO:Starting cross validation
2023-06-14 15:04:38,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 15:04:43,686:INFO:Calculating mean and std
2023-06-14 15:04:43,687:INFO:Creating metrics dataframe
2023-06-14 15:04:43,693:INFO:Finalizing model
2023-06-14 15:04:43,983:INFO:Uploading results into container
2023-06-14 15:04:43,985:INFO:Uploading model into container now
2023-06-14 15:04:43,997:INFO:_master_model_container: 1
2023-06-14 15:04:43,997:INFO:_display_container: 2
2023-06-14 15:04:43,997:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-06-14 15:04:43,997:INFO:create_model() successfully completed......................................
2023-06-14 15:04:44,321:INFO:Initializing tune_model()
2023-06-14 15:04:44,322:INFO:tune_model(estimator=rf, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000144B1B24310>)
2023-06-14 15:04:44,322:INFO:Checking exceptions
2023-06-14 15:32:35,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:32:35,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:32:35,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:32:35,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:32:36,620:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 15:32:37,509:INFO:PyCaret ClassificationExperiment
2023-06-14 15:32:37,509:INFO:Logging name: clf-default-name
2023-06-14 15:32:37,509:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:32:37,510:INFO:version 3.0.2
2023-06-14 15:32:37,510:INFO:Initializing setup()
2023-06-14 15:32:37,510:INFO:self.USI: e9cb
2023-06-14 15:32:37,510:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:32:37,510:INFO:Checking environment
2023-06-14 15:32:37,511:INFO:python_version: 3.10.5
2023-06-14 15:32:37,511:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:32:37,511:INFO:machine: AMD64
2023-06-14 15:32:37,511:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:32:37,514:INFO:Memory: svmem(total=17130000384, available=9676849152, percent=43.5, used=7453151232, free=9676849152)
2023-06-14 15:32:37,514:INFO:Physical Core: 4
2023-06-14 15:32:37,515:INFO:Logical Core: 4
2023-06-14 15:32:37,515:INFO:Checking libraries
2023-06-14 15:32:37,515:INFO:System:
2023-06-14 15:32:37,515:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:32:37,515:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:32:37,515:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:32:37,516:INFO:PyCaret required dependencies:
2023-06-14 15:32:37,517:INFO:                 pip: 23.0.1
2023-06-14 15:32:37,517:INFO:          setuptools: 58.1.0
2023-06-14 15:32:37,517:INFO:             pycaret: 3.0.2
2023-06-14 15:32:37,517:INFO:             IPython: 8.9.0
2023-06-14 15:32:37,517:INFO:          ipywidgets: 8.0.6
2023-06-14 15:32:37,518:INFO:                tqdm: 4.65.0
2023-06-14 15:32:37,518:INFO:               numpy: 1.23.5
2023-06-14 15:32:37,518:INFO:              pandas: 1.5.3
2023-06-14 15:32:37,518:INFO:              jinja2: 3.1.2
2023-06-14 15:32:37,518:INFO:               scipy: 1.10.1
2023-06-14 15:32:37,518:INFO:              joblib: 1.2.0
2023-06-14 15:32:37,518:INFO:             sklearn: 1.2.2
2023-06-14 15:32:37,518:INFO:                pyod: 1.0.9
2023-06-14 15:32:37,518:INFO:            imblearn: 0.10.1
2023-06-14 15:32:37,519:INFO:   category_encoders: 2.6.1
2023-06-14 15:32:37,519:INFO:            lightgbm: 3.3.5
2023-06-14 15:32:37,519:INFO:               numba: 0.57.0
2023-06-14 15:32:37,519:INFO:            requests: 2.28.2
2023-06-14 15:32:37,519:INFO:          matplotlib: 3.7.1
2023-06-14 15:32:37,519:INFO:          scikitplot: 0.3.7
2023-06-14 15:32:37,519:INFO:         yellowbrick: 1.5
2023-06-14 15:32:37,519:INFO:              plotly: 5.15.0
2023-06-14 15:32:37,520:INFO:             kaleido: 0.2.1
2023-06-14 15:32:37,520:INFO:         statsmodels: 0.14.0
2023-06-14 15:32:37,520:INFO:              sktime: 0.17.0
2023-06-14 15:32:37,520:INFO:               tbats: 1.1.3
2023-06-14 15:32:37,520:INFO:            pmdarima: 2.0.3
2023-06-14 15:32:37,520:INFO:              psutil: 5.9.4
2023-06-14 15:32:37,521:INFO:PyCaret optional dependencies:
2023-06-14 15:32:37,559:INFO:                shap: Not installed
2023-06-14 15:32:37,559:INFO:           interpret: 0.4.2
2023-06-14 15:32:37,559:INFO:                umap: Not installed
2023-06-14 15:32:37,559:INFO:    pandas_profiling: Not installed
2023-06-14 15:32:37,559:INFO:  explainerdashboard: Not installed
2023-06-14 15:32:37,560:INFO:             autoviz: Not installed
2023-06-14 15:32:37,560:INFO:           fairlearn: Not installed
2023-06-14 15:32:37,560:INFO:             xgboost: 1.7.5
2023-06-14 15:32:37,560:INFO:            catboost: Not installed
2023-06-14 15:32:37,560:INFO:              kmodes: Not installed
2023-06-14 15:32:37,560:INFO:             mlxtend: Not installed
2023-06-14 15:32:37,561:INFO:       statsforecast: Not installed
2023-06-14 15:32:37,561:INFO:        tune_sklearn: Not installed
2023-06-14 15:32:37,561:INFO:                 ray: Not installed
2023-06-14 15:32:37,561:INFO:            hyperopt: Not installed
2023-06-14 15:32:37,561:INFO:              optuna: Not installed
2023-06-14 15:32:37,561:INFO:               skopt: Not installed
2023-06-14 15:32:37,561:INFO:              mlflow: Not installed
2023-06-14 15:32:37,562:INFO:              gradio: Not installed
2023-06-14 15:32:37,562:INFO:             fastapi: Not installed
2023-06-14 15:32:37,562:INFO:             uvicorn: Not installed
2023-06-14 15:32:37,562:INFO:              m2cgen: Not installed
2023-06-14 15:32:37,562:INFO:           evidently: Not installed
2023-06-14 15:32:37,562:INFO:               fugue: Not installed
2023-06-14 15:32:37,562:INFO:           streamlit: Not installed
2023-06-14 15:32:37,563:INFO:             prophet: Not installed
2023-06-14 15:32:37,563:INFO:None
2023-06-14 15:32:37,563:INFO:Set up data.
2023-06-14 15:32:37,584:INFO:Set up train/test split.
2023-06-14 15:32:37,594:INFO:Set up index.
2023-06-14 15:32:37,594:INFO:Set up folding strategy.
2023-06-14 15:32:37,594:INFO:Assigning column types.
2023-06-14 15:32:37,602:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:32:37,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:32:37,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:32:37,747:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:37,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:37,956:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:32:37,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:32:37,988:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:37,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:37,991:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:32:38,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:32:38,071:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:38,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:38,122:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:32:38,153:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:38,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:38,157:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:32:38,237:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:38,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:38,320:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:32:38,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:32:38,327:INFO:Preparing preprocessing pipeline...
2023-06-14 15:32:38,328:INFO:Set up label encoding.
2023-06-14 15:32:38,329:INFO:Set up simple imputation.
2023-06-14 15:32:38,336:INFO:Set up encoding of categorical features.
2023-06-14 15:32:38,337:INFO:Set up column name cleaning.
2023-06-14 15:33:48,209:INFO:PyCaret ClassificationExperiment
2023-06-14 15:33:48,210:INFO:Logging name: clf-default-name
2023-06-14 15:33:48,210:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:33:48,210:INFO:version 3.0.2
2023-06-14 15:33:48,210:INFO:Initializing setup()
2023-06-14 15:33:48,210:INFO:self.USI: bf80
2023-06-14 15:33:48,210:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:33:48,211:INFO:Checking environment
2023-06-14 15:33:48,211:INFO:python_version: 3.10.5
2023-06-14 15:33:48,211:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:33:48,211:INFO:machine: AMD64
2023-06-14 15:33:48,211:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:33:48,215:INFO:Memory: svmem(total=17130000384, available=9613516800, percent=43.9, used=7516483584, free=9613516800)
2023-06-14 15:33:48,215:INFO:Physical Core: 4
2023-06-14 15:33:48,215:INFO:Logical Core: 4
2023-06-14 15:33:48,215:INFO:Checking libraries
2023-06-14 15:33:48,215:INFO:System:
2023-06-14 15:33:48,215:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:33:48,216:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:33:48,216:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:33:48,216:INFO:PyCaret required dependencies:
2023-06-14 15:33:48,216:INFO:                 pip: 23.0.1
2023-06-14 15:33:48,216:INFO:          setuptools: 58.1.0
2023-06-14 15:33:48,216:INFO:             pycaret: 3.0.2
2023-06-14 15:33:48,216:INFO:             IPython: 8.9.0
2023-06-14 15:33:48,216:INFO:          ipywidgets: 8.0.6
2023-06-14 15:33:48,217:INFO:                tqdm: 4.65.0
2023-06-14 15:33:48,217:INFO:               numpy: 1.23.5
2023-06-14 15:33:48,217:INFO:              pandas: 1.5.3
2023-06-14 15:33:48,217:INFO:              jinja2: 3.1.2
2023-06-14 15:33:48,217:INFO:               scipy: 1.10.1
2023-06-14 15:33:48,217:INFO:              joblib: 1.2.0
2023-06-14 15:33:48,217:INFO:             sklearn: 1.2.2
2023-06-14 15:33:48,217:INFO:                pyod: 1.0.9
2023-06-14 15:33:48,217:INFO:            imblearn: 0.10.1
2023-06-14 15:33:48,218:INFO:   category_encoders: 2.6.1
2023-06-14 15:33:48,218:INFO:            lightgbm: 3.3.5
2023-06-14 15:33:48,218:INFO:               numba: 0.57.0
2023-06-14 15:33:48,218:INFO:            requests: 2.28.2
2023-06-14 15:33:48,218:INFO:          matplotlib: 3.7.1
2023-06-14 15:33:48,218:INFO:          scikitplot: 0.3.7
2023-06-14 15:33:48,218:INFO:         yellowbrick: 1.5
2023-06-14 15:33:48,218:INFO:              plotly: 5.15.0
2023-06-14 15:33:48,218:INFO:             kaleido: 0.2.1
2023-06-14 15:33:48,218:INFO:         statsmodels: 0.14.0
2023-06-14 15:33:48,219:INFO:              sktime: 0.17.0
2023-06-14 15:33:48,219:INFO:               tbats: 1.1.3
2023-06-14 15:33:48,219:INFO:            pmdarima: 2.0.3
2023-06-14 15:33:48,219:INFO:              psutil: 5.9.4
2023-06-14 15:33:48,219:INFO:PyCaret optional dependencies:
2023-06-14 15:33:48,219:INFO:                shap: Not installed
2023-06-14 15:33:48,219:INFO:           interpret: 0.4.2
2023-06-14 15:33:48,219:INFO:                umap: Not installed
2023-06-14 15:33:48,219:INFO:    pandas_profiling: Not installed
2023-06-14 15:33:48,220:INFO:  explainerdashboard: Not installed
2023-06-14 15:33:48,220:INFO:             autoviz: Not installed
2023-06-14 15:33:48,220:INFO:           fairlearn: Not installed
2023-06-14 15:33:48,220:INFO:             xgboost: 1.7.5
2023-06-14 15:33:48,220:INFO:            catboost: Not installed
2023-06-14 15:33:48,220:INFO:              kmodes: Not installed
2023-06-14 15:33:48,220:INFO:             mlxtend: Not installed
2023-06-14 15:33:48,220:INFO:       statsforecast: Not installed
2023-06-14 15:33:48,220:INFO:        tune_sklearn: Not installed
2023-06-14 15:33:48,221:INFO:                 ray: Not installed
2023-06-14 15:33:48,221:INFO:            hyperopt: Not installed
2023-06-14 15:33:48,221:INFO:              optuna: Not installed
2023-06-14 15:33:48,221:INFO:               skopt: Not installed
2023-06-14 15:33:48,221:INFO:              mlflow: Not installed
2023-06-14 15:33:48,221:INFO:              gradio: Not installed
2023-06-14 15:33:48,221:INFO:             fastapi: Not installed
2023-06-14 15:33:48,221:INFO:             uvicorn: Not installed
2023-06-14 15:33:48,222:INFO:              m2cgen: Not installed
2023-06-14 15:33:48,222:INFO:           evidently: Not installed
2023-06-14 15:33:48,222:INFO:               fugue: Not installed
2023-06-14 15:33:48,222:INFO:           streamlit: Not installed
2023-06-14 15:33:48,222:INFO:             prophet: Not installed
2023-06-14 15:33:48,222:INFO:None
2023-06-14 15:33:48,222:INFO:Set up data.
2023-06-14 15:33:48,244:INFO:Set up train/test split.
2023-06-14 15:33:48,255:INFO:Set up index.
2023-06-14 15:33:48,255:INFO:Set up folding strategy.
2023-06-14 15:33:48,255:INFO:Assigning column types.
2023-06-14 15:33:48,263:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:33:48,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,391:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,492:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,539:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,544:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:33:48,615:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,652:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:33:48,761:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,766:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:33:48,857:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,964:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:33:48,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:33:48,973:INFO:Preparing preprocessing pipeline...
2023-06-14 15:33:48,975:INFO:Set up label encoding.
2023-06-14 15:33:48,975:INFO:Set up simple imputation.
2023-06-14 15:33:48,981:INFO:Set up encoding of categorical features.
2023-06-14 15:33:48,984:INFO:Set up column name cleaning.
2023-06-14 15:34:13,057:INFO:PyCaret ClassificationExperiment
2023-06-14 15:34:13,057:INFO:Logging name: clf-default-name
2023-06-14 15:34:13,057:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:34:13,057:INFO:version 3.0.2
2023-06-14 15:34:13,057:INFO:Initializing setup()
2023-06-14 15:34:13,057:INFO:self.USI: 5b68
2023-06-14 15:34:13,058:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:34:13,058:INFO:Checking environment
2023-06-14 15:34:13,058:INFO:python_version: 3.10.5
2023-06-14 15:34:13,058:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:34:13,058:INFO:machine: AMD64
2023-06-14 15:34:13,058:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:34:13,062:INFO:Memory: svmem(total=17130000384, available=9594417152, percent=44.0, used=7535583232, free=9594417152)
2023-06-14 15:34:13,062:INFO:Physical Core: 4
2023-06-14 15:34:13,063:INFO:Logical Core: 4
2023-06-14 15:34:13,063:INFO:Checking libraries
2023-06-14 15:34:13,063:INFO:System:
2023-06-14 15:34:13,063:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:34:13,063:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:34:13,063:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:34:13,063:INFO:PyCaret required dependencies:
2023-06-14 15:34:13,064:INFO:                 pip: 23.0.1
2023-06-14 15:34:13,064:INFO:          setuptools: 58.1.0
2023-06-14 15:34:13,064:INFO:             pycaret: 3.0.2
2023-06-14 15:34:13,064:INFO:             IPython: 8.9.0
2023-06-14 15:34:13,064:INFO:          ipywidgets: 8.0.6
2023-06-14 15:34:13,064:INFO:                tqdm: 4.65.0
2023-06-14 15:34:13,064:INFO:               numpy: 1.23.5
2023-06-14 15:34:13,065:INFO:              pandas: 1.5.3
2023-06-14 15:34:13,065:INFO:              jinja2: 3.1.2
2023-06-14 15:34:13,065:INFO:               scipy: 1.10.1
2023-06-14 15:34:13,065:INFO:              joblib: 1.2.0
2023-06-14 15:34:13,065:INFO:             sklearn: 1.2.2
2023-06-14 15:34:13,065:INFO:                pyod: 1.0.9
2023-06-14 15:34:13,066:INFO:            imblearn: 0.10.1
2023-06-14 15:34:13,066:INFO:   category_encoders: 2.6.1
2023-06-14 15:34:13,066:INFO:            lightgbm: 3.3.5
2023-06-14 15:34:13,066:INFO:               numba: 0.57.0
2023-06-14 15:34:13,066:INFO:            requests: 2.28.2
2023-06-14 15:34:13,066:INFO:          matplotlib: 3.7.1
2023-06-14 15:34:13,066:INFO:          scikitplot: 0.3.7
2023-06-14 15:34:13,066:INFO:         yellowbrick: 1.5
2023-06-14 15:34:13,066:INFO:              plotly: 5.15.0
2023-06-14 15:34:13,067:INFO:             kaleido: 0.2.1
2023-06-14 15:34:13,067:INFO:         statsmodels: 0.14.0
2023-06-14 15:34:13,067:INFO:              sktime: 0.17.0
2023-06-14 15:34:13,067:INFO:               tbats: 1.1.3
2023-06-14 15:34:13,067:INFO:            pmdarima: 2.0.3
2023-06-14 15:34:13,067:INFO:              psutil: 5.9.4
2023-06-14 15:34:13,067:INFO:PyCaret optional dependencies:
2023-06-14 15:34:13,068:INFO:                shap: Not installed
2023-06-14 15:34:13,068:INFO:           interpret: 0.4.2
2023-06-14 15:34:13,068:INFO:                umap: Not installed
2023-06-14 15:34:13,068:INFO:    pandas_profiling: Not installed
2023-06-14 15:34:13,068:INFO:  explainerdashboard: Not installed
2023-06-14 15:34:13,068:INFO:             autoviz: Not installed
2023-06-14 15:34:13,068:INFO:           fairlearn: Not installed
2023-06-14 15:34:13,068:INFO:             xgboost: 1.7.5
2023-06-14 15:34:13,068:INFO:            catboost: Not installed
2023-06-14 15:34:13,069:INFO:              kmodes: Not installed
2023-06-14 15:34:13,069:INFO:             mlxtend: Not installed
2023-06-14 15:34:13,069:INFO:       statsforecast: Not installed
2023-06-14 15:34:13,069:INFO:        tune_sklearn: Not installed
2023-06-14 15:34:13,069:INFO:                 ray: Not installed
2023-06-14 15:34:13,069:INFO:            hyperopt: Not installed
2023-06-14 15:34:13,069:INFO:              optuna: Not installed
2023-06-14 15:34:13,069:INFO:               skopt: Not installed
2023-06-14 15:34:13,069:INFO:              mlflow: Not installed
2023-06-14 15:34:13,070:INFO:              gradio: Not installed
2023-06-14 15:34:13,070:INFO:             fastapi: Not installed
2023-06-14 15:34:13,070:INFO:             uvicorn: Not installed
2023-06-14 15:34:13,070:INFO:              m2cgen: Not installed
2023-06-14 15:34:13,070:INFO:           evidently: Not installed
2023-06-14 15:34:13,070:INFO:               fugue: Not installed
2023-06-14 15:34:13,070:INFO:           streamlit: Not installed
2023-06-14 15:34:13,071:INFO:             prophet: Not installed
2023-06-14 15:34:13,071:INFO:None
2023-06-14 15:34:13,071:INFO:Set up data.
2023-06-14 15:35:03,483:INFO:PyCaret ClassificationExperiment
2023-06-14 15:35:03,483:INFO:Logging name: clf-default-name
2023-06-14 15:35:03,483:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:35:03,483:INFO:version 3.0.2
2023-06-14 15:35:03,483:INFO:Initializing setup()
2023-06-14 15:35:03,483:INFO:self.USI: 13cb
2023-06-14 15:35:03,483:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:35:03,484:INFO:Checking environment
2023-06-14 15:35:03,484:INFO:python_version: 3.10.5
2023-06-14 15:35:03,484:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:35:03,484:INFO:machine: AMD64
2023-06-14 15:35:03,484:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:35:03,487:INFO:Memory: svmem(total=17130000384, available=9566593024, percent=44.2, used=7563407360, free=9566593024)
2023-06-14 15:35:03,488:INFO:Physical Core: 4
2023-06-14 15:35:03,488:INFO:Logical Core: 4
2023-06-14 15:35:03,488:INFO:Checking libraries
2023-06-14 15:35:03,488:INFO:System:
2023-06-14 15:35:03,488:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:35:03,488:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:35:03,488:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:35:03,488:INFO:PyCaret required dependencies:
2023-06-14 15:35:03,489:INFO:                 pip: 23.0.1
2023-06-14 15:35:03,489:INFO:          setuptools: 58.1.0
2023-06-14 15:35:03,489:INFO:             pycaret: 3.0.2
2023-06-14 15:35:03,489:INFO:             IPython: 8.9.0
2023-06-14 15:35:03,489:INFO:          ipywidgets: 8.0.6
2023-06-14 15:35:03,489:INFO:                tqdm: 4.65.0
2023-06-14 15:35:03,489:INFO:               numpy: 1.23.5
2023-06-14 15:35:03,490:INFO:              pandas: 1.5.3
2023-06-14 15:35:03,491:INFO:              jinja2: 3.1.2
2023-06-14 15:35:03,491:INFO:               scipy: 1.10.1
2023-06-14 15:35:03,491:INFO:              joblib: 1.2.0
2023-06-14 15:35:03,491:INFO:             sklearn: 1.2.2
2023-06-14 15:35:03,491:INFO:                pyod: 1.0.9
2023-06-14 15:35:03,491:INFO:            imblearn: 0.10.1
2023-06-14 15:35:03,491:INFO:   category_encoders: 2.6.1
2023-06-14 15:35:03,491:INFO:            lightgbm: 3.3.5
2023-06-14 15:35:03,492:INFO:               numba: 0.57.0
2023-06-14 15:35:03,492:INFO:            requests: 2.28.2
2023-06-14 15:35:03,492:INFO:          matplotlib: 3.7.1
2023-06-14 15:35:03,492:INFO:          scikitplot: 0.3.7
2023-06-14 15:35:03,492:INFO:         yellowbrick: 1.5
2023-06-14 15:35:03,492:INFO:              plotly: 5.15.0
2023-06-14 15:35:03,492:INFO:             kaleido: 0.2.1
2023-06-14 15:35:03,493:INFO:         statsmodels: 0.14.0
2023-06-14 15:35:03,493:INFO:              sktime: 0.17.0
2023-06-14 15:35:03,493:INFO:               tbats: 1.1.3
2023-06-14 15:35:03,493:INFO:            pmdarima: 2.0.3
2023-06-14 15:35:03,493:INFO:              psutil: 5.9.4
2023-06-14 15:35:03,493:INFO:PyCaret optional dependencies:
2023-06-14 15:35:03,493:INFO:                shap: Not installed
2023-06-14 15:35:03,494:INFO:           interpret: 0.4.2
2023-06-14 15:35:03,494:INFO:                umap: Not installed
2023-06-14 15:35:03,494:INFO:    pandas_profiling: Not installed
2023-06-14 15:35:03,494:INFO:  explainerdashboard: Not installed
2023-06-14 15:35:03,494:INFO:             autoviz: Not installed
2023-06-14 15:35:03,494:INFO:           fairlearn: Not installed
2023-06-14 15:35:03,494:INFO:             xgboost: 1.7.5
2023-06-14 15:35:03,494:INFO:            catboost: Not installed
2023-06-14 15:35:03,494:INFO:              kmodes: Not installed
2023-06-14 15:35:03,495:INFO:             mlxtend: Not installed
2023-06-14 15:35:03,495:INFO:       statsforecast: Not installed
2023-06-14 15:35:03,495:INFO:        tune_sklearn: Not installed
2023-06-14 15:35:03,495:INFO:                 ray: Not installed
2023-06-14 15:35:03,495:INFO:            hyperopt: Not installed
2023-06-14 15:35:03,495:INFO:              optuna: Not installed
2023-06-14 15:35:03,495:INFO:               skopt: Not installed
2023-06-14 15:35:03,496:INFO:              mlflow: Not installed
2023-06-14 15:35:03,496:INFO:              gradio: Not installed
2023-06-14 15:35:03,496:INFO:             fastapi: Not installed
2023-06-14 15:35:03,496:INFO:             uvicorn: Not installed
2023-06-14 15:35:03,496:INFO:              m2cgen: Not installed
2023-06-14 15:35:03,496:INFO:           evidently: Not installed
2023-06-14 15:35:03,496:INFO:               fugue: Not installed
2023-06-14 15:35:03,497:INFO:           streamlit: Not installed
2023-06-14 15:35:03,497:INFO:             prophet: Not installed
2023-06-14 15:35:03,497:INFO:None
2023-06-14 15:35:03,497:INFO:Set up data.
2023-06-14 15:35:03,517:INFO:Set up train/test split.
2023-06-14 15:35:03,525:INFO:Set up index.
2023-06-14 15:35:03,526:INFO:Set up folding strategy.
2023-06-14 15:35:03,526:INFO:Assigning column types.
2023-06-14 15:35:03,533:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:35:03,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,643:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:03,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:03,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,763:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:03,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:03,767:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:35:03,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,855:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:03,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:03,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:35:03,952:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:03,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:03,967:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:35:04,064:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:04,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:04,154:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:35:04,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:35:04,161:INFO:Preparing preprocessing pipeline...
2023-06-14 15:35:04,163:INFO:Set up label encoding.
2023-06-14 15:35:04,163:INFO:Set up simple imputation.
2023-06-14 15:35:04,172:INFO:Set up encoding of categorical features.
2023-06-14 15:35:04,175:INFO:Set up column name cleaning.
2023-06-14 15:48:14,306:INFO:PyCaret ClassificationExperiment
2023-06-14 15:48:14,306:INFO:Logging name: clf-default-name
2023-06-14 15:48:14,306:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:48:14,306:INFO:version 3.0.2
2023-06-14 15:48:14,307:INFO:Initializing setup()
2023-06-14 15:48:14,307:INFO:self.USI: eb4e
2023-06-14 15:48:14,307:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:48:14,307:INFO:Checking environment
2023-06-14 15:48:14,307:INFO:python_version: 3.10.5
2023-06-14 15:48:14,308:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:48:14,308:INFO:machine: AMD64
2023-06-14 15:48:14,308:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:48:14,315:INFO:Memory: svmem(total=17130000384, available=9745047552, percent=43.1, used=7384952832, free=9745047552)
2023-06-14 15:48:14,315:INFO:Physical Core: 4
2023-06-14 15:48:14,316:INFO:Logical Core: 4
2023-06-14 15:48:14,316:INFO:Checking libraries
2023-06-14 15:48:14,316:INFO:System:
2023-06-14 15:48:14,316:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:48:14,316:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:48:14,317:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:48:14,317:INFO:PyCaret required dependencies:
2023-06-14 15:48:14,318:INFO:                 pip: 23.0.1
2023-06-14 15:48:14,318:INFO:          setuptools: 58.1.0
2023-06-14 15:48:14,318:INFO:             pycaret: 3.0.2
2023-06-14 15:48:14,318:INFO:             IPython: 8.9.0
2023-06-14 15:48:14,318:INFO:          ipywidgets: 8.0.6
2023-06-14 15:48:14,318:INFO:                tqdm: 4.65.0
2023-06-14 15:48:14,319:INFO:               numpy: 1.23.5
2023-06-14 15:48:14,319:INFO:              pandas: 1.5.3
2023-06-14 15:48:14,319:INFO:              jinja2: 3.1.2
2023-06-14 15:48:14,319:INFO:               scipy: 1.10.1
2023-06-14 15:48:14,321:INFO:              joblib: 1.2.0
2023-06-14 15:48:14,321:INFO:             sklearn: 1.2.2
2023-06-14 15:48:14,321:INFO:                pyod: 1.0.9
2023-06-14 15:48:14,321:INFO:            imblearn: 0.10.1
2023-06-14 15:48:14,321:INFO:   category_encoders: 2.6.1
2023-06-14 15:48:14,321:INFO:            lightgbm: 3.3.5
2023-06-14 15:48:14,322:INFO:               numba: 0.57.0
2023-06-14 15:48:14,322:INFO:            requests: 2.28.2
2023-06-14 15:48:14,322:INFO:          matplotlib: 3.7.1
2023-06-14 15:48:14,322:INFO:          scikitplot: 0.3.7
2023-06-14 15:48:14,322:INFO:         yellowbrick: 1.5
2023-06-14 15:48:14,322:INFO:              plotly: 5.15.0
2023-06-14 15:48:14,322:INFO:             kaleido: 0.2.1
2023-06-14 15:48:14,322:INFO:         statsmodels: 0.14.0
2023-06-14 15:48:14,323:INFO:              sktime: 0.17.0
2023-06-14 15:48:14,323:INFO:               tbats: 1.1.3
2023-06-14 15:48:14,323:INFO:            pmdarima: 2.0.3
2023-06-14 15:48:14,323:INFO:              psutil: 5.9.4
2023-06-14 15:48:14,323:INFO:PyCaret optional dependencies:
2023-06-14 15:48:14,323:INFO:                shap: Not installed
2023-06-14 15:48:14,323:INFO:           interpret: 0.4.2
2023-06-14 15:48:14,324:INFO:                umap: Not installed
2023-06-14 15:48:14,324:INFO:    pandas_profiling: Not installed
2023-06-14 15:48:14,324:INFO:  explainerdashboard: Not installed
2023-06-14 15:48:14,325:INFO:             autoviz: Not installed
2023-06-14 15:48:14,325:INFO:           fairlearn: Not installed
2023-06-14 15:48:14,328:INFO:             xgboost: 1.7.5
2023-06-14 15:48:14,328:INFO:            catboost: Not installed
2023-06-14 15:48:14,329:INFO:              kmodes: Not installed
2023-06-14 15:48:14,329:INFO:             mlxtend: Not installed
2023-06-14 15:48:14,329:INFO:       statsforecast: Not installed
2023-06-14 15:48:14,329:INFO:        tune_sklearn: Not installed
2023-06-14 15:48:14,330:INFO:                 ray: Not installed
2023-06-14 15:48:14,330:INFO:            hyperopt: Not installed
2023-06-14 15:48:14,330:INFO:              optuna: Not installed
2023-06-14 15:48:14,330:INFO:               skopt: Not installed
2023-06-14 15:48:14,330:INFO:              mlflow: Not installed
2023-06-14 15:48:14,331:INFO:              gradio: Not installed
2023-06-14 15:48:14,331:INFO:             fastapi: Not installed
2023-06-14 15:48:14,331:INFO:             uvicorn: Not installed
2023-06-14 15:48:14,331:INFO:              m2cgen: Not installed
2023-06-14 15:48:14,332:INFO:           evidently: Not installed
2023-06-14 15:48:14,332:INFO:               fugue: Not installed
2023-06-14 15:48:14,332:INFO:           streamlit: Not installed
2023-06-14 15:48:14,333:INFO:             prophet: Not installed
2023-06-14 15:48:14,333:INFO:None
2023-06-14 15:48:14,333:INFO:Set up data.
2023-06-14 15:48:14,377:INFO:Set up train/test split.
2023-06-14 15:48:14,391:INFO:Set up index.
2023-06-14 15:48:14,393:INFO:Set up folding strategy.
2023-06-14 15:48:14,393:INFO:Assigning column types.
2023-06-14 15:48:14,466:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:48:14,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,520:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,566:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:14,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:14,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,681:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:14,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:14,685:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:48:14,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,779:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:14,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:14,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:48:14,869:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:14,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:14,874:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:48:14,974:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:14,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:15,064:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:48:15,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:48:15,069:INFO:Preparing preprocessing pipeline...
2023-06-14 15:48:15,071:INFO:Set up label encoding.
2023-06-14 15:48:15,071:INFO:Set up simple imputation.
2023-06-14 15:48:15,076:INFO:Set up encoding of categorical features.
2023-06-14 15:48:15,077:INFO:Set up column name cleaning.
2023-06-14 15:49:50,694:INFO:PyCaret ClassificationExperiment
2023-06-14 15:49:50,694:INFO:Logging name: clf-default-name
2023-06-14 15:49:50,694:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:49:50,694:INFO:version 3.0.2
2023-06-14 15:49:50,694:INFO:Initializing setup()
2023-06-14 15:49:50,695:INFO:self.USI: 2b83
2023-06-14 15:49:50,695:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:49:50,695:INFO:Checking environment
2023-06-14 15:49:50,696:INFO:python_version: 3.10.5
2023-06-14 15:49:50,696:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:49:50,696:INFO:machine: AMD64
2023-06-14 15:49:50,696:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:49:50,700:INFO:Memory: svmem(total=17130000384, available=9649532928, percent=43.7, used=7480467456, free=9649532928)
2023-06-14 15:49:50,701:INFO:Physical Core: 4
2023-06-14 15:49:50,701:INFO:Logical Core: 4
2023-06-14 15:49:50,701:INFO:Checking libraries
2023-06-14 15:49:50,701:INFO:System:
2023-06-14 15:49:50,701:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:49:50,701:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:49:50,702:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:49:50,702:INFO:PyCaret required dependencies:
2023-06-14 15:49:50,702:INFO:                 pip: 23.0.1
2023-06-14 15:49:50,702:INFO:          setuptools: 58.1.0
2023-06-14 15:49:50,702:INFO:             pycaret: 3.0.2
2023-06-14 15:49:50,702:INFO:             IPython: 8.9.0
2023-06-14 15:49:50,702:INFO:          ipywidgets: 8.0.6
2023-06-14 15:49:50,702:INFO:                tqdm: 4.65.0
2023-06-14 15:49:50,702:INFO:               numpy: 1.23.5
2023-06-14 15:49:50,703:INFO:              pandas: 1.5.3
2023-06-14 15:49:50,703:INFO:              jinja2: 3.1.2
2023-06-14 15:49:50,703:INFO:               scipy: 1.10.1
2023-06-14 15:49:50,703:INFO:              joblib: 1.2.0
2023-06-14 15:49:50,704:INFO:             sklearn: 1.2.2
2023-06-14 15:49:50,704:INFO:                pyod: 1.0.9
2023-06-14 15:49:50,704:INFO:            imblearn: 0.10.1
2023-06-14 15:49:50,704:INFO:   category_encoders: 2.6.1
2023-06-14 15:49:50,704:INFO:            lightgbm: 3.3.5
2023-06-14 15:49:50,704:INFO:               numba: 0.57.0
2023-06-14 15:49:50,704:INFO:            requests: 2.28.2
2023-06-14 15:49:50,704:INFO:          matplotlib: 3.7.1
2023-06-14 15:49:50,704:INFO:          scikitplot: 0.3.7
2023-06-14 15:49:50,705:INFO:         yellowbrick: 1.5
2023-06-14 15:49:50,705:INFO:              plotly: 5.15.0
2023-06-14 15:49:50,705:INFO:             kaleido: 0.2.1
2023-06-14 15:49:50,705:INFO:         statsmodels: 0.14.0
2023-06-14 15:49:50,705:INFO:              sktime: 0.17.0
2023-06-14 15:49:50,705:INFO:               tbats: 1.1.3
2023-06-14 15:49:50,705:INFO:            pmdarima: 2.0.3
2023-06-14 15:49:50,705:INFO:              psutil: 5.9.4
2023-06-14 15:49:50,705:INFO:PyCaret optional dependencies:
2023-06-14 15:49:50,705:INFO:                shap: Not installed
2023-06-14 15:49:50,706:INFO:           interpret: 0.4.2
2023-06-14 15:49:50,706:INFO:                umap: Not installed
2023-06-14 15:49:50,706:INFO:    pandas_profiling: Not installed
2023-06-14 15:49:50,706:INFO:  explainerdashboard: Not installed
2023-06-14 15:49:50,706:INFO:             autoviz: Not installed
2023-06-14 15:49:50,706:INFO:           fairlearn: Not installed
2023-06-14 15:49:50,706:INFO:             xgboost: 1.7.5
2023-06-14 15:49:50,706:INFO:            catboost: Not installed
2023-06-14 15:49:50,706:INFO:              kmodes: Not installed
2023-06-14 15:49:50,706:INFO:             mlxtend: Not installed
2023-06-14 15:49:50,706:INFO:       statsforecast: Not installed
2023-06-14 15:49:50,707:INFO:        tune_sklearn: Not installed
2023-06-14 15:49:50,707:INFO:                 ray: Not installed
2023-06-14 15:49:50,707:INFO:            hyperopt: Not installed
2023-06-14 15:49:50,707:INFO:              optuna: Not installed
2023-06-14 15:49:50,707:INFO:               skopt: Not installed
2023-06-14 15:49:50,707:INFO:              mlflow: Not installed
2023-06-14 15:49:50,707:INFO:              gradio: Not installed
2023-06-14 15:49:50,707:INFO:             fastapi: Not installed
2023-06-14 15:49:50,707:INFO:             uvicorn: Not installed
2023-06-14 15:49:50,707:INFO:              m2cgen: Not installed
2023-06-14 15:49:50,708:INFO:           evidently: Not installed
2023-06-14 15:49:50,708:INFO:               fugue: Not installed
2023-06-14 15:49:50,708:INFO:           streamlit: Not installed
2023-06-14 15:49:50,708:INFO:             prophet: Not installed
2023-06-14 15:49:50,708:INFO:None
2023-06-14 15:49:50,708:INFO:Set up data.
2023-06-14 15:49:50,728:INFO:Set up train/test split.
2023-06-14 15:49:50,736:INFO:Set up index.
2023-06-14 15:49:50,736:INFO:Set up folding strategy.
2023-06-14 15:49:50,736:INFO:Assigning column types.
2023-06-14 15:49:50,743:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:49:50,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:49:50,801:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:49:50,841:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:50,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:50,913:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:49:50,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:49:50,966:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:50,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:50,971:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:49:51,035:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:49:51,067:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:51,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:51,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:49:51,164:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:51,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:51,168:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:49:51,257:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:51,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:51,351:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:49:51,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:49:51,357:INFO:Preparing preprocessing pipeline...
2023-06-14 15:49:51,359:INFO:Set up label encoding.
2023-06-14 15:49:51,359:INFO:Set up simple imputation.
2023-06-14 15:49:51,363:INFO:Set up encoding of categorical features.
2023-06-14 15:49:51,365:INFO:Set up column name cleaning.
2023-06-14 15:49:51,885:INFO:Finished creating preprocessing pipeline.
2023-06-14 15:49:51,909:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'Change', 'Code', 'MA_5',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI', 'STD'...
                 TransformerWrapper(exclude=None, include=['Name'],
                                    transformer=OneHotEncoder(cols=['Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 15:49:51,910:INFO:Creating final display dataframe.
2023-06-14 15:50:31,238:INFO:PyCaret RegressionExperiment
2023-06-14 15:50:31,238:INFO:Logging name: reg-default-name
2023-06-14 15:50:31,238:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 15:50:31,238:INFO:version 3.0.2
2023-06-14 15:50:31,238:INFO:Initializing setup()
2023-06-14 15:50:31,238:INFO:self.USI: b455
2023-06-14 15:50:31,238:INFO:self._variable_keys: {'X', 'data', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'transform_target_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:50:31,238:INFO:Checking environment
2023-06-14 15:50:31,238:INFO:python_version: 3.10.5
2023-06-14 15:50:31,239:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:50:31,239:INFO:machine: AMD64
2023-06-14 15:50:31,239:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:50:31,242:INFO:Memory: svmem(total=17130000384, available=9715585024, percent=43.3, used=7414415360, free=9715585024)
2023-06-14 15:50:31,242:INFO:Physical Core: 4
2023-06-14 15:50:31,243:INFO:Logical Core: 4
2023-06-14 15:50:31,243:INFO:Checking libraries
2023-06-14 15:50:31,243:INFO:System:
2023-06-14 15:50:31,243:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:50:31,243:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:50:31,243:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:50:31,244:INFO:PyCaret required dependencies:
2023-06-14 15:50:31,244:INFO:                 pip: 23.0.1
2023-06-14 15:50:31,244:INFO:          setuptools: 58.1.0
2023-06-14 15:50:31,244:INFO:             pycaret: 3.0.2
2023-06-14 15:50:31,244:INFO:             IPython: 8.9.0
2023-06-14 15:50:31,244:INFO:          ipywidgets: 8.0.6
2023-06-14 15:50:31,244:INFO:                tqdm: 4.65.0
2023-06-14 15:50:31,245:INFO:               numpy: 1.23.5
2023-06-14 15:50:31,245:INFO:              pandas: 1.5.3
2023-06-14 15:50:31,245:INFO:              jinja2: 3.1.2
2023-06-14 15:50:31,245:INFO:               scipy: 1.10.1
2023-06-14 15:50:31,245:INFO:              joblib: 1.2.0
2023-06-14 15:50:31,245:INFO:             sklearn: 1.2.2
2023-06-14 15:50:31,245:INFO:                pyod: 1.0.9
2023-06-14 15:50:31,245:INFO:            imblearn: 0.10.1
2023-06-14 15:50:31,245:INFO:   category_encoders: 2.6.1
2023-06-14 15:50:31,246:INFO:            lightgbm: 3.3.5
2023-06-14 15:50:31,246:INFO:               numba: 0.57.0
2023-06-14 15:50:31,246:INFO:            requests: 2.28.2
2023-06-14 15:50:31,246:INFO:          matplotlib: 3.7.1
2023-06-14 15:50:31,246:INFO:          scikitplot: 0.3.7
2023-06-14 15:50:31,247:INFO:         yellowbrick: 1.5
2023-06-14 15:50:31,247:INFO:              plotly: 5.15.0
2023-06-14 15:50:31,247:INFO:             kaleido: 0.2.1
2023-06-14 15:50:31,247:INFO:         statsmodels: 0.14.0
2023-06-14 15:50:31,247:INFO:              sktime: 0.17.0
2023-06-14 15:50:31,247:INFO:               tbats: 1.1.3
2023-06-14 15:50:31,247:INFO:            pmdarima: 2.0.3
2023-06-14 15:50:31,247:INFO:              psutil: 5.9.4
2023-06-14 15:50:31,247:INFO:PyCaret optional dependencies:
2023-06-14 15:50:31,248:INFO:                shap: Not installed
2023-06-14 15:50:31,248:INFO:           interpret: 0.4.2
2023-06-14 15:50:31,248:INFO:                umap: Not installed
2023-06-14 15:50:31,248:INFO:    pandas_profiling: Not installed
2023-06-14 15:50:31,248:INFO:  explainerdashboard: Not installed
2023-06-14 15:50:31,248:INFO:             autoviz: Not installed
2023-06-14 15:50:31,248:INFO:           fairlearn: Not installed
2023-06-14 15:50:31,249:INFO:             xgboost: 1.7.5
2023-06-14 15:50:31,249:INFO:            catboost: Not installed
2023-06-14 15:50:31,249:INFO:              kmodes: Not installed
2023-06-14 15:50:31,249:INFO:             mlxtend: Not installed
2023-06-14 15:50:31,249:INFO:       statsforecast: Not installed
2023-06-14 15:50:31,249:INFO:        tune_sklearn: Not installed
2023-06-14 15:50:31,249:INFO:                 ray: Not installed
2023-06-14 15:50:31,250:INFO:            hyperopt: Not installed
2023-06-14 15:50:31,250:INFO:              optuna: Not installed
2023-06-14 15:50:31,250:INFO:               skopt: Not installed
2023-06-14 15:50:31,251:INFO:              mlflow: Not installed
2023-06-14 15:50:31,251:INFO:              gradio: Not installed
2023-06-14 15:50:31,251:INFO:             fastapi: Not installed
2023-06-14 15:50:31,251:INFO:             uvicorn: Not installed
2023-06-14 15:50:31,251:INFO:              m2cgen: Not installed
2023-06-14 15:50:31,251:INFO:           evidently: Not installed
2023-06-14 15:50:31,251:INFO:               fugue: Not installed
2023-06-14 15:50:31,251:INFO:           streamlit: Not installed
2023-06-14 15:50:31,252:INFO:             prophet: Not installed
2023-06-14 15:50:31,252:INFO:None
2023-06-14 15:50:31,252:INFO:Set up data.
2023-06-14 15:50:31,262:INFO:Set up train/test split.
2023-06-14 15:50:31,267:INFO:Set up index.
2023-06-14 15:50:31,268:INFO:Set up folding strategy.
2023-06-14 15:50:31,268:INFO:Assigning column types.
2023-06-14 15:50:31,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:50:31,274:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,285:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,421:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:31,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:31,425:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,438:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,511:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,561:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:31,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:31,565:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 15:50:31,570:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,575:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,699:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:31,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:31,709:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,715:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,789:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,842:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:31,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:31,845:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 15:50:31,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:31,982:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:31,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:31,998:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,076:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,129:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,133:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 15:50:32,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,265:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,351:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,404:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:50:32,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,544:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:50:32,685:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,689:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 15:50:32,819:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,946:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:32,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:32,953:INFO:Preparing preprocessing pipeline...
2023-06-14 15:50:32,953:INFO:Set up simple imputation.
2023-06-14 15:50:32,955:INFO:Set up column name cleaning.
2023-06-14 15:50:33,141:INFO:Finished creating preprocessing pipeline.
2023-06-14 15:50:33,153:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 15:50:33,153:INFO:Creating final display dataframe.
2023-06-14 15:50:33,728:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1320, 8)
4        Transformed data shape         (1320, 8)
5   Transformed train set shape          (923, 8)
6    Transformed test set shape          (397, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b455
2023-06-14 15:50:33,872:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:33,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:33,997:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:50:33,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:50:34,001:INFO:setup() successfully completed in 2.97s...............
2023-06-14 15:50:34,002:INFO:Initializing create_model()
2023-06-14 15:50:34,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000011B87E2A3B0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:50:34,002:INFO:Checking exceptions
2023-06-14 15:50:34,041:INFO:Importing libraries
2023-06-14 15:50:34,041:INFO:Copying training dataset
2023-06-14 15:50:34,049:INFO:Defining folds
2023-06-14 15:50:34,049:INFO:Declaring metric variables
2023-06-14 15:50:34,057:INFO:Importing untrained model
2023-06-14 15:50:34,066:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 15:50:34,081:INFO:Starting cross validation
2023-06-14 15:50:34,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 15:50:44,329:INFO:Calculating mean and std
2023-06-14 15:50:44,331:INFO:Creating metrics dataframe
2023-06-14 15:50:44,343:INFO:Finalizing model
2023-06-14 15:50:45,072:INFO:Uploading results into container
2023-06-14 15:50:45,073:INFO:Uploading model into container now
2023-06-14 15:50:45,105:INFO:_master_model_container: 1
2023-06-14 15:50:45,106:INFO:_display_container: 2
2023-06-14 15:50:45,109:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-06-14 15:50:45,109:INFO:create_model() successfully completed......................................
2023-06-14 15:50:45,507:INFO:Initializing tune_model()
2023-06-14 15:50:45,507:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000011B87E2A3B0>)
2023-06-14 15:50:45,508:INFO:Checking exceptions
2023-06-14 15:51:01,143:INFO:PyCaret ClassificationExperiment
2023-06-14 15:51:01,143:INFO:Logging name: clf-default-name
2023-06-14 15:51:01,143:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-14 15:51:01,144:INFO:version 3.0.2
2023-06-14 15:51:01,144:INFO:Initializing setup()
2023-06-14 15:51:01,144:INFO:self.USI: 8a4e
2023-06-14 15:51:01,144:INFO:self._variable_keys: {'X', 'data', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 15:51:01,144:INFO:Checking environment
2023-06-14 15:51:01,144:INFO:python_version: 3.10.5
2023-06-14 15:51:01,144:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 15:51:01,145:INFO:machine: AMD64
2023-06-14 15:51:01,145:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:51:01,148:INFO:Memory: svmem(total=17130000384, available=9102348288, percent=46.9, used=8027652096, free=9102348288)
2023-06-14 15:51:01,148:INFO:Physical Core: 4
2023-06-14 15:51:01,148:INFO:Logical Core: 4
2023-06-14 15:51:01,148:INFO:Checking libraries
2023-06-14 15:51:01,148:INFO:System:
2023-06-14 15:51:01,149:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 15:51:01,149:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 15:51:01,150:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:51:01,150:INFO:PyCaret required dependencies:
2023-06-14 15:51:01,150:INFO:                 pip: 23.0.1
2023-06-14 15:51:01,150:INFO:          setuptools: 58.1.0
2023-06-14 15:51:01,151:INFO:             pycaret: 3.0.2
2023-06-14 15:51:01,151:INFO:             IPython: 8.9.0
2023-06-14 15:51:01,151:INFO:          ipywidgets: 8.0.6
2023-06-14 15:51:01,151:INFO:                tqdm: 4.65.0
2023-06-14 15:51:01,151:INFO:               numpy: 1.23.5
2023-06-14 15:51:01,151:INFO:              pandas: 1.5.3
2023-06-14 15:51:01,151:INFO:              jinja2: 3.1.2
2023-06-14 15:51:01,152:INFO:               scipy: 1.10.1
2023-06-14 15:51:01,152:INFO:              joblib: 1.2.0
2023-06-14 15:51:01,152:INFO:             sklearn: 1.2.2
2023-06-14 15:51:01,152:INFO:                pyod: 1.0.9
2023-06-14 15:51:01,152:INFO:            imblearn: 0.10.1
2023-06-14 15:51:01,152:INFO:   category_encoders: 2.6.1
2023-06-14 15:51:01,152:INFO:            lightgbm: 3.3.5
2023-06-14 15:51:01,153:INFO:               numba: 0.57.0
2023-06-14 15:51:01,153:INFO:            requests: 2.28.2
2023-06-14 15:51:01,153:INFO:          matplotlib: 3.7.1
2023-06-14 15:51:01,153:INFO:          scikitplot: 0.3.7
2023-06-14 15:51:01,153:INFO:         yellowbrick: 1.5
2023-06-14 15:51:01,153:INFO:              plotly: 5.15.0
2023-06-14 15:51:01,153:INFO:             kaleido: 0.2.1
2023-06-14 15:51:01,153:INFO:         statsmodels: 0.14.0
2023-06-14 15:51:01,154:INFO:              sktime: 0.17.0
2023-06-14 15:51:01,154:INFO:               tbats: 1.1.3
2023-06-14 15:51:01,154:INFO:            pmdarima: 2.0.3
2023-06-14 15:51:01,154:INFO:              psutil: 5.9.4
2023-06-14 15:51:01,154:INFO:PyCaret optional dependencies:
2023-06-14 15:51:01,155:INFO:                shap: Not installed
2023-06-14 15:51:01,155:INFO:           interpret: 0.4.2
2023-06-14 15:51:01,155:INFO:                umap: Not installed
2023-06-14 15:51:01,155:INFO:    pandas_profiling: Not installed
2023-06-14 15:51:01,155:INFO:  explainerdashboard: Not installed
2023-06-14 15:51:01,155:INFO:             autoviz: Not installed
2023-06-14 15:51:01,155:INFO:           fairlearn: Not installed
2023-06-14 15:51:01,155:INFO:             xgboost: 1.7.5
2023-06-14 15:51:01,156:INFO:            catboost: Not installed
2023-06-14 15:51:01,156:INFO:              kmodes: Not installed
2023-06-14 15:51:01,157:INFO:             mlxtend: Not installed
2023-06-14 15:51:01,157:INFO:       statsforecast: Not installed
2023-06-14 15:51:01,157:INFO:        tune_sklearn: Not installed
2023-06-14 15:51:01,157:INFO:                 ray: Not installed
2023-06-14 15:51:01,157:INFO:            hyperopt: Not installed
2023-06-14 15:51:01,157:INFO:              optuna: Not installed
2023-06-14 15:51:01,157:INFO:               skopt: Not installed
2023-06-14 15:51:01,157:INFO:              mlflow: Not installed
2023-06-14 15:51:01,158:INFO:              gradio: Not installed
2023-06-14 15:51:01,158:INFO:             fastapi: Not installed
2023-06-14 15:51:01,158:INFO:             uvicorn: Not installed
2023-06-14 15:51:01,158:INFO:              m2cgen: Not installed
2023-06-14 15:51:01,158:INFO:           evidently: Not installed
2023-06-14 15:51:01,159:INFO:               fugue: Not installed
2023-06-14 15:51:01,159:INFO:           streamlit: Not installed
2023-06-14 15:51:01,159:INFO:             prophet: Not installed
2023-06-14 15:51:01,159:INFO:None
2023-06-14 15:51:01,159:INFO:Set up data.
2023-06-14 15:51:01,169:INFO:Set up train/test split.
2023-06-14 15:51:01,174:INFO:Set up index.
2023-06-14 15:51:01,174:INFO:Set up folding strategy.
2023-06-14 15:51:01,175:INFO:Assigning column types.
2023-06-14 15:51:01,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:51:01,238:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,273:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,332:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,367:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,371:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:51:01,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,540:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-14 15:51:01,637:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,642:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-14 15:51:01,727:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,823:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:01,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:01,830:INFO:Preparing preprocessing pipeline...
2023-06-14 15:51:01,834:INFO:Set up label encoding.
2023-06-14 15:51:01,834:INFO:Set up simple imputation.
2023-06-14 15:51:01,836:INFO:Set up column name cleaning.
2023-06-14 15:51:02,097:INFO:Finished creating preprocessing pipeline.
2023-06-14 15:51:02,117:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 15:51:02,117:INFO:Creating final display dataframe.
2023-06-14 15:51:02,697:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape          (1320, 8)
5        Transformed data shape          (1320, 8)
6   Transformed train set shape           (923, 8)
7    Transformed test set shape           (397, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               8a4e
2023-06-14 15:51:02,795:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:02,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:02,877:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 15:51:02,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:51:02,882:INFO:setup() successfully completed in 1.96s...............
2023-06-14 15:51:02,883:INFO:Initializing create_model()
2023-06-14 15:51:02,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011B8676C610>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:51:02,883:INFO:Checking exceptions
2023-06-14 15:51:02,913:INFO:Importing libraries
2023-06-14 15:51:02,913:INFO:Copying training dataset
2023-06-14 15:51:02,923:INFO:Defining folds
2023-06-14 15:51:02,923:INFO:Declaring metric variables
2023-06-14 15:51:02,931:INFO:Importing untrained model
2023-06-14 15:51:02,943:INFO:Random Forest Classifier Imported successfully
2023-06-14 15:51:02,963:INFO:Starting cross validation
2023-06-14 15:51:02,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 15:51:09,373:INFO:Calculating mean and std
2023-06-14 15:51:09,375:INFO:Creating metrics dataframe
2023-06-14 15:51:09,387:INFO:Finalizing model
2023-06-14 15:51:10,643:INFO:Uploading results into container
2023-06-14 15:51:10,645:INFO:Uploading model into container now
2023-06-14 15:51:10,672:INFO:_master_model_container: 1
2023-06-14 15:51:10,672:INFO:_display_container: 2
2023-06-14 15:51:10,674:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-14 15:51:10,674:INFO:create_model() successfully completed......................................
2023-06-14 15:51:11,042:INFO:Initializing predict_model()
2023-06-14 15:51:11,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000011B8676C610>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000011BFAB15000>)
2023-06-14 15:51:11,042:INFO:Checking exceptions
2023-06-14 15:51:11,043:INFO:Preloading libraries
2023-06-14 15:51:11,046:INFO:Set up data.
2023-06-14 15:51:11,053:INFO:Set up index.
2023-06-14 15:51:11,364:INFO:Initializing save_model()
2023-06-14 15:51:11,364:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), model_name=rf_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-14 15:51:11,364:INFO:Adding model into prep_pipe
2023-06-14 15:51:11,501:INFO:rf_model.pkl saved in current working directory
2023-06-14 15:51:11,519:INFO:Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=123,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-06-14 15:51:11,519:INFO:save_model() successfully completed......................................
2023-06-14 16:40:44,097:INFO:PyCaret RegressionExperiment
2023-06-14 16:40:44,097:INFO:Logging name: reg-default-name
2023-06-14 16:40:44,097:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 16:40:44,097:INFO:version 3.0.2
2023-06-14 16:40:44,097:INFO:Initializing setup()
2023-06-14 16:40:44,097:INFO:self.USI: 583f
2023-06-14 16:40:44,097:INFO:self._variable_keys: {'X', 'data', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'USI', 'idx', 'n_jobs_param', 'y_train', 'seed', 'transform_target_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'memory', 'logging_param', 'X_test', 'y_test', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'y', 'target_param', 'exp_name_log'}
2023-06-14 16:40:44,098:INFO:Checking environment
2023-06-14 16:40:44,098:INFO:python_version: 3.10.5
2023-06-14 16:40:44,098:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-14 16:40:44,098:INFO:machine: AMD64
2023-06-14 16:40:44,098:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 16:40:44,102:INFO:Memory: svmem(total=17130000384, available=9756045312, percent=43.0, used=7373955072, free=9756045312)
2023-06-14 16:40:44,102:INFO:Physical Core: 4
2023-06-14 16:40:44,102:INFO:Logical Core: 4
2023-06-14 16:40:44,103:INFO:Checking libraries
2023-06-14 16:40:44,103:INFO:System:
2023-06-14 16:40:44,103:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-14 16:40:44,103:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-14 16:40:44,103:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 16:40:44,103:INFO:PyCaret required dependencies:
2023-06-14 16:40:44,103:INFO:                 pip: 23.0.1
2023-06-14 16:40:44,104:INFO:          setuptools: 58.1.0
2023-06-14 16:40:44,104:INFO:             pycaret: 3.0.2
2023-06-14 16:40:44,104:INFO:             IPython: 8.9.0
2023-06-14 16:40:44,104:INFO:          ipywidgets: 8.0.6
2023-06-14 16:40:44,104:INFO:                tqdm: 4.65.0
2023-06-14 16:40:44,104:INFO:               numpy: 1.23.5
2023-06-14 16:40:44,104:INFO:              pandas: 1.5.3
2023-06-14 16:40:44,104:INFO:              jinja2: 3.1.2
2023-06-14 16:40:44,105:INFO:               scipy: 1.10.1
2023-06-14 16:40:44,105:INFO:              joblib: 1.2.0
2023-06-14 16:40:44,105:INFO:             sklearn: 1.2.2
2023-06-14 16:40:44,105:INFO:                pyod: 1.0.9
2023-06-14 16:40:44,105:INFO:            imblearn: 0.10.1
2023-06-14 16:40:44,105:INFO:   category_encoders: 2.6.1
2023-06-14 16:40:44,105:INFO:            lightgbm: 3.3.5
2023-06-14 16:40:44,106:INFO:               numba: 0.57.0
2023-06-14 16:40:44,106:INFO:            requests: 2.28.2
2023-06-14 16:40:44,106:INFO:          matplotlib: 3.7.1
2023-06-14 16:40:44,106:INFO:          scikitplot: 0.3.7
2023-06-14 16:40:44,106:INFO:         yellowbrick: 1.5
2023-06-14 16:40:44,106:INFO:              plotly: 5.15.0
2023-06-14 16:40:44,106:INFO:             kaleido: 0.2.1
2023-06-14 16:40:44,106:INFO:         statsmodels: 0.14.0
2023-06-14 16:40:44,106:INFO:              sktime: 0.17.0
2023-06-14 16:40:44,106:INFO:               tbats: 1.1.3
2023-06-14 16:40:44,107:INFO:            pmdarima: 2.0.3
2023-06-14 16:40:44,107:INFO:              psutil: 5.9.4
2023-06-14 16:40:44,107:INFO:PyCaret optional dependencies:
2023-06-14 16:40:44,107:INFO:                shap: Not installed
2023-06-14 16:40:44,107:INFO:           interpret: 0.4.2
2023-06-14 16:40:44,107:INFO:                umap: Not installed
2023-06-14 16:40:44,107:INFO:    pandas_profiling: Not installed
2023-06-14 16:40:44,108:INFO:  explainerdashboard: Not installed
2023-06-14 16:40:44,108:INFO:             autoviz: Not installed
2023-06-14 16:40:44,108:INFO:           fairlearn: Not installed
2023-06-14 16:40:44,108:INFO:             xgboost: 1.7.5
2023-06-14 16:40:44,109:INFO:            catboost: Not installed
2023-06-14 16:40:44,109:INFO:              kmodes: Not installed
2023-06-14 16:40:44,109:INFO:             mlxtend: Not installed
2023-06-14 16:40:44,109:INFO:       statsforecast: Not installed
2023-06-14 16:40:44,109:INFO:        tune_sklearn: Not installed
2023-06-14 16:40:44,109:INFO:                 ray: Not installed
2023-06-14 16:40:44,109:INFO:            hyperopt: Not installed
2023-06-14 16:40:44,109:INFO:              optuna: Not installed
2023-06-14 16:40:44,109:INFO:               skopt: Not installed
2023-06-14 16:40:44,110:INFO:              mlflow: Not installed
2023-06-14 16:40:44,110:INFO:              gradio: Not installed
2023-06-14 16:40:44,110:INFO:             fastapi: Not installed
2023-06-14 16:40:44,110:INFO:             uvicorn: Not installed
2023-06-14 16:40:44,110:INFO:              m2cgen: Not installed
2023-06-14 16:40:44,110:INFO:           evidently: Not installed
2023-06-14 16:40:44,110:INFO:               fugue: Not installed
2023-06-14 16:40:44,111:INFO:           streamlit: Not installed
2023-06-14 16:40:44,111:INFO:             prophet: Not installed
2023-06-14 16:40:44,111:INFO:None
2023-06-14 16:40:44,111:INFO:Set up data.
2023-06-14 16:40:44,121:INFO:Set up train/test split.
2023-06-14 16:40:44,128:INFO:Set up index.
2023-06-14 16:40:44,128:INFO:Set up folding strategy.
2023-06-14 16:40:44,128:INFO:Assigning column types.
2023-06-14 16:40:44,134:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 16:40:44,135:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,140:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,211:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,260:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,261:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,265:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,270:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,341:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,390:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,394:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 16:40:44,399:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,405:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,521:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,529:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,534:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,650:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,654:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 16:40:44,664:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,777:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,791:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,857:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:44,908:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:44,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:44,911:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 16:40:44,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,075:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,228:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,231:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 16:40:45,318:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,378:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:40:45,506:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,510:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 16:40:45,640:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,772:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:45,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:45,781:INFO:Preparing preprocessing pipeline...
2023-06-14 16:40:45,781:INFO:Set up simple imputation.
2023-06-14 16:40:45,782:INFO:Set up column name cleaning.
2023-06-14 16:40:45,974:INFO:Finished creating preprocessing pipeline.
2023-06-14 16:40:45,988:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-14 16:40:45,989:INFO:Creating final display dataframe.
2023-06-14 16:40:46,291:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1320, 8)
4        Transformed data shape         (1320, 8)
5   Transformed train set shape          (923, 8)
6    Transformed test set shape          (397, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              583f
2023-06-14 16:40:46,447:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:46,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:46,594:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-14 16:40:46,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:40:46,598:INFO:setup() successfully completed in 2.77s...............
2023-06-14 16:40:46,599:INFO:Initializing create_model()
2023-06-14 16:40:46,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000011B8854D6C0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:40:46,599:INFO:Checking exceptions
2023-06-14 16:40:46,631:INFO:Importing libraries
2023-06-14 16:40:46,631:INFO:Copying training dataset
2023-06-14 16:40:46,639:INFO:Defining folds
2023-06-14 16:40:46,640:INFO:Declaring metric variables
2023-06-14 16:40:46,647:INFO:Importing untrained model
2023-06-14 16:40:46,656:INFO:Extreme Gradient Boosting Imported successfully
2023-06-14 16:40:46,671:INFO:Starting cross validation
2023-06-14 16:40:46,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-14 16:40:56,510:INFO:Calculating mean and std
2023-06-14 16:40:56,512:INFO:Creating metrics dataframe
2023-06-14 16:40:56,526:INFO:Finalizing model
2023-06-14 16:40:57,100:INFO:Uploading results into container
2023-06-14 16:40:57,102:INFO:Uploading model into container now
2023-06-14 16:40:57,131:INFO:_master_model_container: 1
2023-06-14 16:40:57,131:INFO:_display_container: 2
2023-06-14 16:40:57,134:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-06-14 16:40:57,134:INFO:create_model() successfully completed......................................
2023-06-14 16:40:57,302:INFO:Initializing tune_model()
2023-06-14 16:40:57,302:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000011B8854D6C0>)
2023-06-14 16:40:57,302:INFO:Checking exceptions
2023-06-22 15:38:06,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 15:38:06,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 15:38:06,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 15:38:06,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 15:38:14,506:INFO:Soft dependency imported: prophet: 1.1.4
2023-06-22 15:38:16,937:INFO:PyCaret ClassificationExperiment
2023-06-22 15:38:16,937:INFO:Logging name: clf-default-name
2023-06-22 15:38:16,937:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 15:38:16,937:INFO:version 3.0.2
2023-06-22 15:38:16,937:INFO:Initializing setup()
2023-06-22 15:38:16,937:INFO:self.USI: 28f3
2023-06-22 15:38:16,938:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-22 15:38:16,938:INFO:Checking environment
2023-06-22 15:38:16,938:INFO:python_version: 3.10.5
2023-06-22 15:38:16,938:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-22 15:38:16,938:INFO:machine: AMD64
2023-06-22 15:38:16,938:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 15:38:16,943:INFO:Memory: svmem(total=17130000384, available=8946630656, percent=47.8, used=8183369728, free=8946630656)
2023-06-22 15:38:16,943:INFO:Physical Core: 4
2023-06-22 15:38:16,943:INFO:Logical Core: 4
2023-06-22 15:38:16,944:INFO:Checking libraries
2023-06-22 15:38:16,944:INFO:System:
2023-06-22 15:38:16,944:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-22 15:38:16,944:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-22 15:38:16,945:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 15:38:16,945:INFO:PyCaret required dependencies:
2023-06-22 15:38:16,945:INFO:                 pip: 23.0.1
2023-06-22 15:38:16,945:INFO:          setuptools: 58.1.0
2023-06-22 15:38:16,945:INFO:             pycaret: 3.0.2
2023-06-22 15:38:16,945:INFO:             IPython: 8.9.0
2023-06-22 15:38:16,945:INFO:          ipywidgets: 8.0.6
2023-06-22 15:38:16,946:INFO:                tqdm: 4.65.0
2023-06-22 15:38:16,946:INFO:               numpy: 1.23.5
2023-06-22 15:38:16,946:INFO:              pandas: 1.5.3
2023-06-22 15:38:16,946:INFO:              jinja2: 3.1.2
2023-06-22 15:38:16,946:INFO:               scipy: 1.10.1
2023-06-22 15:38:16,946:INFO:              joblib: 1.2.0
2023-06-22 15:38:16,946:INFO:             sklearn: 1.2.2
2023-06-22 15:38:16,946:INFO:                pyod: 1.0.9
2023-06-22 15:38:16,946:INFO:            imblearn: 0.10.1
2023-06-22 15:38:16,947:INFO:   category_encoders: 2.6.1
2023-06-22 15:38:16,947:INFO:            lightgbm: 3.3.5
2023-06-22 15:38:16,947:INFO:               numba: 0.57.0
2023-06-22 15:38:16,947:INFO:            requests: 2.28.2
2023-06-22 15:38:16,947:INFO:          matplotlib: 3.7.1
2023-06-22 15:38:16,947:INFO:          scikitplot: 0.3.7
2023-06-22 15:38:16,947:INFO:         yellowbrick: 1.5
2023-06-22 15:38:16,947:INFO:              plotly: 5.15.0
2023-06-22 15:38:16,947:INFO:             kaleido: 0.2.1
2023-06-22 15:38:16,947:INFO:         statsmodels: 0.14.0
2023-06-22 15:38:16,947:INFO:              sktime: 0.17.0
2023-06-22 15:38:16,947:INFO:               tbats: 1.1.3
2023-06-22 15:38:16,948:INFO:            pmdarima: 2.0.3
2023-06-22 15:38:16,948:INFO:              psutil: 5.9.4
2023-06-22 15:38:16,948:INFO:PyCaret optional dependencies:
2023-06-22 15:38:16,979:INFO:                shap: Not installed
2023-06-22 15:38:16,979:INFO:           interpret: 0.4.2
2023-06-22 15:38:16,979:INFO:                umap: Not installed
2023-06-22 15:38:16,979:INFO:    pandas_profiling: Not installed
2023-06-22 15:38:16,979:INFO:  explainerdashboard: Not installed
2023-06-22 15:38:16,979:INFO:             autoviz: Not installed
2023-06-22 15:38:16,979:INFO:           fairlearn: Not installed
2023-06-22 15:38:16,979:INFO:             xgboost: 1.7.5
2023-06-22 15:38:16,979:INFO:            catboost: Not installed
2023-06-22 15:38:16,979:INFO:              kmodes: Not installed
2023-06-22 15:38:16,979:INFO:             mlxtend: Not installed
2023-06-22 15:38:16,979:INFO:       statsforecast: Not installed
2023-06-22 15:38:16,980:INFO:        tune_sklearn: Not installed
2023-06-22 15:38:16,980:INFO:                 ray: Not installed
2023-06-22 15:38:16,980:INFO:            hyperopt: 0.2.7
2023-06-22 15:38:16,980:INFO:              optuna: Not installed
2023-06-22 15:38:16,980:INFO:               skopt: Not installed
2023-06-22 15:38:16,980:INFO:              mlflow: Not installed
2023-06-22 15:38:16,980:INFO:              gradio: Not installed
2023-06-22 15:38:16,980:INFO:             fastapi: Not installed
2023-06-22 15:38:16,980:INFO:             uvicorn: Not installed
2023-06-22 15:38:16,980:INFO:              m2cgen: Not installed
2023-06-22 15:38:16,980:INFO:           evidently: Not installed
2023-06-22 15:38:16,980:INFO:               fugue: Not installed
2023-06-22 15:38:16,980:INFO:           streamlit: Not installed
2023-06-22 15:38:16,980:INFO:             prophet: 1.1.4
2023-06-22 15:38:16,980:INFO:None
2023-06-22 15:38:16,980:INFO:Set up data.
2023-06-22 15:38:16,989:INFO:Set up train/test split.
2023-06-22 15:38:17,057:INFO:Set up index.
2023-06-22 15:38:17,057:INFO:Set up folding strategy.
2023-06-22 15:38:17,057:INFO:Assigning column types.
2023-06-22 15:38:17,062:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 15:38:17,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,251:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,485:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,513:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,516:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 15:38:17,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,589:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,637:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:38:17,665:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,668:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 15:38:17,741:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,818:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:17,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:17,826:INFO:Preparing preprocessing pipeline...
2023-06-22 15:38:17,842:INFO:Set up label encoding.
2023-06-22 15:38:17,842:INFO:Set up simple imputation.
2023-06-22 15:38:17,846:INFO:Set up encoding of categorical features.
2023-06-22 15:38:17,847:INFO:Set up column name cleaning.
2023-06-22 15:38:30,140:INFO:PyCaret RegressionExperiment
2023-06-22 15:38:30,140:INFO:Logging name: reg-default-name
2023-06-22 15:38:30,141:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-22 15:38:30,141:INFO:version 3.0.2
2023-06-22 15:38:30,141:INFO:Initializing setup()
2023-06-22 15:38:30,141:INFO:self.USI: c18d
2023-06-22 15:38:30,141:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'transform_target_param', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'data', 'X_test', 'pipeline'}
2023-06-22 15:38:30,142:INFO:Checking environment
2023-06-22 15:38:30,143:INFO:python_version: 3.10.5
2023-06-22 15:38:30,143:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-22 15:38:30,143:INFO:machine: AMD64
2023-06-22 15:38:30,143:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 15:38:30,147:INFO:Memory: svmem(total=17130000384, available=8893149184, percent=48.1, used=8236851200, free=8893149184)
2023-06-22 15:38:30,147:INFO:Physical Core: 4
2023-06-22 15:38:30,147:INFO:Logical Core: 4
2023-06-22 15:38:30,147:INFO:Checking libraries
2023-06-22 15:38:30,148:INFO:System:
2023-06-22 15:38:30,148:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-22 15:38:30,148:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-22 15:38:30,148:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 15:38:30,148:INFO:PyCaret required dependencies:
2023-06-22 15:38:30,148:INFO:                 pip: 23.0.1
2023-06-22 15:38:30,148:INFO:          setuptools: 58.1.0
2023-06-22 15:38:30,148:INFO:             pycaret: 3.0.2
2023-06-22 15:38:30,148:INFO:             IPython: 8.9.0
2023-06-22 15:38:30,148:INFO:          ipywidgets: 8.0.6
2023-06-22 15:38:30,148:INFO:                tqdm: 4.65.0
2023-06-22 15:38:30,148:INFO:               numpy: 1.23.5
2023-06-22 15:38:30,149:INFO:              pandas: 1.5.3
2023-06-22 15:38:30,149:INFO:              jinja2: 3.1.2
2023-06-22 15:38:30,149:INFO:               scipy: 1.10.1
2023-06-22 15:38:30,149:INFO:              joblib: 1.2.0
2023-06-22 15:38:30,149:INFO:             sklearn: 1.2.2
2023-06-22 15:38:30,149:INFO:                pyod: 1.0.9
2023-06-22 15:38:30,149:INFO:            imblearn: 0.10.1
2023-06-22 15:38:30,149:INFO:   category_encoders: 2.6.1
2023-06-22 15:38:30,149:INFO:            lightgbm: 3.3.5
2023-06-22 15:38:30,149:INFO:               numba: 0.57.0
2023-06-22 15:38:30,149:INFO:            requests: 2.28.2
2023-06-22 15:38:30,149:INFO:          matplotlib: 3.7.1
2023-06-22 15:38:30,149:INFO:          scikitplot: 0.3.7
2023-06-22 15:38:30,149:INFO:         yellowbrick: 1.5
2023-06-22 15:38:30,150:INFO:              plotly: 5.15.0
2023-06-22 15:38:30,150:INFO:             kaleido: 0.2.1
2023-06-22 15:38:30,150:INFO:         statsmodels: 0.14.0
2023-06-22 15:38:30,150:INFO:              sktime: 0.17.0
2023-06-22 15:38:30,150:INFO:               tbats: 1.1.3
2023-06-22 15:38:30,150:INFO:            pmdarima: 2.0.3
2023-06-22 15:38:30,150:INFO:              psutil: 5.9.4
2023-06-22 15:38:30,150:INFO:PyCaret optional dependencies:
2023-06-22 15:38:30,150:INFO:                shap: Not installed
2023-06-22 15:38:30,150:INFO:           interpret: 0.4.2
2023-06-22 15:38:30,150:INFO:                umap: Not installed
2023-06-22 15:38:30,150:INFO:    pandas_profiling: Not installed
2023-06-22 15:38:30,150:INFO:  explainerdashboard: Not installed
2023-06-22 15:38:30,151:INFO:             autoviz: Not installed
2023-06-22 15:38:30,151:INFO:           fairlearn: Not installed
2023-06-22 15:38:30,151:INFO:             xgboost: 1.7.5
2023-06-22 15:38:30,151:INFO:            catboost: Not installed
2023-06-22 15:38:30,151:INFO:              kmodes: Not installed
2023-06-22 15:38:30,151:INFO:             mlxtend: Not installed
2023-06-22 15:38:30,151:INFO:       statsforecast: Not installed
2023-06-22 15:38:30,151:INFO:        tune_sklearn: Not installed
2023-06-22 15:38:30,151:INFO:                 ray: Not installed
2023-06-22 15:38:30,151:INFO:            hyperopt: 0.2.7
2023-06-22 15:38:30,151:INFO:              optuna: Not installed
2023-06-22 15:38:30,151:INFO:               skopt: Not installed
2023-06-22 15:38:30,151:INFO:              mlflow: Not installed
2023-06-22 15:38:30,151:INFO:              gradio: Not installed
2023-06-22 15:38:30,151:INFO:             fastapi: Not installed
2023-06-22 15:38:30,152:INFO:             uvicorn: Not installed
2023-06-22 15:38:30,152:INFO:              m2cgen: Not installed
2023-06-22 15:38:30,152:INFO:           evidently: Not installed
2023-06-22 15:38:30,152:INFO:               fugue: Not installed
2023-06-22 15:38:30,152:INFO:           streamlit: Not installed
2023-06-22 15:38:30,152:INFO:             prophet: 1.1.4
2023-06-22 15:38:30,152:INFO:None
2023-06-22 15:38:30,152:INFO:Set up data.
2023-06-22 15:38:30,158:INFO:Set up train/test split.
2023-06-22 15:38:30,162:INFO:Set up index.
2023-06-22 15:38:30,162:INFO:Set up folding strategy.
2023-06-22 15:38:30,162:INFO:Assigning column types.
2023-06-22 15:38:30,166:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 15:38:30,166:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,170:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,177:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,306:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,312:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,322:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,432:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,434:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-22 15:38:30,439:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,445:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,552:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,560:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,565:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,624:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,672:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,675:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-22 15:38:30,685:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,791:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,803:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:30,911:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:30,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:30,914:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-22 15:38:30,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,036:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,157:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,162:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 15:38:31,230:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,277:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,347:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-22 15:38:31,391:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,395:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-22 15:38:31,507:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,620:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:31,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:31,624:INFO:Preparing preprocessing pipeline...
2023-06-22 15:38:31,624:INFO:Set up simple imputation.
2023-06-22 15:38:31,626:INFO:Set up column name cleaning.
2023-06-22 15:38:31,677:INFO:Finished creating preprocessing pipeline.
2023-06-22 15:38:31,694:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 15:38:31,694:INFO:Creating final display dataframe.
2023-06-22 15:38:31,882:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        day5_label
2                   Target type        Regression
3           Original data shape         (1320, 8)
4        Transformed data shape         (1320, 8)
5   Transformed train set shape          (923, 8)
6    Transformed test set shape          (397, 8)
7              Numeric features                 7
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c18d
2023-06-22 15:38:32,105:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:32,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:32,245:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:38:32,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:38:32,248:INFO:setup() successfully completed in 2.11s...............
2023-06-22 15:38:32,248:INFO:Initializing create_model()
2023-06-22 15:38:32,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AD1070F3D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-22 15:38:32,249:INFO:Checking exceptions
2023-06-22 15:38:32,264:INFO:Importing libraries
2023-06-22 15:38:32,265:INFO:Copying training dataset
2023-06-22 15:38:32,270:INFO:Defining folds
2023-06-22 15:38:32,270:INFO:Declaring metric variables
2023-06-22 15:38:32,274:INFO:Importing untrained model
2023-06-22 15:38:32,278:INFO:Extreme Gradient Boosting Imported successfully
2023-06-22 15:38:32,286:INFO:Starting cross validation
2023-06-22 15:38:32,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 15:38:37,466:INFO:Calculating mean and std
2023-06-22 15:38:37,467:INFO:Creating metrics dataframe
2023-06-22 15:38:37,473:INFO:Finalizing model
2023-06-22 15:38:37,770:INFO:Uploading results into container
2023-06-22 15:38:37,772:INFO:Uploading model into container now
2023-06-22 15:38:37,784:INFO:_master_model_container: 1
2023-06-22 15:38:37,784:INFO:_display_container: 2
2023-06-22 15:38:37,785:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-06-22 15:38:37,785:INFO:create_model() successfully completed......................................
2023-06-22 15:38:37,906:INFO:Initializing tune_model()
2023-06-22 15:38:37,906:INFO:tune_model(estimator=xgboost, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AD1070F3D0>)
2023-06-22 15:38:37,906:INFO:Checking exceptions
2023-06-22 15:39:24,094:INFO:PyCaret ClassificationExperiment
2023-06-22 15:39:24,095:INFO:Logging name: clf-default-name
2023-06-22 15:39:24,095:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 15:39:24,095:INFO:version 3.0.2
2023-06-22 15:39:24,095:INFO:Initializing setup()
2023-06-22 15:39:24,095:INFO:self.USI: 669f
2023-06-22 15:39:24,095:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-22 15:39:24,095:INFO:Checking environment
2023-06-22 15:39:24,095:INFO:python_version: 3.10.5
2023-06-22 15:39:24,096:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-22 15:39:24,096:INFO:machine: AMD64
2023-06-22 15:39:24,096:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 15:39:24,100:INFO:Memory: svmem(total=17130000384, available=8344592384, percent=51.3, used=8785408000, free=8344592384)
2023-06-22 15:39:24,100:INFO:Physical Core: 4
2023-06-22 15:39:24,100:INFO:Logical Core: 4
2023-06-22 15:39:24,100:INFO:Checking libraries
2023-06-22 15:39:24,100:INFO:System:
2023-06-22 15:39:24,100:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-22 15:39:24,100:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-22 15:39:24,100:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 15:39:24,100:INFO:PyCaret required dependencies:
2023-06-22 15:39:24,101:INFO:                 pip: 23.0.1
2023-06-22 15:39:24,101:INFO:          setuptools: 58.1.0
2023-06-22 15:39:24,101:INFO:             pycaret: 3.0.2
2023-06-22 15:39:24,101:INFO:             IPython: 8.9.0
2023-06-22 15:39:24,101:INFO:          ipywidgets: 8.0.6
2023-06-22 15:39:24,101:INFO:                tqdm: 4.65.0
2023-06-22 15:39:24,101:INFO:               numpy: 1.23.5
2023-06-22 15:39:24,101:INFO:              pandas: 1.5.3
2023-06-22 15:39:24,101:INFO:              jinja2: 3.1.2
2023-06-22 15:39:24,101:INFO:               scipy: 1.10.1
2023-06-22 15:39:24,101:INFO:              joblib: 1.2.0
2023-06-22 15:39:24,101:INFO:             sklearn: 1.2.2
2023-06-22 15:39:24,101:INFO:                pyod: 1.0.9
2023-06-22 15:39:24,102:INFO:            imblearn: 0.10.1
2023-06-22 15:39:24,102:INFO:   category_encoders: 2.6.1
2023-06-22 15:39:24,102:INFO:            lightgbm: 3.3.5
2023-06-22 15:39:24,102:INFO:               numba: 0.57.0
2023-06-22 15:39:24,102:INFO:            requests: 2.28.2
2023-06-22 15:39:24,102:INFO:          matplotlib: 3.7.1
2023-06-22 15:39:24,102:INFO:          scikitplot: 0.3.7
2023-06-22 15:39:24,102:INFO:         yellowbrick: 1.5
2023-06-22 15:39:24,102:INFO:              plotly: 5.15.0
2023-06-22 15:39:24,102:INFO:             kaleido: 0.2.1
2023-06-22 15:39:24,102:INFO:         statsmodels: 0.14.0
2023-06-22 15:39:24,103:INFO:              sktime: 0.17.0
2023-06-22 15:39:24,103:INFO:               tbats: 1.1.3
2023-06-22 15:39:24,103:INFO:            pmdarima: 2.0.3
2023-06-22 15:39:24,103:INFO:              psutil: 5.9.4
2023-06-22 15:39:24,103:INFO:PyCaret optional dependencies:
2023-06-22 15:39:24,103:INFO:                shap: Not installed
2023-06-22 15:39:24,103:INFO:           interpret: 0.4.2
2023-06-22 15:39:24,103:INFO:                umap: Not installed
2023-06-22 15:39:24,103:INFO:    pandas_profiling: Not installed
2023-06-22 15:39:24,103:INFO:  explainerdashboard: Not installed
2023-06-22 15:39:24,103:INFO:             autoviz: Not installed
2023-06-22 15:39:24,103:INFO:           fairlearn: Not installed
2023-06-22 15:39:24,104:INFO:             xgboost: 1.7.5
2023-06-22 15:39:24,104:INFO:            catboost: Not installed
2023-06-22 15:39:24,104:INFO:              kmodes: Not installed
2023-06-22 15:39:24,104:INFO:             mlxtend: Not installed
2023-06-22 15:39:24,104:INFO:       statsforecast: Not installed
2023-06-22 15:39:24,104:INFO:        tune_sklearn: Not installed
2023-06-22 15:39:24,104:INFO:                 ray: Not installed
2023-06-22 15:39:24,104:INFO:            hyperopt: 0.2.7
2023-06-22 15:39:24,104:INFO:              optuna: Not installed
2023-06-22 15:39:24,104:INFO:               skopt: Not installed
2023-06-22 15:39:24,104:INFO:              mlflow: Not installed
2023-06-22 15:39:24,104:INFO:              gradio: Not installed
2023-06-22 15:39:24,105:INFO:             fastapi: Not installed
2023-06-22 15:39:24,105:INFO:             uvicorn: Not installed
2023-06-22 15:39:24,106:INFO:              m2cgen: Not installed
2023-06-22 15:39:24,109:INFO:           evidently: Not installed
2023-06-22 15:39:24,110:INFO:               fugue: Not installed
2023-06-22 15:39:24,110:INFO:           streamlit: Not installed
2023-06-22 15:39:24,110:INFO:             prophet: 1.1.4
2023-06-22 15:39:24,110:INFO:None
2023-06-22 15:39:24,110:INFO:Set up data.
2023-06-22 15:39:24,121:INFO:Set up train/test split.
2023-06-22 15:39:24,129:INFO:Set up index.
2023-06-22 15:39:24,129:INFO:Set up folding strategy.
2023-06-22 15:39:24,129:INFO:Assigning column types.
2023-06-22 15:39:24,134:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 15:39:24,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,215:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,269:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,302:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,306:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 15:39:24,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,381:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:39:24,459:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,461:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 15:39:24,535:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,616:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:39:24,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:39:24,621:INFO:Preparing preprocessing pipeline...
2023-06-22 15:39:24,622:INFO:Set up label encoding.
2023-06-22 15:39:24,622:INFO:Set up simple imputation.
2023-06-22 15:39:24,626:INFO:Set up encoding of categorical features.
2023-06-22 15:39:24,627:INFO:Set up column name cleaning.
2023-06-22 15:39:24,779:INFO:Finished creating preprocessing pipeline.
2023-06-22 15:39:24,787:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'Change', 'Code', 'MA_5',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI', 'STD'...
                 TransformerWrapper(exclude=None, include=['Name'],
                                    transformer=OneHotEncoder(cols=['Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 15:39:24,787:INFO:Creating final display dataframe.
2023-06-22 15:57:51,950:INFO:PyCaret ClassificationExperiment
2023-06-22 15:57:51,951:INFO:Logging name: clf-default-name
2023-06-22 15:57:51,951:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 15:57:51,951:INFO:version 3.0.2
2023-06-22 15:57:51,951:INFO:Initializing setup()
2023-06-22 15:57:51,951:INFO:self.USI: 7418
2023-06-22 15:57:51,951:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-22 15:57:51,951:INFO:Checking environment
2023-06-22 15:57:51,951:INFO:python_version: 3.10.5
2023-06-22 15:57:51,951:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-22 15:57:51,951:INFO:machine: AMD64
2023-06-22 15:57:51,951:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 15:57:51,956:INFO:Memory: svmem(total=17130000384, available=9050603520, percent=47.2, used=8079396864, free=9050603520)
2023-06-22 15:57:51,956:INFO:Physical Core: 4
2023-06-22 15:57:51,956:INFO:Logical Core: 4
2023-06-22 15:57:51,956:INFO:Checking libraries
2023-06-22 15:57:51,956:INFO:System:
2023-06-22 15:57:51,956:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-22 15:57:51,956:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-22 15:57:51,956:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 15:57:51,957:INFO:PyCaret required dependencies:
2023-06-22 15:57:51,957:INFO:                 pip: 23.0.1
2023-06-22 15:57:51,957:INFO:          setuptools: 58.1.0
2023-06-22 15:57:51,957:INFO:             pycaret: 3.0.2
2023-06-22 15:57:51,957:INFO:             IPython: 8.9.0
2023-06-22 15:57:51,957:INFO:          ipywidgets: 8.0.6
2023-06-22 15:57:51,957:INFO:                tqdm: 4.65.0
2023-06-22 15:57:51,957:INFO:               numpy: 1.23.5
2023-06-22 15:57:51,957:INFO:              pandas: 1.5.3
2023-06-22 15:57:51,957:INFO:              jinja2: 3.1.2
2023-06-22 15:57:51,957:INFO:               scipy: 1.10.1
2023-06-22 15:57:51,957:INFO:              joblib: 1.2.0
2023-06-22 15:57:51,957:INFO:             sklearn: 1.2.2
2023-06-22 15:57:51,958:INFO:                pyod: 1.0.9
2023-06-22 15:57:51,958:INFO:            imblearn: 0.10.1
2023-06-22 15:57:51,958:INFO:   category_encoders: 2.6.1
2023-06-22 15:57:51,958:INFO:            lightgbm: 3.3.5
2023-06-22 15:57:51,958:INFO:               numba: 0.57.0
2023-06-22 15:57:51,958:INFO:            requests: 2.28.2
2023-06-22 15:57:51,958:INFO:          matplotlib: 3.7.1
2023-06-22 15:57:51,958:INFO:          scikitplot: 0.3.7
2023-06-22 15:57:51,958:INFO:         yellowbrick: 1.5
2023-06-22 15:57:51,958:INFO:              plotly: 5.15.0
2023-06-22 15:57:51,958:INFO:             kaleido: 0.2.1
2023-06-22 15:57:51,958:INFO:         statsmodels: 0.14.0
2023-06-22 15:57:51,958:INFO:              sktime: 0.17.0
2023-06-22 15:57:51,958:INFO:               tbats: 1.1.3
2023-06-22 15:57:51,958:INFO:            pmdarima: 2.0.3
2023-06-22 15:57:51,958:INFO:              psutil: 5.9.4
2023-06-22 15:57:51,958:INFO:PyCaret optional dependencies:
2023-06-22 15:57:51,959:INFO:                shap: Not installed
2023-06-22 15:57:51,959:INFO:           interpret: 0.4.2
2023-06-22 15:57:51,959:INFO:                umap: Not installed
2023-06-22 15:57:51,959:INFO:    pandas_profiling: Not installed
2023-06-22 15:57:51,959:INFO:  explainerdashboard: Not installed
2023-06-22 15:57:51,959:INFO:             autoviz: Not installed
2023-06-22 15:57:51,959:INFO:           fairlearn: Not installed
2023-06-22 15:57:51,959:INFO:             xgboost: 1.7.5
2023-06-22 15:57:51,959:INFO:            catboost: Not installed
2023-06-22 15:57:51,959:INFO:              kmodes: Not installed
2023-06-22 15:57:51,959:INFO:             mlxtend: Not installed
2023-06-22 15:57:51,959:INFO:       statsforecast: Not installed
2023-06-22 15:57:51,959:INFO:        tune_sklearn: Not installed
2023-06-22 15:57:51,960:INFO:                 ray: Not installed
2023-06-22 15:57:51,960:INFO:            hyperopt: 0.2.7
2023-06-22 15:57:51,960:INFO:              optuna: Not installed
2023-06-22 15:57:51,960:INFO:               skopt: Not installed
2023-06-22 15:57:51,960:INFO:              mlflow: Not installed
2023-06-22 15:57:51,960:INFO:              gradio: Not installed
2023-06-22 15:57:51,960:INFO:             fastapi: Not installed
2023-06-22 15:57:51,960:INFO:             uvicorn: Not installed
2023-06-22 15:57:51,960:INFO:              m2cgen: Not installed
2023-06-22 15:57:51,960:INFO:           evidently: Not installed
2023-06-22 15:57:51,960:INFO:               fugue: Not installed
2023-06-22 15:57:51,960:INFO:           streamlit: Not installed
2023-06-22 15:57:51,960:INFO:             prophet: 1.1.4
2023-06-22 15:57:51,960:INFO:None
2023-06-22 15:57:51,960:INFO:Set up data.
2023-06-22 15:57:51,969:INFO:Set up train/test split.
2023-06-22 15:57:51,976:INFO:Set up index.
2023-06-22 15:57:51,976:INFO:Set up folding strategy.
2023-06-22 15:57:51,977:INFO:Assigning column types.
2023-06-22 15:57:51,981:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 15:57:52,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,060:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,145:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,147:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 15:57:52,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,227:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,278:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 15:57:52,308:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,313:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 15:57:52,390:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,469:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 15:57:52,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 15:57:52,475:INFO:Preparing preprocessing pipeline...
2023-06-22 15:57:52,476:INFO:Set up label encoding.
2023-06-22 15:57:52,476:INFO:Set up simple imputation.
2023-06-22 15:57:52,478:INFO:Set up encoding of categorical features.
2023-06-22 15:57:52,479:INFO:Set up column name cleaning.
2023-06-22 15:57:52,613:INFO:Finished creating preprocessing pipeline.
2023-06-22 15:57:52,620:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'Change', 'Code', 'MA_5',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI', 'STD'...
                 TransformerWrapper(exclude=None, include=['Name'],
                                    transformer=OneHotEncoder(cols=['Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 15:57:52,620:INFO:Creating final display dataframe.
2023-06-22 16:45:32,232:INFO:PyCaret ClassificationExperiment
2023-06-22 16:45:32,232:INFO:Logging name: clf-default-name
2023-06-22 16:45:32,232:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 16:45:32,232:INFO:version 3.0.2
2023-06-22 16:45:32,232:INFO:Initializing setup()
2023-06-22 16:45:32,232:INFO:self.USI: afb6
2023-06-22 16:45:32,232:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-22 16:45:32,232:INFO:Checking environment
2023-06-22 16:45:32,232:INFO:python_version: 3.10.5
2023-06-22 16:45:32,232:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-22 16:45:32,232:INFO:machine: AMD64
2023-06-22 16:45:32,232:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 16:45:32,236:INFO:Memory: svmem(total=17130000384, available=9019281408, percent=47.3, used=8110718976, free=9019281408)
2023-06-22 16:45:32,236:INFO:Physical Core: 4
2023-06-22 16:45:32,236:INFO:Logical Core: 4
2023-06-22 16:45:32,236:INFO:Checking libraries
2023-06-22 16:45:32,236:INFO:System:
2023-06-22 16:45:32,237:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-22 16:45:32,237:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-22 16:45:32,237:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 16:45:32,237:INFO:PyCaret required dependencies:
2023-06-22 16:45:32,237:INFO:                 pip: 23.0.1
2023-06-22 16:45:32,237:INFO:          setuptools: 58.1.0
2023-06-22 16:45:32,237:INFO:             pycaret: 3.0.2
2023-06-22 16:45:32,237:INFO:             IPython: 8.9.0
2023-06-22 16:45:32,237:INFO:          ipywidgets: 8.0.6
2023-06-22 16:45:32,237:INFO:                tqdm: 4.65.0
2023-06-22 16:45:32,237:INFO:               numpy: 1.23.5
2023-06-22 16:45:32,237:INFO:              pandas: 1.5.3
2023-06-22 16:45:32,237:INFO:              jinja2: 3.1.2
2023-06-22 16:45:32,237:INFO:               scipy: 1.10.1
2023-06-22 16:45:32,238:INFO:              joblib: 1.2.0
2023-06-22 16:45:32,238:INFO:             sklearn: 1.2.2
2023-06-22 16:45:32,238:INFO:                pyod: 1.0.9
2023-06-22 16:45:32,238:INFO:            imblearn: 0.10.1
2023-06-22 16:45:32,238:INFO:   category_encoders: 2.6.1
2023-06-22 16:45:32,238:INFO:            lightgbm: 3.3.5
2023-06-22 16:45:32,238:INFO:               numba: 0.57.0
2023-06-22 16:45:32,238:INFO:            requests: 2.28.2
2023-06-22 16:45:32,238:INFO:          matplotlib: 3.7.1
2023-06-22 16:45:32,238:INFO:          scikitplot: 0.3.7
2023-06-22 16:45:32,238:INFO:         yellowbrick: 1.5
2023-06-22 16:45:32,238:INFO:              plotly: 5.15.0
2023-06-22 16:45:32,238:INFO:             kaleido: 0.2.1
2023-06-22 16:45:32,238:INFO:         statsmodels: 0.14.0
2023-06-22 16:45:32,238:INFO:              sktime: 0.17.0
2023-06-22 16:45:32,238:INFO:               tbats: 1.1.3
2023-06-22 16:45:32,238:INFO:            pmdarima: 2.0.3
2023-06-22 16:45:32,238:INFO:              psutil: 5.9.4
2023-06-22 16:45:32,238:INFO:PyCaret optional dependencies:
2023-06-22 16:45:32,239:INFO:                shap: Not installed
2023-06-22 16:45:32,239:INFO:           interpret: 0.4.2
2023-06-22 16:45:32,239:INFO:                umap: Not installed
2023-06-22 16:45:32,239:INFO:    pandas_profiling: Not installed
2023-06-22 16:45:32,239:INFO:  explainerdashboard: Not installed
2023-06-22 16:45:32,239:INFO:             autoviz: Not installed
2023-06-22 16:45:32,239:INFO:           fairlearn: Not installed
2023-06-22 16:45:32,239:INFO:             xgboost: 1.7.5
2023-06-22 16:45:32,239:INFO:            catboost: Not installed
2023-06-22 16:45:32,239:INFO:              kmodes: Not installed
2023-06-22 16:45:32,239:INFO:             mlxtend: Not installed
2023-06-22 16:45:32,239:INFO:       statsforecast: Not installed
2023-06-22 16:45:32,239:INFO:        tune_sklearn: Not installed
2023-06-22 16:45:32,239:INFO:                 ray: Not installed
2023-06-22 16:45:32,239:INFO:            hyperopt: 0.2.7
2023-06-22 16:45:32,239:INFO:              optuna: Not installed
2023-06-22 16:45:32,239:INFO:               skopt: Not installed
2023-06-22 16:45:32,240:INFO:              mlflow: Not installed
2023-06-22 16:45:32,240:INFO:              gradio: Not installed
2023-06-22 16:45:32,240:INFO:             fastapi: Not installed
2023-06-22 16:45:32,240:INFO:             uvicorn: Not installed
2023-06-22 16:45:32,240:INFO:              m2cgen: Not installed
2023-06-22 16:45:32,240:INFO:           evidently: Not installed
2023-06-22 16:45:32,240:INFO:               fugue: Not installed
2023-06-22 16:45:32,240:INFO:           streamlit: Not installed
2023-06-22 16:45:32,240:INFO:             prophet: 1.1.4
2023-06-22 16:45:32,240:INFO:None
2023-06-22 16:45:32,240:INFO:Set up data.
2023-06-22 16:45:32,249:INFO:Set up train/test split.
2023-06-22 16:45:32,253:INFO:Set up index.
2023-06-22 16:45:32,253:INFO:Set up folding strategy.
2023-06-22 16:45:32,253:INFO:Assigning column types.
2023-06-22 16:45:32,257:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 16:45:32,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,383:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,465:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,468:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 16:45:32,514:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,543:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 16:45:32,624:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,629:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 16:45:32,736:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,856:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:32,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:32,862:INFO:Preparing preprocessing pipeline...
2023-06-22 16:45:32,865:INFO:Set up label encoding.
2023-06-22 16:45:32,866:INFO:Set up simple imputation.
2023-06-22 16:45:32,867:INFO:Set up column name cleaning.
2023-06-22 16:45:32,945:INFO:Finished creating preprocessing pipeline.
2023-06-22 16:45:32,951:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 16:45:32,952:INFO:Creating final display dataframe.
2023-06-22 16:45:33,122:INFO:Setup _display_container:                     Description              Value
0                    Session id                834
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (920, 8)
5        Transformed data shape           (920, 8)
6   Transformed train set shape           (644, 8)
7    Transformed test set shape           (276, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               afb6
2023-06-22 16:45:33,232:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:33,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:33,315:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-22 16:45:33,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 16:45:33,320:INFO:setup() successfully completed in 1.1s...............
2023-06-22 16:45:42,383:INFO:Initializing compare_models()
2023-06-22 16:45:42,383:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-22 16:45:42,384:INFO:Checking exceptions
2023-06-22 16:45:42,426:INFO:Preparing display monitor
2023-06-22 16:45:42,457:INFO:Initializing Logistic Regression
2023-06-22 16:45:42,457:INFO:Total runtime is 0.0 minutes
2023-06-22 16:45:42,460:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:42,461:INFO:Initializing create_model()
2023-06-22 16:45:42,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:42,461:INFO:Checking exceptions
2023-06-22 16:45:42,461:INFO:Importing libraries
2023-06-22 16:45:42,461:INFO:Copying training dataset
2023-06-22 16:45:42,486:INFO:Defining folds
2023-06-22 16:45:42,486:INFO:Declaring metric variables
2023-06-22 16:45:42,492:INFO:Importing untrained model
2023-06-22 16:45:42,497:INFO:Logistic Regression Imported successfully
2023-06-22 16:45:42,504:INFO:Starting cross validation
2023-06-22 16:45:42,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:48,214:INFO:Calculating mean and std
2023-06-22 16:45:48,216:INFO:Creating metrics dataframe
2023-06-22 16:45:48,245:INFO:Uploading results into container
2023-06-22 16:45:48,247:INFO:Uploading model into container now
2023-06-22 16:45:48,247:INFO:_master_model_container: 1
2023-06-22 16:45:48,247:INFO:_display_container: 2
2023-06-22 16:45:48,248:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=834, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-22 16:45:48,248:INFO:create_model() successfully completed......................................
2023-06-22 16:45:48,663:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:48,663:INFO:Creating metrics dataframe
2023-06-22 16:45:48,673:INFO:Initializing K Neighbors Classifier
2023-06-22 16:45:48,674:INFO:Total runtime is 0.10362642208735148 minutes
2023-06-22 16:45:48,678:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:48,680:INFO:Initializing create_model()
2023-06-22 16:45:48,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:48,681:INFO:Checking exceptions
2023-06-22 16:45:48,681:INFO:Importing libraries
2023-06-22 16:45:48,681:INFO:Copying training dataset
2023-06-22 16:45:48,689:INFO:Defining folds
2023-06-22 16:45:48,689:INFO:Declaring metric variables
2023-06-22 16:45:48,698:INFO:Importing untrained model
2023-06-22 16:45:48,704:INFO:K Neighbors Classifier Imported successfully
2023-06-22 16:45:48,728:INFO:Starting cross validation
2023-06-22 16:45:48,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:49,570:INFO:Calculating mean and std
2023-06-22 16:45:49,571:INFO:Creating metrics dataframe
2023-06-22 16:45:49,599:INFO:Uploading results into container
2023-06-22 16:45:49,599:INFO:Uploading model into container now
2023-06-22 16:45:49,600:INFO:_master_model_container: 2
2023-06-22 16:45:49,600:INFO:_display_container: 2
2023-06-22 16:45:49,600:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-22 16:45:49,600:INFO:create_model() successfully completed......................................
2023-06-22 16:45:49,784:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:49,784:INFO:Creating metrics dataframe
2023-06-22 16:45:49,795:INFO:Initializing Naive Bayes
2023-06-22 16:45:49,798:INFO:Total runtime is 0.12235363324483237 minutes
2023-06-22 16:45:49,803:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:49,804:INFO:Initializing create_model()
2023-06-22 16:45:49,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:49,804:INFO:Checking exceptions
2023-06-22 16:45:49,804:INFO:Importing libraries
2023-06-22 16:45:49,805:INFO:Copying training dataset
2023-06-22 16:45:49,809:INFO:Defining folds
2023-06-22 16:45:49,810:INFO:Declaring metric variables
2023-06-22 16:45:49,817:INFO:Importing untrained model
2023-06-22 16:45:49,824:INFO:Naive Bayes Imported successfully
2023-06-22 16:45:49,853:INFO:Starting cross validation
2023-06-22 16:45:49,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:50,502:INFO:Calculating mean and std
2023-06-22 16:45:50,503:INFO:Creating metrics dataframe
2023-06-22 16:45:50,525:INFO:Uploading results into container
2023-06-22 16:45:50,525:INFO:Uploading model into container now
2023-06-22 16:45:50,526:INFO:_master_model_container: 3
2023-06-22 16:45:50,526:INFO:_display_container: 2
2023-06-22 16:45:50,526:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-22 16:45:50,526:INFO:create_model() successfully completed......................................
2023-06-22 16:45:50,660:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:50,660:INFO:Creating metrics dataframe
2023-06-22 16:45:50,672:INFO:Initializing Decision Tree Classifier
2023-06-22 16:45:50,672:INFO:Total runtime is 0.1369291106859843 minutes
2023-06-22 16:45:50,675:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:50,676:INFO:Initializing create_model()
2023-06-22 16:45:50,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:50,676:INFO:Checking exceptions
2023-06-22 16:45:50,676:INFO:Importing libraries
2023-06-22 16:45:50,676:INFO:Copying training dataset
2023-06-22 16:45:50,683:INFO:Defining folds
2023-06-22 16:45:50,691:INFO:Declaring metric variables
2023-06-22 16:45:50,716:INFO:Importing untrained model
2023-06-22 16:45:50,724:INFO:Decision Tree Classifier Imported successfully
2023-06-22 16:45:50,732:INFO:Starting cross validation
2023-06-22 16:45:50,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:51,560:INFO:Calculating mean and std
2023-06-22 16:45:51,563:INFO:Creating metrics dataframe
2023-06-22 16:45:51,588:INFO:Uploading results into container
2023-06-22 16:45:51,589:INFO:Uploading model into container now
2023-06-22 16:45:51,589:INFO:_master_model_container: 4
2023-06-22 16:45:51,589:INFO:_display_container: 2
2023-06-22 16:45:51,590:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=834, splitter='best')
2023-06-22 16:45:51,590:INFO:create_model() successfully completed......................................
2023-06-22 16:45:51,756:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:51,756:INFO:Creating metrics dataframe
2023-06-22 16:45:51,774:INFO:Initializing SVM - Linear Kernel
2023-06-22 16:45:51,775:INFO:Total runtime is 0.15531359910964965 minutes
2023-06-22 16:45:51,780:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:51,781:INFO:Initializing create_model()
2023-06-22 16:45:51,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:51,781:INFO:Checking exceptions
2023-06-22 16:45:51,781:INFO:Importing libraries
2023-06-22 16:45:51,781:INFO:Copying training dataset
2023-06-22 16:45:51,785:INFO:Defining folds
2023-06-22 16:45:51,786:INFO:Declaring metric variables
2023-06-22 16:45:51,789:INFO:Importing untrained model
2023-06-22 16:45:51,793:INFO:SVM - Linear Kernel Imported successfully
2023-06-22 16:45:51,803:INFO:Starting cross validation
2023-06-22 16:45:51,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:52,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,028:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,047:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,265:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,276:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,326:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,423:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,451:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-22 16:45:52,458:INFO:Calculating mean and std
2023-06-22 16:45:52,459:INFO:Creating metrics dataframe
2023-06-22 16:45:52,487:INFO:Uploading results into container
2023-06-22 16:45:52,487:INFO:Uploading model into container now
2023-06-22 16:45:52,488:INFO:_master_model_container: 5
2023-06-22 16:45:52,488:INFO:_display_container: 2
2023-06-22 16:45:52,489:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=834, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-22 16:45:52,489:INFO:create_model() successfully completed......................................
2023-06-22 16:45:52,649:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:52,649:INFO:Creating metrics dataframe
2023-06-22 16:45:52,658:INFO:Initializing Ridge Classifier
2023-06-22 16:45:52,658:INFO:Total runtime is 0.17003050645192463 minutes
2023-06-22 16:45:52,664:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:52,665:INFO:Initializing create_model()
2023-06-22 16:45:52,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:52,665:INFO:Checking exceptions
2023-06-22 16:45:52,665:INFO:Importing libraries
2023-06-22 16:45:52,665:INFO:Copying training dataset
2023-06-22 16:45:52,669:INFO:Defining folds
2023-06-22 16:45:52,669:INFO:Declaring metric variables
2023-06-22 16:45:52,674:INFO:Importing untrained model
2023-06-22 16:45:52,677:INFO:Ridge Classifier Imported successfully
2023-06-22 16:45:52,686:INFO:Starting cross validation
2023-06-22 16:45:52,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:52,932:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:52,956:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:52,959:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:52,959:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,115:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,155:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,161:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,176:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,255:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,310:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-22 16:45:53,318:INFO:Calculating mean and std
2023-06-22 16:45:53,319:INFO:Creating metrics dataframe
2023-06-22 16:45:53,350:INFO:Uploading results into container
2023-06-22 16:45:53,351:INFO:Uploading model into container now
2023-06-22 16:45:53,351:INFO:_master_model_container: 6
2023-06-22 16:45:53,351:INFO:_display_container: 2
2023-06-22 16:45:53,351:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=834, solver='auto',
                tol=0.0001)
2023-06-22 16:45:53,352:INFO:create_model() successfully completed......................................
2023-06-22 16:45:53,490:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:53,491:INFO:Creating metrics dataframe
2023-06-22 16:45:53,503:INFO:Initializing Random Forest Classifier
2023-06-22 16:45:53,504:INFO:Total runtime is 0.18411836226781209 minutes
2023-06-22 16:45:53,506:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:53,507:INFO:Initializing create_model()
2023-06-22 16:45:53,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:53,507:INFO:Checking exceptions
2023-06-22 16:45:53,507:INFO:Importing libraries
2023-06-22 16:45:53,507:INFO:Copying training dataset
2023-06-22 16:45:53,514:INFO:Defining folds
2023-06-22 16:45:53,514:INFO:Declaring metric variables
2023-06-22 16:45:53,519:INFO:Importing untrained model
2023-06-22 16:45:53,523:INFO:Random Forest Classifier Imported successfully
2023-06-22 16:45:53,533:INFO:Starting cross validation
2023-06-22 16:45:53,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:55,847:INFO:Calculating mean and std
2023-06-22 16:45:55,848:INFO:Creating metrics dataframe
2023-06-22 16:45:55,886:INFO:Uploading results into container
2023-06-22 16:45:55,886:INFO:Uploading model into container now
2023-06-22 16:45:55,887:INFO:_master_model_container: 7
2023-06-22 16:45:55,887:INFO:_display_container: 2
2023-06-22 16:45:55,887:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=834, verbose=0, warm_start=False)
2023-06-22 16:45:55,887:INFO:create_model() successfully completed......................................
2023-06-22 16:45:56,011:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:56,011:INFO:Creating metrics dataframe
2023-06-22 16:45:56,023:INFO:Initializing Quadratic Discriminant Analysis
2023-06-22 16:45:56,023:INFO:Total runtime is 0.22610047658284504 minutes
2023-06-22 16:45:56,027:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:56,028:INFO:Initializing create_model()
2023-06-22 16:45:56,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:56,028:INFO:Checking exceptions
2023-06-22 16:45:56,029:INFO:Importing libraries
2023-06-22 16:45:56,029:INFO:Copying training dataset
2023-06-22 16:45:56,034:INFO:Defining folds
2023-06-22 16:45:56,034:INFO:Declaring metric variables
2023-06-22 16:45:56,038:INFO:Importing untrained model
2023-06-22 16:45:56,042:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-22 16:45:56,051:INFO:Starting cross validation
2023-06-22 16:45:56,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:56,618:INFO:Calculating mean and std
2023-06-22 16:45:56,620:INFO:Creating metrics dataframe
2023-06-22 16:45:56,656:INFO:Uploading results into container
2023-06-22 16:45:56,656:INFO:Uploading model into container now
2023-06-22 16:45:56,657:INFO:_master_model_container: 8
2023-06-22 16:45:56,657:INFO:_display_container: 2
2023-06-22 16:45:56,657:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-22 16:45:56,657:INFO:create_model() successfully completed......................................
2023-06-22 16:45:56,782:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:56,782:INFO:Creating metrics dataframe
2023-06-22 16:45:56,793:INFO:Initializing Ada Boost Classifier
2023-06-22 16:45:56,793:INFO:Total runtime is 0.23893283208211263 minutes
2023-06-22 16:45:56,797:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:56,798:INFO:Initializing create_model()
2023-06-22 16:45:56,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:56,798:INFO:Checking exceptions
2023-06-22 16:45:56,798:INFO:Importing libraries
2023-06-22 16:45:56,798:INFO:Copying training dataset
2023-06-22 16:45:56,803:INFO:Defining folds
2023-06-22 16:45:56,803:INFO:Declaring metric variables
2023-06-22 16:45:56,807:INFO:Importing untrained model
2023-06-22 16:45:56,814:INFO:Ada Boost Classifier Imported successfully
2023-06-22 16:45:56,821:INFO:Starting cross validation
2023-06-22 16:45:56,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:45:58,258:INFO:Calculating mean and std
2023-06-22 16:45:58,259:INFO:Creating metrics dataframe
2023-06-22 16:45:58,308:INFO:Uploading results into container
2023-06-22 16:45:58,309:INFO:Uploading model into container now
2023-06-22 16:45:58,309:INFO:_master_model_container: 9
2023-06-22 16:45:58,310:INFO:_display_container: 2
2023-06-22 16:45:58,310:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=834)
2023-06-22 16:45:58,310:INFO:create_model() successfully completed......................................
2023-06-22 16:45:58,431:INFO:SubProcess create_model() end ==================================
2023-06-22 16:45:58,432:INFO:Creating metrics dataframe
2023-06-22 16:45:58,443:INFO:Initializing Gradient Boosting Classifier
2023-06-22 16:45:58,443:INFO:Total runtime is 0.26644498109817505 minutes
2023-06-22 16:45:58,448:INFO:SubProcess create_model() called ==================================
2023-06-22 16:45:58,448:INFO:Initializing create_model()
2023-06-22 16:45:58,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:45:58,448:INFO:Checking exceptions
2023-06-22 16:45:58,448:INFO:Importing libraries
2023-06-22 16:45:58,448:INFO:Copying training dataset
2023-06-22 16:45:58,452:INFO:Defining folds
2023-06-22 16:45:58,453:INFO:Declaring metric variables
2023-06-22 16:45:58,456:INFO:Importing untrained model
2023-06-22 16:45:58,462:INFO:Gradient Boosting Classifier Imported successfully
2023-06-22 16:45:58,488:INFO:Starting cross validation
2023-06-22 16:45:58,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:02,887:INFO:Calculating mean and std
2023-06-22 16:46:02,888:INFO:Creating metrics dataframe
2023-06-22 16:46:02,953:INFO:Uploading results into container
2023-06-22 16:46:02,953:INFO:Uploading model into container now
2023-06-22 16:46:02,954:INFO:_master_model_container: 10
2023-06-22 16:46:02,954:INFO:_display_container: 2
2023-06-22 16:46:02,954:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=834, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-22 16:46:02,954:INFO:create_model() successfully completed......................................
2023-06-22 16:46:03,080:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:03,081:INFO:Creating metrics dataframe
2023-06-22 16:46:03,092:INFO:Initializing Linear Discriminant Analysis
2023-06-22 16:46:03,092:INFO:Total runtime is 0.3439229528109233 minutes
2023-06-22 16:46:03,097:INFO:SubProcess create_model() called ==================================
2023-06-22 16:46:03,098:INFO:Initializing create_model()
2023-06-22 16:46:03,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:03,098:INFO:Checking exceptions
2023-06-22 16:46:03,098:INFO:Importing libraries
2023-06-22 16:46:03,099:INFO:Copying training dataset
2023-06-22 16:46:03,103:INFO:Defining folds
2023-06-22 16:46:03,103:INFO:Declaring metric variables
2023-06-22 16:46:03,107:INFO:Importing untrained model
2023-06-22 16:46:03,113:INFO:Linear Discriminant Analysis Imported successfully
2023-06-22 16:46:03,121:INFO:Starting cross validation
2023-06-22 16:46:03,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:03,902:INFO:Calculating mean and std
2023-06-22 16:46:03,903:INFO:Creating metrics dataframe
2023-06-22 16:46:03,967:INFO:Uploading results into container
2023-06-22 16:46:03,968:INFO:Uploading model into container now
2023-06-22 16:46:03,968:INFO:_master_model_container: 11
2023-06-22 16:46:03,968:INFO:_display_container: 2
2023-06-22 16:46:03,968:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-22 16:46:03,969:INFO:create_model() successfully completed......................................
2023-06-22 16:46:04,103:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:04,103:INFO:Creating metrics dataframe
2023-06-22 16:46:04,117:INFO:Initializing Extra Trees Classifier
2023-06-22 16:46:04,117:INFO:Total runtime is 0.3610028902689616 minutes
2023-06-22 16:46:04,120:INFO:SubProcess create_model() called ==================================
2023-06-22 16:46:04,121:INFO:Initializing create_model()
2023-06-22 16:46:04,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:04,121:INFO:Checking exceptions
2023-06-22 16:46:04,121:INFO:Importing libraries
2023-06-22 16:46:04,121:INFO:Copying training dataset
2023-06-22 16:46:04,126:INFO:Defining folds
2023-06-22 16:46:04,126:INFO:Declaring metric variables
2023-06-22 16:46:04,132:INFO:Importing untrained model
2023-06-22 16:46:04,137:INFO:Extra Trees Classifier Imported successfully
2023-06-22 16:46:04,146:INFO:Starting cross validation
2023-06-22 16:46:04,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:06,491:INFO:Calculating mean and std
2023-06-22 16:46:06,492:INFO:Creating metrics dataframe
2023-06-22 16:46:06,566:INFO:Uploading results into container
2023-06-22 16:46:06,567:INFO:Uploading model into container now
2023-06-22 16:46:06,568:INFO:_master_model_container: 12
2023-06-22 16:46:06,568:INFO:_display_container: 2
2023-06-22 16:46:06,568:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=834, verbose=0, warm_start=False)
2023-06-22 16:46:06,568:INFO:create_model() successfully completed......................................
2023-06-22 16:46:06,697:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:06,697:INFO:Creating metrics dataframe
2023-06-22 16:46:06,709:INFO:Initializing Extreme Gradient Boosting
2023-06-22 16:46:06,709:INFO:Total runtime is 0.40421173969904584 minutes
2023-06-22 16:46:06,713:INFO:SubProcess create_model() called ==================================
2023-06-22 16:46:06,714:INFO:Initializing create_model()
2023-06-22 16:46:06,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:06,714:INFO:Checking exceptions
2023-06-22 16:46:06,714:INFO:Importing libraries
2023-06-22 16:46:06,714:INFO:Copying training dataset
2023-06-22 16:46:06,718:INFO:Defining folds
2023-06-22 16:46:06,719:INFO:Declaring metric variables
2023-06-22 16:46:06,722:INFO:Importing untrained model
2023-06-22 16:46:06,726:INFO:Extreme Gradient Boosting Imported successfully
2023-06-22 16:46:06,736:INFO:Starting cross validation
2023-06-22 16:46:06,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:08,687:INFO:Calculating mean and std
2023-06-22 16:46:08,688:INFO:Creating metrics dataframe
2023-06-22 16:46:08,774:INFO:Uploading results into container
2023-06-22 16:46:08,775:INFO:Uploading model into container now
2023-06-22 16:46:08,775:INFO:_master_model_container: 13
2023-06-22 16:46:08,775:INFO:_display_container: 2
2023-06-22 16:46:08,776:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-22 16:46:08,777:INFO:create_model() successfully completed......................................
2023-06-22 16:46:08,905:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:08,905:INFO:Creating metrics dataframe
2023-06-22 16:46:08,919:INFO:Initializing Light Gradient Boosting Machine
2023-06-22 16:46:08,919:INFO:Total runtime is 0.4410404006640117 minutes
2023-06-22 16:46:08,922:INFO:SubProcess create_model() called ==================================
2023-06-22 16:46:08,923:INFO:Initializing create_model()
2023-06-22 16:46:08,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:08,923:INFO:Checking exceptions
2023-06-22 16:46:08,923:INFO:Importing libraries
2023-06-22 16:46:08,923:INFO:Copying training dataset
2023-06-22 16:46:08,929:INFO:Defining folds
2023-06-22 16:46:08,930:INFO:Declaring metric variables
2023-06-22 16:46:08,933:INFO:Importing untrained model
2023-06-22 16:46:08,938:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-22 16:46:08,946:INFO:Starting cross validation
2023-06-22 16:46:08,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:11,392:INFO:Calculating mean and std
2023-06-22 16:46:11,393:INFO:Creating metrics dataframe
2023-06-22 16:46:11,484:INFO:Uploading results into container
2023-06-22 16:46:11,485:INFO:Uploading model into container now
2023-06-22 16:46:11,485:INFO:_master_model_container: 14
2023-06-22 16:46:11,485:INFO:_display_container: 2
2023-06-22 16:46:11,486:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=834, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-22 16:46:11,486:INFO:create_model() successfully completed......................................
2023-06-22 16:46:11,607:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:11,607:INFO:Creating metrics dataframe
2023-06-22 16:46:11,621:INFO:Initializing Dummy Classifier
2023-06-22 16:46:11,621:INFO:Total runtime is 0.4860702474912008 minutes
2023-06-22 16:46:11,624:INFO:SubProcess create_model() called ==================================
2023-06-22 16:46:11,625:INFO:Initializing create_model()
2023-06-22 16:46:11,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD21705A20>, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:11,625:INFO:Checking exceptions
2023-06-22 16:46:11,625:INFO:Importing libraries
2023-06-22 16:46:11,625:INFO:Copying training dataset
2023-06-22 16:46:11,631:INFO:Defining folds
2023-06-22 16:46:11,631:INFO:Declaring metric variables
2023-06-22 16:46:11,635:INFO:Importing untrained model
2023-06-22 16:46:11,640:INFO:Dummy Classifier Imported successfully
2023-06-22 16:46:11,650:INFO:Starting cross validation
2023-06-22 16:46:11,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 16:46:11,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:11,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:11,963:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:11,963:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,214:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,247:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,471:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-22 16:46:12,855:INFO:Calculating mean and std
2023-06-22 16:46:12,856:INFO:Creating metrics dataframe
2023-06-22 16:46:12,971:INFO:Uploading results into container
2023-06-22 16:46:12,972:INFO:Uploading model into container now
2023-06-22 16:46:12,972:INFO:_master_model_container: 15
2023-06-22 16:46:12,973:INFO:_display_container: 2
2023-06-22 16:46:12,973:INFO:DummyClassifier(constant=None, random_state=834, strategy='prior')
2023-06-22 16:46:12,973:INFO:create_model() successfully completed......................................
2023-06-22 16:46:13,101:INFO:SubProcess create_model() end ==================================
2023-06-22 16:46:13,101:INFO:Creating metrics dataframe
2023-06-22 16:46:13,127:INFO:Initializing create_model()
2023-06-22 16:46:13,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-22 16:46:13,129:INFO:Checking exceptions
2023-06-22 16:46:13,131:INFO:Importing libraries
2023-06-22 16:46:13,132:INFO:Copying training dataset
2023-06-22 16:46:13,136:INFO:Defining folds
2023-06-22 16:46:13,137:INFO:Declaring metric variables
2023-06-22 16:46:13,137:INFO:Importing untrained model
2023-06-22 16:46:13,137:INFO:Declaring custom model
2023-06-22 16:46:13,137:INFO:Linear Discriminant Analysis Imported successfully
2023-06-22 16:46:13,138:INFO:Cross validation set to False
2023-06-22 16:46:13,138:INFO:Fitting Model
2023-06-22 16:46:13,306:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-22 16:46:13,306:INFO:create_model() successfully completed......................................
2023-06-22 16:46:13,483:INFO:_master_model_container: 15
2023-06-22 16:46:13,484:INFO:_display_container: 2
2023-06-22 16:46:13,484:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-22 16:46:13,484:INFO:compare_models() successfully completed......................................
2023-06-22 16:46:13,485:INFO:Initializing evaluate_model()
2023-06-22 16:46:13,485:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-22 16:46:13,529:INFO:Initializing plot_model()
2023-06-22 16:46:13,529:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:46:13,530:INFO:Checking exceptions
2023-06-22 16:46:13,531:INFO:Preloading libraries
2023-06-22 16:46:13,531:INFO:Copying training dataset
2023-06-22 16:46:13,532:INFO:Plot type: pipeline
2023-06-22 16:46:14,017:INFO:Visual Rendered Successfully
2023-06-22 16:46:14,139:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:22,262:INFO:Initializing plot_model()
2023-06-22 16:59:22,262:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:22,263:INFO:Checking exceptions
2023-06-22 16:59:22,265:INFO:Preloading libraries
2023-06-22 16:59:22,266:INFO:Copying training dataset
2023-06-22 16:59:22,266:INFO:Plot type: parameter
2023-06-22 16:59:22,270:INFO:Visual Rendered Successfully
2023-06-22 16:59:22,433:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:23,316:INFO:Initializing plot_model()
2023-06-22 16:59:23,316:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:23,316:INFO:Checking exceptions
2023-06-22 16:59:23,318:INFO:Preloading libraries
2023-06-22 16:59:23,319:INFO:Copying training dataset
2023-06-22 16:59:23,319:INFO:Plot type: auc
2023-06-22 16:59:23,468:INFO:Fitting Model
2023-06-22 16:59:23,469:INFO:Scoring test/hold-out set
2023-06-22 16:59:23,790:INFO:Visual Rendered Successfully
2023-06-22 16:59:23,926:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:24,053:INFO:Initializing plot_model()
2023-06-22 16:59:24,054:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:24,054:INFO:Checking exceptions
2023-06-22 16:59:24,056:INFO:Preloading libraries
2023-06-22 16:59:24,056:INFO:Copying training dataset
2023-06-22 16:59:24,057:INFO:Plot type: pipeline
2023-06-22 16:59:24,180:INFO:Visual Rendered Successfully
2023-06-22 16:59:24,400:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:24,815:INFO:Initializing plot_model()
2023-06-22 16:59:24,815:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:24,815:INFO:Checking exceptions
2023-06-22 16:59:24,817:INFO:Preloading libraries
2023-06-22 16:59:24,818:INFO:Copying training dataset
2023-06-22 16:59:24,818:INFO:Plot type: auc
2023-06-22 16:59:24,958:INFO:Fitting Model
2023-06-22 16:59:24,959:INFO:Scoring test/hold-out set
2023-06-22 16:59:25,228:INFO:Visual Rendered Successfully
2023-06-22 16:59:25,373:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:29,100:INFO:Initializing plot_model()
2023-06-22 16:59:29,100:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:29,101:INFO:Checking exceptions
2023-06-22 16:59:29,103:INFO:Preloading libraries
2023-06-22 16:59:29,103:INFO:Copying training dataset
2023-06-22 16:59:29,103:INFO:Plot type: confusion_matrix
2023-06-22 16:59:29,260:INFO:Fitting Model
2023-06-22 16:59:29,260:INFO:Scoring test/hold-out set
2023-06-22 16:59:29,435:INFO:Visual Rendered Successfully
2023-06-22 16:59:29,584:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:30,237:INFO:Initializing plot_model()
2023-06-22 16:59:30,238:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:30,238:INFO:Checking exceptions
2023-06-22 16:59:31,925:INFO:Initializing plot_model()
2023-06-22 16:59:31,925:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:31,926:INFO:Checking exceptions
2023-06-22 16:59:31,928:INFO:Preloading libraries
2023-06-22 16:59:31,929:INFO:Copying training dataset
2023-06-22 16:59:31,929:INFO:Plot type: pr
2023-06-22 16:59:32,072:INFO:Fitting Model
2023-06-22 16:59:32,089:INFO:Scoring test/hold-out set
2023-06-22 16:59:32,302:INFO:Visual Rendered Successfully
2023-06-22 16:59:32,444:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:35,249:INFO:Initializing plot_model()
2023-06-22 16:59:35,249:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:35,250:INFO:Checking exceptions
2023-06-22 16:59:35,251:INFO:Preloading libraries
2023-06-22 16:59:35,252:INFO:Copying training dataset
2023-06-22 16:59:35,252:INFO:Plot type: error
2023-06-22 16:59:35,395:INFO:Fitting Model
2023-06-22 16:59:35,395:INFO:Scoring test/hold-out set
2023-06-22 16:59:35,663:INFO:Visual Rendered Successfully
2023-06-22 16:59:35,849:INFO:plot_model() successfully completed......................................
2023-06-22 16:59:37,560:INFO:Initializing plot_model()
2023-06-22 16:59:37,560:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, system=True)
2023-06-22 16:59:37,560:INFO:Checking exceptions
2023-06-22 16:59:37,562:INFO:Preloading libraries
2023-06-22 16:59:37,563:INFO:Copying training dataset
2023-06-22 16:59:37,563:INFO:Plot type: class_report
2023-06-22 16:59:37,707:INFO:Fitting Model
2023-06-22 16:59:37,707:INFO:Scoring test/hold-out set
2023-06-22 16:59:38,002:INFO:Visual Rendered Successfully
2023-06-22 16:59:38,132:INFO:plot_model() successfully completed......................................
2023-06-22 17:38:53,336:INFO:Initializing create_model()
2023-06-22 17:38:53,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-22 17:38:53,336:INFO:Checking exceptions
2023-06-22 17:38:53,349:INFO:Importing libraries
2023-06-22 17:38:53,350:INFO:Copying training dataset
2023-06-22 17:38:53,353:INFO:Defining folds
2023-06-22 17:38:53,354:INFO:Declaring metric variables
2023-06-22 17:38:53,357:INFO:Importing untrained model
2023-06-22 17:38:53,360:INFO:Linear Discriminant Analysis Imported successfully
2023-06-22 17:38:53,366:INFO:Starting cross validation
2023-06-22 17:38:53,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 17:38:58,001:INFO:Calculating mean and std
2023-06-22 17:38:58,002:INFO:Creating metrics dataframe
2023-06-22 17:38:58,008:INFO:Finalizing model
2023-06-22 17:38:58,175:INFO:Uploading results into container
2023-06-22 17:38:58,176:INFO:Uploading model into container now
2023-06-22 17:38:58,186:INFO:_master_model_container: 16
2023-06-22 17:38:58,186:INFO:_display_container: 3
2023-06-22 17:38:58,187:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-22 17:38:58,187:INFO:create_model() successfully completed......................................
2023-06-22 17:38:58,340:INFO:Initializing predict_model()
2023-06-22 17:38:58,340:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD216A3D90>)
2023-06-22 17:38:58,340:INFO:Checking exceptions
2023-06-22 17:38:58,340:INFO:Preloading libraries
2023-06-22 17:38:58,342:INFO:Set up data.
2023-06-22 17:38:58,346:INFO:Set up index.
2023-06-22 17:48:40,734:INFO:Initializing create_model()
2023-06-22 17:48:40,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-22 17:48:40,734:INFO:Checking exceptions
2023-06-22 17:48:40,749:INFO:Importing libraries
2023-06-22 17:48:40,749:INFO:Copying training dataset
2023-06-22 17:48:40,754:INFO:Defining folds
2023-06-22 17:48:40,754:INFO:Declaring metric variables
2023-06-22 17:48:40,759:INFO:Importing untrained model
2023-06-22 17:48:40,763:INFO:Linear Discriminant Analysis Imported successfully
2023-06-22 17:48:40,773:INFO:Starting cross validation
2023-06-22 17:48:40,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 17:48:46,051:INFO:Calculating mean and std
2023-06-22 17:48:46,053:INFO:Creating metrics dataframe
2023-06-22 17:48:46,060:INFO:Finalizing model
2023-06-22 17:48:46,237:INFO:Uploading results into container
2023-06-22 17:48:46,238:INFO:Uploading model into container now
2023-06-22 17:48:46,247:INFO:_master_model_container: 17
2023-06-22 17:48:46,247:INFO:_display_container: 4
2023-06-22 17:48:46,248:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-22 17:48:46,249:INFO:create_model() successfully completed......................................
2023-06-22 17:48:46,388:INFO:Initializing predict_model()
2023-06-22 17:48:46,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21705D50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD21575CF0>)
2023-06-22 17:48:46,388:INFO:Checking exceptions
2023-06-22 17:48:46,389:INFO:Preloading libraries
2023-06-22 17:48:46,390:INFO:Set up data.
2023-06-22 17:48:46,393:INFO:Set up index.
2023-06-23 11:02:27,180:INFO:PyCaret ClassificationExperiment
2023-06-23 11:02:27,180:INFO:Logging name: clf-default-name
2023-06-23 11:02:27,180:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 11:02:27,181:INFO:version 3.0.2
2023-06-23 11:02:27,181:INFO:Initializing setup()
2023-06-23 11:02:27,181:INFO:self.USI: 9591
2023-06-23 11:02:27,181:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-23 11:02:27,181:INFO:Checking environment
2023-06-23 11:02:27,181:INFO:python_version: 3.10.5
2023-06-23 11:02:27,181:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-23 11:02:27,182:INFO:machine: AMD64
2023-06-23 11:02:27,182:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 11:02:27,187:INFO:Memory: svmem(total=17130000384, available=8947437568, percent=47.8, used=8182562816, free=8947437568)
2023-06-23 11:02:27,187:INFO:Physical Core: 4
2023-06-23 11:02:27,187:INFO:Logical Core: 4
2023-06-23 11:02:27,187:INFO:Checking libraries
2023-06-23 11:02:27,188:INFO:System:
2023-06-23 11:02:27,188:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-23 11:02:27,188:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-23 11:02:27,188:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 11:02:27,188:INFO:PyCaret required dependencies:
2023-06-23 11:02:27,189:INFO:                 pip: 23.0.1
2023-06-23 11:02:27,189:INFO:          setuptools: 58.1.0
2023-06-23 11:02:27,189:INFO:             pycaret: 3.0.2
2023-06-23 11:02:27,189:INFO:             IPython: 8.9.0
2023-06-23 11:02:27,189:INFO:          ipywidgets: 8.0.6
2023-06-23 11:02:27,189:INFO:                tqdm: 4.65.0
2023-06-23 11:02:27,189:INFO:               numpy: 1.23.5
2023-06-23 11:02:27,189:INFO:              pandas: 1.5.3
2023-06-23 11:02:27,190:INFO:              jinja2: 3.1.2
2023-06-23 11:02:27,190:INFO:               scipy: 1.10.1
2023-06-23 11:02:27,190:INFO:              joblib: 1.2.0
2023-06-23 11:02:27,190:INFO:             sklearn: 1.2.2
2023-06-23 11:02:27,190:INFO:                pyod: 1.0.9
2023-06-23 11:02:27,190:INFO:            imblearn: 0.10.1
2023-06-23 11:02:27,190:INFO:   category_encoders: 2.6.1
2023-06-23 11:02:27,190:INFO:            lightgbm: 3.3.5
2023-06-23 11:02:27,190:INFO:               numba: 0.57.0
2023-06-23 11:02:27,190:INFO:            requests: 2.28.2
2023-06-23 11:02:27,190:INFO:          matplotlib: 3.7.1
2023-06-23 11:02:27,190:INFO:          scikitplot: 0.3.7
2023-06-23 11:02:27,190:INFO:         yellowbrick: 1.5
2023-06-23 11:02:27,190:INFO:              plotly: 5.15.0
2023-06-23 11:02:27,190:INFO:             kaleido: 0.2.1
2023-06-23 11:02:27,190:INFO:         statsmodels: 0.14.0
2023-06-23 11:02:27,190:INFO:              sktime: 0.17.0
2023-06-23 11:02:27,190:INFO:               tbats: 1.1.3
2023-06-23 11:02:27,190:INFO:            pmdarima: 2.0.3
2023-06-23 11:02:27,191:INFO:              psutil: 5.9.4
2023-06-23 11:02:27,191:INFO:PyCaret optional dependencies:
2023-06-23 11:02:27,191:INFO:                shap: Not installed
2023-06-23 11:02:27,191:INFO:           interpret: 0.4.2
2023-06-23 11:02:27,191:INFO:                umap: Not installed
2023-06-23 11:02:27,191:INFO:    pandas_profiling: Not installed
2023-06-23 11:02:27,191:INFO:  explainerdashboard: Not installed
2023-06-23 11:02:27,191:INFO:             autoviz: Not installed
2023-06-23 11:02:27,191:INFO:           fairlearn: Not installed
2023-06-23 11:02:27,191:INFO:             xgboost: 1.7.5
2023-06-23 11:02:27,191:INFO:            catboost: Not installed
2023-06-23 11:02:27,191:INFO:              kmodes: Not installed
2023-06-23 11:02:27,191:INFO:             mlxtend: Not installed
2023-06-23 11:02:27,191:INFO:       statsforecast: Not installed
2023-06-23 11:02:27,191:INFO:        tune_sklearn: Not installed
2023-06-23 11:02:27,191:INFO:                 ray: Not installed
2023-06-23 11:02:27,191:INFO:            hyperopt: 0.2.7
2023-06-23 11:02:27,191:INFO:              optuna: Not installed
2023-06-23 11:02:27,192:INFO:               skopt: Not installed
2023-06-23 11:02:27,192:INFO:              mlflow: Not installed
2023-06-23 11:02:27,192:INFO:              gradio: Not installed
2023-06-23 11:02:27,192:INFO:             fastapi: Not installed
2023-06-23 11:02:27,192:INFO:             uvicorn: Not installed
2023-06-23 11:02:27,192:INFO:              m2cgen: Not installed
2023-06-23 11:02:27,192:INFO:           evidently: Not installed
2023-06-23 11:02:27,192:INFO:               fugue: Not installed
2023-06-23 11:02:27,192:INFO:           streamlit: Not installed
2023-06-23 11:02:27,192:INFO:             prophet: 1.1.4
2023-06-23 11:02:27,192:INFO:None
2023-06-23 11:02:27,192:INFO:Set up data.
2023-06-23 11:02:27,202:INFO:Set up train/test split.
2023-06-23 11:02:27,211:INFO:Set up index.
2023-06-23 11:02:27,211:INFO:Set up folding strategy.
2023-06-23 11:02:27,211:INFO:Assigning column types.
2023-06-23 11:02:27,215:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 11:02:27,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,299:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,377:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,380:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 11:02:27,423:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,447:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,492:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:02:27,520:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,522:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 11:02:27,593:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,665:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:27,673:INFO:Preparing preprocessing pipeline...
2023-06-23 11:02:27,674:INFO:Set up label encoding.
2023-06-23 11:02:27,674:INFO:Set up simple imputation.
2023-06-23 11:02:27,675:INFO:Set up column name cleaning.
2023-06-23 11:02:27,739:INFO:Finished creating preprocessing pipeline.
2023-06-23 11:02:27,745:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 11:02:27,745:INFO:Creating final display dataframe.
2023-06-23 11:02:27,901:INFO:Setup _display_container:                     Description              Value
0                    Session id               4853
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (976, 8)
5        Transformed data shape           (976, 8)
6   Transformed train set shape           (683, 8)
7    Transformed test set shape           (293, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               9591
2023-06-23 11:02:27,989:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:27,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:28,061:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 11:02:28,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:02:28,065:INFO:setup() successfully completed in 0.99s...............
2023-06-23 11:02:31,528:INFO:Initializing compare_models()
2023-06-23 11:02:31,528:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 11:02:31,528:INFO:Checking exceptions
2023-06-23 11:02:31,531:INFO:Preparing display monitor
2023-06-23 11:02:31,561:INFO:Initializing Logistic Regression
2023-06-23 11:02:31,562:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-06-23 11:02:31,565:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:31,566:INFO:Initializing create_model()
2023-06-23 11:02:31,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:31,567:INFO:Checking exceptions
2023-06-23 11:02:31,567:INFO:Importing libraries
2023-06-23 11:02:31,567:INFO:Copying training dataset
2023-06-23 11:02:31,572:INFO:Defining folds
2023-06-23 11:02:31,572:INFO:Declaring metric variables
2023-06-23 11:02:31,576:INFO:Importing untrained model
2023-06-23 11:02:31,580:INFO:Logistic Regression Imported successfully
2023-06-23 11:02:31,589:INFO:Starting cross validation
2023-06-23 11:02:31,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:39,609:INFO:Calculating mean and std
2023-06-23 11:02:39,610:INFO:Creating metrics dataframe
2023-06-23 11:02:39,712:INFO:Uploading results into container
2023-06-23 11:02:39,713:INFO:Uploading model into container now
2023-06-23 11:02:39,713:INFO:_master_model_container: 1
2023-06-23 11:02:39,713:INFO:_display_container: 2
2023-06-23 11:02:39,714:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4853, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 11:02:39,714:INFO:create_model() successfully completed......................................
2023-06-23 11:02:40,070:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:40,070:INFO:Creating metrics dataframe
2023-06-23 11:02:40,078:INFO:Initializing K Neighbors Classifier
2023-06-23 11:02:40,078:INFO:Total runtime is 0.1419447660446167 minutes
2023-06-23 11:02:40,081:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:40,081:INFO:Initializing create_model()
2023-06-23 11:02:40,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:40,082:INFO:Checking exceptions
2023-06-23 11:02:40,082:INFO:Importing libraries
2023-06-23 11:02:40,082:INFO:Copying training dataset
2023-06-23 11:02:40,087:INFO:Defining folds
2023-06-23 11:02:40,087:INFO:Declaring metric variables
2023-06-23 11:02:40,092:INFO:Importing untrained model
2023-06-23 11:02:40,096:INFO:K Neighbors Classifier Imported successfully
2023-06-23 11:02:40,104:INFO:Starting cross validation
2023-06-23 11:02:40,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:41,189:INFO:Calculating mean and std
2023-06-23 11:02:41,190:INFO:Creating metrics dataframe
2023-06-23 11:02:41,286:INFO:Uploading results into container
2023-06-23 11:02:41,287:INFO:Uploading model into container now
2023-06-23 11:02:41,287:INFO:_master_model_container: 2
2023-06-23 11:02:41,287:INFO:_display_container: 2
2023-06-23 11:02:41,287:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 11:02:41,287:INFO:create_model() successfully completed......................................
2023-06-23 11:02:41,424:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:41,424:INFO:Creating metrics dataframe
2023-06-23 11:02:41,434:INFO:Initializing Naive Bayes
2023-06-23 11:02:41,434:INFO:Total runtime is 0.16453534364700317 minutes
2023-06-23 11:02:41,438:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:41,438:INFO:Initializing create_model()
2023-06-23 11:02:41,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:41,439:INFO:Checking exceptions
2023-06-23 11:02:41,439:INFO:Importing libraries
2023-06-23 11:02:41,439:INFO:Copying training dataset
2023-06-23 11:02:41,443:INFO:Defining folds
2023-06-23 11:02:41,444:INFO:Declaring metric variables
2023-06-23 11:02:41,447:INFO:Importing untrained model
2023-06-23 11:02:41,452:INFO:Naive Bayes Imported successfully
2023-06-23 11:02:41,460:INFO:Starting cross validation
2023-06-23 11:02:41,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:42,572:INFO:Calculating mean and std
2023-06-23 11:02:42,573:INFO:Creating metrics dataframe
2023-06-23 11:02:42,664:INFO:Uploading results into container
2023-06-23 11:02:42,664:INFO:Uploading model into container now
2023-06-23 11:02:42,665:INFO:_master_model_container: 3
2023-06-23 11:02:42,665:INFO:_display_container: 2
2023-06-23 11:02:42,665:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 11:02:42,665:INFO:create_model() successfully completed......................................
2023-06-23 11:02:42,803:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:42,803:INFO:Creating metrics dataframe
2023-06-23 11:02:42,812:INFO:Initializing Decision Tree Classifier
2023-06-23 11:02:42,813:INFO:Total runtime is 0.18752382198969522 minutes
2023-06-23 11:02:42,816:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:42,817:INFO:Initializing create_model()
2023-06-23 11:02:42,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:42,817:INFO:Checking exceptions
2023-06-23 11:02:42,817:INFO:Importing libraries
2023-06-23 11:02:42,817:INFO:Copying training dataset
2023-06-23 11:02:42,822:INFO:Defining folds
2023-06-23 11:02:42,823:INFO:Declaring metric variables
2023-06-23 11:02:42,828:INFO:Importing untrained model
2023-06-23 11:02:42,831:INFO:Decision Tree Classifier Imported successfully
2023-06-23 11:02:42,839:INFO:Starting cross validation
2023-06-23 11:02:42,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:43,918:INFO:Calculating mean and std
2023-06-23 11:02:43,920:INFO:Creating metrics dataframe
2023-06-23 11:02:44,015:INFO:Uploading results into container
2023-06-23 11:02:44,015:INFO:Uploading model into container now
2023-06-23 11:02:44,016:INFO:_master_model_container: 4
2023-06-23 11:02:44,016:INFO:_display_container: 2
2023-06-23 11:02:44,016:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4853, splitter='best')
2023-06-23 11:02:44,016:INFO:create_model() successfully completed......................................
2023-06-23 11:02:44,156:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:44,156:INFO:Creating metrics dataframe
2023-06-23 11:02:44,166:INFO:Initializing SVM - Linear Kernel
2023-06-23 11:02:44,167:INFO:Total runtime is 0.21008605957031248 minutes
2023-06-23 11:02:44,172:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:44,172:INFO:Initializing create_model()
2023-06-23 11:02:44,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:44,173:INFO:Checking exceptions
2023-06-23 11:02:44,173:INFO:Importing libraries
2023-06-23 11:02:44,173:INFO:Copying training dataset
2023-06-23 11:02:44,178:INFO:Defining folds
2023-06-23 11:02:44,178:INFO:Declaring metric variables
2023-06-23 11:02:44,183:INFO:Importing untrained model
2023-06-23 11:02:44,188:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 11:02:44,196:INFO:Starting cross validation
2023-06-23 11:02:44,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:44,407:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,646:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,657:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,690:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,742:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,883:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:44,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:02:45,219:INFO:Calculating mean and std
2023-06-23 11:02:45,220:INFO:Creating metrics dataframe
2023-06-23 11:02:45,340:INFO:Uploading results into container
2023-06-23 11:02:45,341:INFO:Uploading model into container now
2023-06-23 11:02:45,341:INFO:_master_model_container: 5
2023-06-23 11:02:45,341:INFO:_display_container: 2
2023-06-23 11:02:45,342:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4853, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 11:02:45,342:INFO:create_model() successfully completed......................................
2023-06-23 11:02:45,511:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:45,511:INFO:Creating metrics dataframe
2023-06-23 11:02:45,521:INFO:Initializing Ridge Classifier
2023-06-23 11:02:45,522:INFO:Total runtime is 0.23267802000045776 minutes
2023-06-23 11:02:45,525:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:45,526:INFO:Initializing create_model()
2023-06-23 11:02:45,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:45,526:INFO:Checking exceptions
2023-06-23 11:02:45,526:INFO:Importing libraries
2023-06-23 11:02:45,526:INFO:Copying training dataset
2023-06-23 11:02:45,530:INFO:Defining folds
2023-06-23 11:02:45,531:INFO:Declaring metric variables
2023-06-23 11:02:45,534:INFO:Importing untrained model
2023-06-23 11:02:45,540:INFO:Ridge Classifier Imported successfully
2023-06-23 11:02:45,549:INFO:Starting cross validation
2023-06-23 11:02:45,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:46,007:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,042:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,046:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,054:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,256:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,269:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,492:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:02:46,914:INFO:Calculating mean and std
2023-06-23 11:02:46,915:INFO:Creating metrics dataframe
2023-06-23 11:02:47,016:INFO:Uploading results into container
2023-06-23 11:02:47,016:INFO:Uploading model into container now
2023-06-23 11:02:47,018:INFO:_master_model_container: 6
2023-06-23 11:02:47,018:INFO:_display_container: 2
2023-06-23 11:02:47,019:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4853, solver='auto',
                tol=0.0001)
2023-06-23 11:02:47,019:INFO:create_model() successfully completed......................................
2023-06-23 11:02:47,159:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:47,159:INFO:Creating metrics dataframe
2023-06-23 11:02:47,169:INFO:Initializing Random Forest Classifier
2023-06-23 11:02:47,170:INFO:Total runtime is 0.26014252106348673 minutes
2023-06-23 11:02:47,175:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:47,175:INFO:Initializing create_model()
2023-06-23 11:02:47,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:47,176:INFO:Checking exceptions
2023-06-23 11:02:47,176:INFO:Importing libraries
2023-06-23 11:02:47,176:INFO:Copying training dataset
2023-06-23 11:02:47,181:INFO:Defining folds
2023-06-23 11:02:47,182:INFO:Declaring metric variables
2023-06-23 11:02:47,188:INFO:Importing untrained model
2023-06-23 11:02:47,192:INFO:Random Forest Classifier Imported successfully
2023-06-23 11:02:47,199:INFO:Starting cross validation
2023-06-23 11:02:47,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:49,587:INFO:Calculating mean and std
2023-06-23 11:02:49,588:INFO:Creating metrics dataframe
2023-06-23 11:02:49,692:INFO:Uploading results into container
2023-06-23 11:02:49,693:INFO:Uploading model into container now
2023-06-23 11:02:49,693:INFO:_master_model_container: 7
2023-06-23 11:02:49,693:INFO:_display_container: 2
2023-06-23 11:02:49,694:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4853, verbose=0, warm_start=False)
2023-06-23 11:02:49,694:INFO:create_model() successfully completed......................................
2023-06-23 11:02:49,832:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:49,832:INFO:Creating metrics dataframe
2023-06-23 11:02:49,843:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 11:02:49,844:INFO:Total runtime is 0.30470266739527385 minutes
2023-06-23 11:02:49,847:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:49,848:INFO:Initializing create_model()
2023-06-23 11:02:49,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:49,848:INFO:Checking exceptions
2023-06-23 11:02:49,848:INFO:Importing libraries
2023-06-23 11:02:49,849:INFO:Copying training dataset
2023-06-23 11:02:49,854:INFO:Defining folds
2023-06-23 11:02:49,855:INFO:Declaring metric variables
2023-06-23 11:02:49,860:INFO:Importing untrained model
2023-06-23 11:02:49,864:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 11:02:49,871:INFO:Starting cross validation
2023-06-23 11:02:49,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:51,116:INFO:Calculating mean and std
2023-06-23 11:02:51,118:INFO:Creating metrics dataframe
2023-06-23 11:02:51,233:INFO:Uploading results into container
2023-06-23 11:02:51,234:INFO:Uploading model into container now
2023-06-23 11:02:51,235:INFO:_master_model_container: 8
2023-06-23 11:02:51,235:INFO:_display_container: 2
2023-06-23 11:02:51,235:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 11:02:51,235:INFO:create_model() successfully completed......................................
2023-06-23 11:02:51,374:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:51,375:INFO:Creating metrics dataframe
2023-06-23 11:02:51,388:INFO:Initializing Ada Boost Classifier
2023-06-23 11:02:51,388:INFO:Total runtime is 0.330450439453125 minutes
2023-06-23 11:02:51,391:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:51,391:INFO:Initializing create_model()
2023-06-23 11:02:51,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:51,392:INFO:Checking exceptions
2023-06-23 11:02:51,392:INFO:Importing libraries
2023-06-23 11:02:51,392:INFO:Copying training dataset
2023-06-23 11:02:51,397:INFO:Defining folds
2023-06-23 11:02:51,397:INFO:Declaring metric variables
2023-06-23 11:02:51,401:INFO:Importing untrained model
2023-06-23 11:02:51,406:INFO:Ada Boost Classifier Imported successfully
2023-06-23 11:02:51,413:INFO:Starting cross validation
2023-06-23 11:02:51,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:53,062:INFO:Calculating mean and std
2023-06-23 11:02:53,063:INFO:Creating metrics dataframe
2023-06-23 11:02:53,184:INFO:Uploading results into container
2023-06-23 11:02:53,185:INFO:Uploading model into container now
2023-06-23 11:02:53,185:INFO:_master_model_container: 9
2023-06-23 11:02:53,185:INFO:_display_container: 2
2023-06-23 11:02:53,186:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4853)
2023-06-23 11:02:53,186:INFO:create_model() successfully completed......................................
2023-06-23 11:02:53,331:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:53,331:INFO:Creating metrics dataframe
2023-06-23 11:02:53,342:INFO:Initializing Gradient Boosting Classifier
2023-06-23 11:02:53,342:INFO:Total runtime is 0.3630053242047628 minutes
2023-06-23 11:02:53,345:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:53,346:INFO:Initializing create_model()
2023-06-23 11:02:53,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:53,346:INFO:Checking exceptions
2023-06-23 11:02:53,346:INFO:Importing libraries
2023-06-23 11:02:53,346:INFO:Copying training dataset
2023-06-23 11:02:53,353:INFO:Defining folds
2023-06-23 11:02:53,353:INFO:Declaring metric variables
2023-06-23 11:02:53,356:INFO:Importing untrained model
2023-06-23 11:02:53,362:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 11:02:53,370:INFO:Starting cross validation
2023-06-23 11:02:53,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:58,049:INFO:Calculating mean and std
2023-06-23 11:02:58,050:INFO:Creating metrics dataframe
2023-06-23 11:02:58,177:INFO:Uploading results into container
2023-06-23 11:02:58,178:INFO:Uploading model into container now
2023-06-23 11:02:58,179:INFO:_master_model_container: 10
2023-06-23 11:02:58,179:INFO:_display_container: 2
2023-06-23 11:02:58,179:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4853, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 11:02:58,179:INFO:create_model() successfully completed......................................
2023-06-23 11:02:58,318:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:58,318:INFO:Creating metrics dataframe
2023-06-23 11:02:58,329:INFO:Initializing Linear Discriminant Analysis
2023-06-23 11:02:58,329:INFO:Total runtime is 0.4461224555969238 minutes
2023-06-23 11:02:58,333:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:58,334:INFO:Initializing create_model()
2023-06-23 11:02:58,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:58,334:INFO:Checking exceptions
2023-06-23 11:02:58,334:INFO:Importing libraries
2023-06-23 11:02:58,334:INFO:Copying training dataset
2023-06-23 11:02:58,338:INFO:Defining folds
2023-06-23 11:02:58,339:INFO:Declaring metric variables
2023-06-23 11:02:58,342:INFO:Importing untrained model
2023-06-23 11:02:58,347:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:02:58,357:INFO:Starting cross validation
2023-06-23 11:02:58,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:02:59,691:INFO:Calculating mean and std
2023-06-23 11:02:59,692:INFO:Creating metrics dataframe
2023-06-23 11:02:59,829:INFO:Uploading results into container
2023-06-23 11:02:59,830:INFO:Uploading model into container now
2023-06-23 11:02:59,831:INFO:_master_model_container: 11
2023-06-23 11:02:59,831:INFO:_display_container: 2
2023-06-23 11:02:59,831:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:02:59,832:INFO:create_model() successfully completed......................................
2023-06-23 11:02:59,973:INFO:SubProcess create_model() end ==================================
2023-06-23 11:02:59,973:INFO:Creating metrics dataframe
2023-06-23 11:02:59,985:INFO:Initializing Extra Trees Classifier
2023-06-23 11:02:59,985:INFO:Total runtime is 0.4737335165341695 minutes
2023-06-23 11:02:59,989:INFO:SubProcess create_model() called ==================================
2023-06-23 11:02:59,989:INFO:Initializing create_model()
2023-06-23 11:02:59,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:02:59,990:INFO:Checking exceptions
2023-06-23 11:02:59,990:INFO:Importing libraries
2023-06-23 11:02:59,990:INFO:Copying training dataset
2023-06-23 11:02:59,994:INFO:Defining folds
2023-06-23 11:02:59,994:INFO:Declaring metric variables
2023-06-23 11:02:59,998:INFO:Importing untrained model
2023-06-23 11:03:00,004:INFO:Extra Trees Classifier Imported successfully
2023-06-23 11:03:00,012:INFO:Starting cross validation
2023-06-23 11:03:00,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:02,364:INFO:Calculating mean and std
2023-06-23 11:03:02,365:INFO:Creating metrics dataframe
2023-06-23 11:03:02,562:INFO:Uploading results into container
2023-06-23 11:03:02,563:INFO:Uploading model into container now
2023-06-23 11:03:02,563:INFO:_master_model_container: 12
2023-06-23 11:03:02,563:INFO:_display_container: 2
2023-06-23 11:03:02,564:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4853, verbose=0, warm_start=False)
2023-06-23 11:03:02,564:INFO:create_model() successfully completed......................................
2023-06-23 11:03:02,702:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:02,702:INFO:Creating metrics dataframe
2023-06-23 11:03:02,714:INFO:Initializing Extreme Gradient Boosting
2023-06-23 11:03:02,714:INFO:Total runtime is 0.5192073861757914 minutes
2023-06-23 11:03:02,718:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:02,718:INFO:Initializing create_model()
2023-06-23 11:03:02,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:02,719:INFO:Checking exceptions
2023-06-23 11:03:02,719:INFO:Importing libraries
2023-06-23 11:03:02,719:INFO:Copying training dataset
2023-06-23 11:03:02,724:INFO:Defining folds
2023-06-23 11:03:02,724:INFO:Declaring metric variables
2023-06-23 11:03:02,728:INFO:Importing untrained model
2023-06-23 11:03:02,734:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:03:02,741:INFO:Starting cross validation
2023-06-23 11:03:02,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:08,379:INFO:Calculating mean and std
2023-06-23 11:03:08,380:INFO:Creating metrics dataframe
2023-06-23 11:03:08,536:INFO:Uploading results into container
2023-06-23 11:03:08,537:INFO:Uploading model into container now
2023-06-23 11:03:08,537:INFO:_master_model_container: 13
2023-06-23 11:03:08,537:INFO:_display_container: 2
2023-06-23 11:03:08,538:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 11:03:08,539:INFO:create_model() successfully completed......................................
2023-06-23 11:03:08,680:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:08,680:INFO:Creating metrics dataframe
2023-06-23 11:03:08,693:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 11:03:08,693:INFO:Total runtime is 0.6188666820526123 minutes
2023-06-23 11:03:08,697:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:08,697:INFO:Initializing create_model()
2023-06-23 11:03:08,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:08,698:INFO:Checking exceptions
2023-06-23 11:03:08,698:INFO:Importing libraries
2023-06-23 11:03:08,698:INFO:Copying training dataset
2023-06-23 11:03:08,702:INFO:Defining folds
2023-06-23 11:03:08,703:INFO:Declaring metric variables
2023-06-23 11:03:08,707:INFO:Importing untrained model
2023-06-23 11:03:08,711:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 11:03:08,719:INFO:Starting cross validation
2023-06-23 11:03:08,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:13,564:INFO:Calculating mean and std
2023-06-23 11:03:13,565:INFO:Creating metrics dataframe
2023-06-23 11:03:13,724:INFO:Uploading results into container
2023-06-23 11:03:13,725:INFO:Uploading model into container now
2023-06-23 11:03:13,725:INFO:_master_model_container: 14
2023-06-23 11:03:13,725:INFO:_display_container: 2
2023-06-23 11:03:13,725:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4853, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 11:03:13,726:INFO:create_model() successfully completed......................................
2023-06-23 11:03:13,864:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:13,864:INFO:Creating metrics dataframe
2023-06-23 11:03:13,877:INFO:Initializing Dummy Classifier
2023-06-23 11:03:13,877:INFO:Total runtime is 0.7052623907725016 minutes
2023-06-23 11:03:13,883:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:13,884:INFO:Initializing create_model()
2023-06-23 11:03:13,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2130FC10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:13,884:INFO:Checking exceptions
2023-06-23 11:03:13,884:INFO:Importing libraries
2023-06-23 11:03:13,884:INFO:Copying training dataset
2023-06-23 11:03:13,888:INFO:Defining folds
2023-06-23 11:03:13,889:INFO:Declaring metric variables
2023-06-23 11:03:13,892:INFO:Importing untrained model
2023-06-23 11:03:13,896:INFO:Dummy Classifier Imported successfully
2023-06-23 11:03:13,905:INFO:Starting cross validation
2023-06-23 11:03:13,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:14,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,455:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,534:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,782:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:14,817:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:03:15,598:INFO:Calculating mean and std
2023-06-23 11:03:15,600:INFO:Creating metrics dataframe
2023-06-23 11:03:15,766:INFO:Uploading results into container
2023-06-23 11:03:15,767:INFO:Uploading model into container now
2023-06-23 11:03:15,767:INFO:_master_model_container: 15
2023-06-23 11:03:15,768:INFO:_display_container: 2
2023-06-23 11:03:15,768:INFO:DummyClassifier(constant=None, random_state=4853, strategy='prior')
2023-06-23 11:03:15,768:INFO:create_model() successfully completed......................................
2023-06-23 11:03:15,908:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:15,909:INFO:Creating metrics dataframe
2023-06-23 11:03:15,933:INFO:Initializing create_model()
2023-06-23 11:03:15,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:15,933:INFO:Checking exceptions
2023-06-23 11:03:15,935:INFO:Importing libraries
2023-06-23 11:03:15,935:INFO:Copying training dataset
2023-06-23 11:03:15,953:INFO:Defining folds
2023-06-23 11:03:15,953:INFO:Declaring metric variables
2023-06-23 11:03:15,953:INFO:Importing untrained model
2023-06-23 11:03:15,953:INFO:Declaring custom model
2023-06-23 11:03:15,954:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:03:15,954:INFO:Cross validation set to False
2023-06-23 11:03:15,954:INFO:Fitting Model
2023-06-23 11:03:16,200:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:03:16,200:INFO:create_model() successfully completed......................................
2023-06-23 11:03:16,370:INFO:_master_model_container: 15
2023-06-23 11:03:16,370:INFO:_display_container: 2
2023-06-23 11:03:16,370:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:03:16,371:INFO:compare_models() successfully completed......................................
2023-06-23 11:03:16,371:INFO:Initializing evaluate_model()
2023-06-23 11:03:16,371:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 11:03:16,381:INFO:Initializing plot_model()
2023-06-23 11:03:16,381:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, system=True)
2023-06-23 11:03:16,381:INFO:Checking exceptions
2023-06-23 11:03:16,383:INFO:Preloading libraries
2023-06-23 11:03:16,384:INFO:Copying training dataset
2023-06-23 11:03:16,384:INFO:Plot type: pipeline
2023-06-23 11:03:16,524:INFO:Visual Rendered Successfully
2023-06-23 11:03:16,662:INFO:plot_model() successfully completed......................................
2023-06-23 11:03:32,837:INFO:Initializing compare_models()
2023-06-23 11:03:32,837:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 11:03:32,837:INFO:Checking exceptions
2023-06-23 11:03:32,839:INFO:Preparing display monitor
2023-06-23 11:03:32,863:INFO:Initializing Logistic Regression
2023-06-23 11:03:32,863:INFO:Total runtime is 0.0 minutes
2023-06-23 11:03:32,868:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:32,868:INFO:Initializing create_model()
2023-06-23 11:03:32,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:32,869:INFO:Checking exceptions
2023-06-23 11:03:32,869:INFO:Importing libraries
2023-06-23 11:03:32,869:INFO:Copying training dataset
2023-06-23 11:03:32,874:INFO:Defining folds
2023-06-23 11:03:32,874:INFO:Declaring metric variables
2023-06-23 11:03:32,878:INFO:Importing untrained model
2023-06-23 11:03:32,883:INFO:Logistic Regression Imported successfully
2023-06-23 11:03:32,891:INFO:Starting cross validation
2023-06-23 11:03:32,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:34,998:INFO:Calculating mean and std
2023-06-23 11:03:35,000:INFO:Creating metrics dataframe
2023-06-23 11:03:35,179:INFO:Uploading results into container
2023-06-23 11:03:35,180:INFO:Uploading model into container now
2023-06-23 11:03:35,180:INFO:_master_model_container: 16
2023-06-23 11:03:35,180:INFO:_display_container: 3
2023-06-23 11:03:35,181:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4853, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 11:03:35,182:INFO:create_model() successfully completed......................................
2023-06-23 11:03:35,327:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:35,327:INFO:Creating metrics dataframe
2023-06-23 11:03:35,336:INFO:Initializing K Neighbors Classifier
2023-06-23 11:03:35,336:INFO:Total runtime is 0.04122745196024577 minutes
2023-06-23 11:03:35,339:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:35,340:INFO:Initializing create_model()
2023-06-23 11:03:35,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:35,340:INFO:Checking exceptions
2023-06-23 11:03:35,340:INFO:Importing libraries
2023-06-23 11:03:35,340:INFO:Copying training dataset
2023-06-23 11:03:35,344:INFO:Defining folds
2023-06-23 11:03:35,345:INFO:Declaring metric variables
2023-06-23 11:03:35,350:INFO:Importing untrained model
2023-06-23 11:03:35,355:INFO:K Neighbors Classifier Imported successfully
2023-06-23 11:03:35,362:INFO:Starting cross validation
2023-06-23 11:03:35,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:37,172:INFO:Calculating mean and std
2023-06-23 11:03:37,173:INFO:Creating metrics dataframe
2023-06-23 11:03:37,365:INFO:Uploading results into container
2023-06-23 11:03:37,366:INFO:Uploading model into container now
2023-06-23 11:03:37,367:INFO:_master_model_container: 17
2023-06-23 11:03:37,367:INFO:_display_container: 3
2023-06-23 11:03:37,367:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 11:03:37,367:INFO:create_model() successfully completed......................................
2023-06-23 11:03:37,513:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:37,514:INFO:Creating metrics dataframe
2023-06-23 11:03:37,525:INFO:Initializing Naive Bayes
2023-06-23 11:03:37,525:INFO:Total runtime is 0.07770283222198487 minutes
2023-06-23 11:03:37,530:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:37,530:INFO:Initializing create_model()
2023-06-23 11:03:37,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:37,530:INFO:Checking exceptions
2023-06-23 11:03:37,531:INFO:Importing libraries
2023-06-23 11:03:37,531:INFO:Copying training dataset
2023-06-23 11:03:37,536:INFO:Defining folds
2023-06-23 11:03:37,536:INFO:Declaring metric variables
2023-06-23 11:03:37,541:INFO:Importing untrained model
2023-06-23 11:03:37,545:INFO:Naive Bayes Imported successfully
2023-06-23 11:03:37,555:INFO:Starting cross validation
2023-06-23 11:03:37,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:39,242:INFO:Calculating mean and std
2023-06-23 11:03:39,243:INFO:Creating metrics dataframe
2023-06-23 11:03:39,413:INFO:Uploading results into container
2023-06-23 11:03:39,413:INFO:Uploading model into container now
2023-06-23 11:03:39,415:INFO:_master_model_container: 18
2023-06-23 11:03:39,415:INFO:_display_container: 3
2023-06-23 11:03:39,415:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 11:03:39,415:INFO:create_model() successfully completed......................................
2023-06-23 11:03:39,564:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:39,564:INFO:Creating metrics dataframe
2023-06-23 11:03:39,574:INFO:Initializing Decision Tree Classifier
2023-06-23 11:03:39,574:INFO:Total runtime is 0.11184972127278647 minutes
2023-06-23 11:03:39,577:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:39,578:INFO:Initializing create_model()
2023-06-23 11:03:39,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:39,578:INFO:Checking exceptions
2023-06-23 11:03:39,578:INFO:Importing libraries
2023-06-23 11:03:39,578:INFO:Copying training dataset
2023-06-23 11:03:39,583:INFO:Defining folds
2023-06-23 11:03:39,584:INFO:Declaring metric variables
2023-06-23 11:03:39,588:INFO:Importing untrained model
2023-06-23 11:03:39,592:INFO:Decision Tree Classifier Imported successfully
2023-06-23 11:03:39,602:INFO:Starting cross validation
2023-06-23 11:03:39,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:41,249:INFO:Calculating mean and std
2023-06-23 11:03:41,250:INFO:Creating metrics dataframe
2023-06-23 11:03:41,418:INFO:Uploading results into container
2023-06-23 11:03:41,419:INFO:Uploading model into container now
2023-06-23 11:03:41,419:INFO:_master_model_container: 19
2023-06-23 11:03:41,420:INFO:_display_container: 3
2023-06-23 11:03:41,420:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4853, splitter='best')
2023-06-23 11:03:41,421:INFO:create_model() successfully completed......................................
2023-06-23 11:03:41,574:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:41,574:INFO:Creating metrics dataframe
2023-06-23 11:03:41,584:INFO:Initializing SVM - Linear Kernel
2023-06-23 11:03:41,584:INFO:Total runtime is 0.1453479051589966 minutes
2023-06-23 11:03:41,588:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:41,589:INFO:Initializing create_model()
2023-06-23 11:03:41,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:41,589:INFO:Checking exceptions
2023-06-23 11:03:41,589:INFO:Importing libraries
2023-06-23 11:03:41,589:INFO:Copying training dataset
2023-06-23 11:03:41,593:INFO:Defining folds
2023-06-23 11:03:41,594:INFO:Declaring metric variables
2023-06-23 11:03:41,599:INFO:Importing untrained model
2023-06-23 11:03:41,605:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 11:03:41,613:INFO:Starting cross validation
2023-06-23 11:03:41,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:41,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:41,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:41,757:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:41,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,111:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,113:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,118:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:42,451:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:03:43,270:INFO:Calculating mean and std
2023-06-23 11:03:43,271:INFO:Creating metrics dataframe
2023-06-23 11:03:43,446:INFO:Uploading results into container
2023-06-23 11:03:43,448:INFO:Uploading model into container now
2023-06-23 11:03:43,448:INFO:_master_model_container: 20
2023-06-23 11:03:43,449:INFO:_display_container: 3
2023-06-23 11:03:43,449:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4853, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 11:03:43,449:INFO:create_model() successfully completed......................................
2023-06-23 11:03:43,594:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:43,594:INFO:Creating metrics dataframe
2023-06-23 11:03:43,605:INFO:Initializing Ridge Classifier
2023-06-23 11:03:43,605:INFO:Total runtime is 0.1790336052576701 minutes
2023-06-23 11:03:43,609:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:43,609:INFO:Initializing create_model()
2023-06-23 11:03:43,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:43,610:INFO:Checking exceptions
2023-06-23 11:03:43,610:INFO:Importing libraries
2023-06-23 11:03:43,610:INFO:Copying training dataset
2023-06-23 11:03:43,613:INFO:Defining folds
2023-06-23 11:03:43,614:INFO:Declaring metric variables
2023-06-23 11:03:43,618:INFO:Importing untrained model
2023-06-23 11:03:43,622:INFO:Ridge Classifier Imported successfully
2023-06-23 11:03:43,645:INFO:Starting cross validation
2023-06-23 11:03:43,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:43,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:43,868:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:43,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:43,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,228:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,562:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:44,593:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:03:45,388:INFO:Calculating mean and std
2023-06-23 11:03:45,389:INFO:Creating metrics dataframe
2023-06-23 11:03:45,561:INFO:Uploading results into container
2023-06-23 11:03:45,562:INFO:Uploading model into container now
2023-06-23 11:03:45,562:INFO:_master_model_container: 21
2023-06-23 11:03:45,562:INFO:_display_container: 3
2023-06-23 11:03:45,563:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4853, solver='auto',
                tol=0.0001)
2023-06-23 11:03:45,563:INFO:create_model() successfully completed......................................
2023-06-23 11:03:45,708:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:45,709:INFO:Creating metrics dataframe
2023-06-23 11:03:45,722:INFO:Initializing Random Forest Classifier
2023-06-23 11:03:45,722:INFO:Total runtime is 0.21432141462961835 minutes
2023-06-23 11:03:45,726:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:45,726:INFO:Initializing create_model()
2023-06-23 11:03:45,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:45,727:INFO:Checking exceptions
2023-06-23 11:03:45,727:INFO:Importing libraries
2023-06-23 11:03:45,727:INFO:Copying training dataset
2023-06-23 11:03:45,732:INFO:Defining folds
2023-06-23 11:03:45,732:INFO:Declaring metric variables
2023-06-23 11:03:45,737:INFO:Importing untrained model
2023-06-23 11:03:45,741:INFO:Random Forest Classifier Imported successfully
2023-06-23 11:03:45,750:INFO:Starting cross validation
2023-06-23 11:03:45,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:47,720:INFO:Calculating mean and std
2023-06-23 11:03:47,721:INFO:Creating metrics dataframe
2023-06-23 11:03:47,889:INFO:Uploading results into container
2023-06-23 11:03:47,891:INFO:Uploading model into container now
2023-06-23 11:03:47,891:INFO:_master_model_container: 22
2023-06-23 11:03:47,892:INFO:_display_container: 3
2023-06-23 11:03:47,892:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4853, verbose=0, warm_start=False)
2023-06-23 11:03:47,892:INFO:create_model() successfully completed......................................
2023-06-23 11:03:48,038:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:48,038:INFO:Creating metrics dataframe
2023-06-23 11:03:48,050:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 11:03:48,050:INFO:Total runtime is 0.25311599969863896 minutes
2023-06-23 11:03:48,053:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:48,054:INFO:Initializing create_model()
2023-06-23 11:03:48,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:48,054:INFO:Checking exceptions
2023-06-23 11:03:48,054:INFO:Importing libraries
2023-06-23 11:03:48,054:INFO:Copying training dataset
2023-06-23 11:03:48,058:INFO:Defining folds
2023-06-23 11:03:48,059:INFO:Declaring metric variables
2023-06-23 11:03:48,066:INFO:Importing untrained model
2023-06-23 11:03:48,070:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 11:03:48,080:INFO:Starting cross validation
2023-06-23 11:03:48,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:49,709:INFO:Calculating mean and std
2023-06-23 11:03:49,710:INFO:Creating metrics dataframe
2023-06-23 11:03:49,879:INFO:Uploading results into container
2023-06-23 11:03:49,880:INFO:Uploading model into container now
2023-06-23 11:03:49,881:INFO:_master_model_container: 23
2023-06-23 11:03:49,881:INFO:_display_container: 3
2023-06-23 11:03:49,881:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 11:03:49,882:INFO:create_model() successfully completed......................................
2023-06-23 11:03:50,021:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:50,021:INFO:Creating metrics dataframe
2023-06-23 11:03:50,032:INFO:Initializing Ada Boost Classifier
2023-06-23 11:03:50,032:INFO:Total runtime is 0.28615336020787563 minutes
2023-06-23 11:03:50,035:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:50,036:INFO:Initializing create_model()
2023-06-23 11:03:50,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:50,037:INFO:Checking exceptions
2023-06-23 11:03:50,037:INFO:Importing libraries
2023-06-23 11:03:50,037:INFO:Copying training dataset
2023-06-23 11:03:50,041:INFO:Defining folds
2023-06-23 11:03:50,042:INFO:Declaring metric variables
2023-06-23 11:03:50,046:INFO:Importing untrained model
2023-06-23 11:03:50,051:INFO:Ada Boost Classifier Imported successfully
2023-06-23 11:03:50,059:INFO:Starting cross validation
2023-06-23 11:03:50,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:51,927:INFO:Calculating mean and std
2023-06-23 11:03:51,928:INFO:Creating metrics dataframe
2023-06-23 11:03:52,091:INFO:Uploading results into container
2023-06-23 11:03:52,092:INFO:Uploading model into container now
2023-06-23 11:03:52,092:INFO:_master_model_container: 24
2023-06-23 11:03:52,092:INFO:_display_container: 3
2023-06-23 11:03:52,092:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4853)
2023-06-23 11:03:52,092:INFO:create_model() successfully completed......................................
2023-06-23 11:03:52,230:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:52,231:INFO:Creating metrics dataframe
2023-06-23 11:03:52,243:INFO:Initializing Gradient Boosting Classifier
2023-06-23 11:03:52,244:INFO:Total runtime is 0.323026982943217 minutes
2023-06-23 11:03:52,249:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:52,249:INFO:Initializing create_model()
2023-06-23 11:03:52,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:52,249:INFO:Checking exceptions
2023-06-23 11:03:52,249:INFO:Importing libraries
2023-06-23 11:03:52,249:INFO:Copying training dataset
2023-06-23 11:03:52,253:INFO:Defining folds
2023-06-23 11:03:52,253:INFO:Declaring metric variables
2023-06-23 11:03:52,258:INFO:Importing untrained model
2023-06-23 11:03:52,262:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 11:03:52,272:INFO:Starting cross validation
2023-06-23 11:03:52,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:54,252:INFO:Calculating mean and std
2023-06-23 11:03:54,253:INFO:Creating metrics dataframe
2023-06-23 11:03:54,418:INFO:Uploading results into container
2023-06-23 11:03:54,418:INFO:Uploading model into container now
2023-06-23 11:03:54,419:INFO:_master_model_container: 25
2023-06-23 11:03:54,419:INFO:_display_container: 3
2023-06-23 11:03:54,419:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4853, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 11:03:54,420:INFO:create_model() successfully completed......................................
2023-06-23 11:03:54,566:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:54,567:INFO:Creating metrics dataframe
2023-06-23 11:03:54,578:INFO:Initializing Linear Discriminant Analysis
2023-06-23 11:03:54,578:INFO:Total runtime is 0.36192733049392706 minutes
2023-06-23 11:03:54,583:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:54,583:INFO:Initializing create_model()
2023-06-23 11:03:54,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:54,584:INFO:Checking exceptions
2023-06-23 11:03:54,584:INFO:Importing libraries
2023-06-23 11:03:54,584:INFO:Copying training dataset
2023-06-23 11:03:54,588:INFO:Defining folds
2023-06-23 11:03:54,588:INFO:Declaring metric variables
2023-06-23 11:03:54,592:INFO:Importing untrained model
2023-06-23 11:03:54,598:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:03:54,605:INFO:Starting cross validation
2023-06-23 11:03:54,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:56,290:INFO:Calculating mean and std
2023-06-23 11:03:56,291:INFO:Creating metrics dataframe
2023-06-23 11:03:56,458:INFO:Uploading results into container
2023-06-23 11:03:56,459:INFO:Uploading model into container now
2023-06-23 11:03:56,460:INFO:_master_model_container: 26
2023-06-23 11:03:56,460:INFO:_display_container: 3
2023-06-23 11:03:56,461:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:03:56,461:INFO:create_model() successfully completed......................................
2023-06-23 11:03:56,607:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:56,607:INFO:Creating metrics dataframe
2023-06-23 11:03:56,620:INFO:Initializing Extra Trees Classifier
2023-06-23 11:03:56,620:INFO:Total runtime is 0.3959487120310466 minutes
2023-06-23 11:03:56,624:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:56,624:INFO:Initializing create_model()
2023-06-23 11:03:56,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:56,624:INFO:Checking exceptions
2023-06-23 11:03:56,624:INFO:Importing libraries
2023-06-23 11:03:56,624:INFO:Copying training dataset
2023-06-23 11:03:56,628:INFO:Defining folds
2023-06-23 11:03:56,629:INFO:Declaring metric variables
2023-06-23 11:03:56,635:INFO:Importing untrained model
2023-06-23 11:03:56,639:INFO:Extra Trees Classifier Imported successfully
2023-06-23 11:03:56,648:INFO:Starting cross validation
2023-06-23 11:03:56,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:03:58,655:INFO:Calculating mean and std
2023-06-23 11:03:58,656:INFO:Creating metrics dataframe
2023-06-23 11:03:58,822:INFO:Uploading results into container
2023-06-23 11:03:58,823:INFO:Uploading model into container now
2023-06-23 11:03:58,824:INFO:_master_model_container: 27
2023-06-23 11:03:58,824:INFO:_display_container: 3
2023-06-23 11:03:58,825:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4853, verbose=0, warm_start=False)
2023-06-23 11:03:58,825:INFO:create_model() successfully completed......................................
2023-06-23 11:03:58,966:INFO:SubProcess create_model() end ==================================
2023-06-23 11:03:58,966:INFO:Creating metrics dataframe
2023-06-23 11:03:58,978:INFO:Initializing Extreme Gradient Boosting
2023-06-23 11:03:58,978:INFO:Total runtime is 0.43526020447413133 minutes
2023-06-23 11:03:58,983:INFO:SubProcess create_model() called ==================================
2023-06-23 11:03:58,984:INFO:Initializing create_model()
2023-06-23 11:03:58,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:03:58,984:INFO:Checking exceptions
2023-06-23 11:03:58,984:INFO:Importing libraries
2023-06-23 11:03:58,984:INFO:Copying training dataset
2023-06-23 11:03:58,988:INFO:Defining folds
2023-06-23 11:03:58,989:INFO:Declaring metric variables
2023-06-23 11:03:58,992:INFO:Importing untrained model
2023-06-23 11:03:58,998:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:03:59,007:INFO:Starting cross validation
2023-06-23 11:03:59,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:04:00,736:INFO:Calculating mean and std
2023-06-23 11:04:00,737:INFO:Creating metrics dataframe
2023-06-23 11:04:00,908:INFO:Uploading results into container
2023-06-23 11:04:00,909:INFO:Uploading model into container now
2023-06-23 11:04:00,910:INFO:_master_model_container: 28
2023-06-23 11:04:00,910:INFO:_display_container: 3
2023-06-23 11:04:00,910:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 11:04:00,911:INFO:create_model() successfully completed......................................
2023-06-23 11:04:01,057:INFO:SubProcess create_model() end ==================================
2023-06-23 11:04:01,058:INFO:Creating metrics dataframe
2023-06-23 11:04:01,073:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 11:04:01,073:INFO:Total runtime is 0.4701719641685487 minutes
2023-06-23 11:04:01,077:INFO:SubProcess create_model() called ==================================
2023-06-23 11:04:01,077:INFO:Initializing create_model()
2023-06-23 11:04:01,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:04:01,078:INFO:Checking exceptions
2023-06-23 11:04:01,078:INFO:Importing libraries
2023-06-23 11:04:01,078:INFO:Copying training dataset
2023-06-23 11:04:01,083:INFO:Defining folds
2023-06-23 11:04:01,083:INFO:Declaring metric variables
2023-06-23 11:04:01,087:INFO:Importing untrained model
2023-06-23 11:04:01,092:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 11:04:01,099:INFO:Starting cross validation
2023-06-23 11:04:01,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:04:02,956:INFO:Calculating mean and std
2023-06-23 11:04:02,957:INFO:Creating metrics dataframe
2023-06-23 11:04:03,127:INFO:Uploading results into container
2023-06-23 11:04:03,128:INFO:Uploading model into container now
2023-06-23 11:04:03,131:INFO:_master_model_container: 29
2023-06-23 11:04:03,131:INFO:_display_container: 3
2023-06-23 11:04:03,133:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4853, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 11:04:03,133:INFO:create_model() successfully completed......................................
2023-06-23 11:04:03,273:INFO:SubProcess create_model() end ==================================
2023-06-23 11:04:03,273:INFO:Creating metrics dataframe
2023-06-23 11:04:03,286:INFO:Initializing Dummy Classifier
2023-06-23 11:04:03,287:INFO:Total runtime is 0.5070469776789348 minutes
2023-06-23 11:04:03,290:INFO:SubProcess create_model() called ==================================
2023-06-23 11:04:03,291:INFO:Initializing create_model()
2023-06-23 11:04:03,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD2169BB50>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:04:03,291:INFO:Checking exceptions
2023-06-23 11:04:03,291:INFO:Importing libraries
2023-06-23 11:04:03,291:INFO:Copying training dataset
2023-06-23 11:04:03,295:INFO:Defining folds
2023-06-23 11:04:03,296:INFO:Declaring metric variables
2023-06-23 11:04:03,301:INFO:Importing untrained model
2023-06-23 11:04:03,306:INFO:Dummy Classifier Imported successfully
2023-06-23 11:04:03,313:INFO:Starting cross validation
2023-06-23 11:04:03,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:04:03,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:03,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:03,569:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:03,578:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,064:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,085:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,137:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:04,605:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:04:05,446:INFO:Calculating mean and std
2023-06-23 11:04:05,448:INFO:Creating metrics dataframe
2023-06-23 11:04:05,614:INFO:Uploading results into container
2023-06-23 11:04:05,615:INFO:Uploading model into container now
2023-06-23 11:04:05,616:INFO:_master_model_container: 30
2023-06-23 11:04:05,617:INFO:_display_container: 3
2023-06-23 11:04:05,617:INFO:DummyClassifier(constant=None, random_state=4853, strategy='prior')
2023-06-23 11:04:05,617:INFO:create_model() successfully completed......................................
2023-06-23 11:04:05,762:INFO:SubProcess create_model() end ==================================
2023-06-23 11:04:05,762:INFO:Creating metrics dataframe
2023-06-23 11:04:05,788:INFO:Initializing create_model()
2023-06-23 11:04:05,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:04:05,789:INFO:Checking exceptions
2023-06-23 11:04:05,791:INFO:Importing libraries
2023-06-23 11:04:05,791:INFO:Copying training dataset
2023-06-23 11:04:05,794:INFO:Defining folds
2023-06-23 11:04:05,794:INFO:Declaring metric variables
2023-06-23 11:04:05,794:INFO:Importing untrained model
2023-06-23 11:04:05,794:INFO:Declaring custom model
2023-06-23 11:04:05,795:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:04:05,795:INFO:Cross validation set to False
2023-06-23 11:04:05,795:INFO:Fitting Model
2023-06-23 11:04:06,016:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:04:06,016:INFO:create_model() successfully completed......................................
2023-06-23 11:04:06,193:INFO:_master_model_container: 30
2023-06-23 11:04:06,193:INFO:_display_container: 3
2023-06-23 11:04:06,194:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:04:06,194:INFO:compare_models() successfully completed......................................
2023-06-23 11:04:11,949:INFO:Initializing create_model()
2023-06-23 11:04:11,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:04:11,950:INFO:Checking exceptions
2023-06-23 11:04:11,965:INFO:Importing libraries
2023-06-23 11:04:11,965:INFO:Copying training dataset
2023-06-23 11:04:11,970:INFO:Defining folds
2023-06-23 11:04:11,970:INFO:Declaring metric variables
2023-06-23 11:04:11,974:INFO:Importing untrained model
2023-06-23 11:04:11,978:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:04:11,986:INFO:Starting cross validation
2023-06-23 11:04:11,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:04:13,836:INFO:Calculating mean and std
2023-06-23 11:04:13,837:INFO:Creating metrics dataframe
2023-06-23 11:04:13,842:INFO:Finalizing model
2023-06-23 11:04:14,091:INFO:Uploading results into container
2023-06-23 11:04:14,092:INFO:Uploading model into container now
2023-06-23 11:04:14,103:INFO:_master_model_container: 31
2023-06-23 11:04:14,104:INFO:_display_container: 4
2023-06-23 11:04:14,104:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:04:14,104:INFO:create_model() successfully completed......................................
2023-06-23 11:04:14,281:INFO:Initializing predict_model()
2023-06-23 11:04:14,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD24586E30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD15ECEB00>)
2023-06-23 11:04:14,281:INFO:Checking exceptions
2023-06-23 11:04:14,281:INFO:Preloading libraries
2023-06-23 11:04:14,283:INFO:Set up data.
2023-06-23 11:04:14,287:INFO:Set up index.
2023-06-23 15:19:24,690:INFO:PyCaret ClassificationExperiment
2023-06-23 15:19:24,690:INFO:Logging name: clf-default-name
2023-06-23 15:19:24,690:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 15:19:24,690:INFO:version 3.0.2
2023-06-23 15:19:24,690:INFO:Initializing setup()
2023-06-23 15:19:24,691:INFO:self.USI: 86b6
2023-06-23 15:19:24,691:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-23 15:19:24,691:INFO:Checking environment
2023-06-23 15:19:24,691:INFO:python_version: 3.10.5
2023-06-23 15:19:24,691:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-23 15:19:24,691:INFO:machine: AMD64
2023-06-23 15:19:24,691:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 15:19:24,698:INFO:Memory: svmem(total=17130000384, available=8476729344, percent=50.5, used=8653271040, free=8476729344)
2023-06-23 15:19:24,698:INFO:Physical Core: 4
2023-06-23 15:19:24,698:INFO:Logical Core: 4
2023-06-23 15:19:24,698:INFO:Checking libraries
2023-06-23 15:19:24,698:INFO:System:
2023-06-23 15:19:24,699:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-23 15:19:24,699:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-23 15:19:24,699:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 15:19:24,699:INFO:PyCaret required dependencies:
2023-06-23 15:19:24,699:INFO:                 pip: 23.0.1
2023-06-23 15:19:24,700:INFO:          setuptools: 58.1.0
2023-06-23 15:19:24,700:INFO:             pycaret: 3.0.2
2023-06-23 15:19:24,700:INFO:             IPython: 8.9.0
2023-06-23 15:19:24,700:INFO:          ipywidgets: 8.0.6
2023-06-23 15:19:24,700:INFO:                tqdm: 4.65.0
2023-06-23 15:19:24,700:INFO:               numpy: 1.23.5
2023-06-23 15:19:24,700:INFO:              pandas: 1.5.3
2023-06-23 15:19:24,700:INFO:              jinja2: 3.1.2
2023-06-23 15:19:24,700:INFO:               scipy: 1.10.1
2023-06-23 15:19:24,700:INFO:              joblib: 1.2.0
2023-06-23 15:19:24,700:INFO:             sklearn: 1.2.2
2023-06-23 15:19:24,700:INFO:                pyod: 1.0.9
2023-06-23 15:19:24,700:INFO:            imblearn: 0.10.1
2023-06-23 15:19:24,700:INFO:   category_encoders: 2.6.1
2023-06-23 15:19:24,700:INFO:            lightgbm: 3.3.5
2023-06-23 15:19:24,700:INFO:               numba: 0.57.0
2023-06-23 15:19:24,701:INFO:            requests: 2.28.2
2023-06-23 15:19:24,701:INFO:          matplotlib: 3.7.1
2023-06-23 15:19:24,701:INFO:          scikitplot: 0.3.7
2023-06-23 15:19:24,701:INFO:         yellowbrick: 1.5
2023-06-23 15:19:24,701:INFO:              plotly: 5.15.0
2023-06-23 15:19:24,701:INFO:             kaleido: 0.2.1
2023-06-23 15:19:24,701:INFO:         statsmodels: 0.14.0
2023-06-23 15:19:24,701:INFO:              sktime: 0.17.0
2023-06-23 15:19:24,701:INFO:               tbats: 1.1.3
2023-06-23 15:19:24,701:INFO:            pmdarima: 2.0.3
2023-06-23 15:19:24,701:INFO:              psutil: 5.9.4
2023-06-23 15:19:24,702:INFO:PyCaret optional dependencies:
2023-06-23 15:19:24,702:INFO:                shap: Not installed
2023-06-23 15:19:24,702:INFO:           interpret: 0.4.2
2023-06-23 15:19:24,702:INFO:                umap: Not installed
2023-06-23 15:19:24,702:INFO:    pandas_profiling: Not installed
2023-06-23 15:19:24,702:INFO:  explainerdashboard: Not installed
2023-06-23 15:19:24,702:INFO:             autoviz: Not installed
2023-06-23 15:19:24,702:INFO:           fairlearn: Not installed
2023-06-23 15:19:24,702:INFO:             xgboost: 1.7.5
2023-06-23 15:19:24,702:INFO:            catboost: Not installed
2023-06-23 15:19:24,702:INFO:              kmodes: Not installed
2023-06-23 15:19:24,703:INFO:             mlxtend: Not installed
2023-06-23 15:19:24,703:INFO:       statsforecast: Not installed
2023-06-23 15:19:24,703:INFO:        tune_sklearn: Not installed
2023-06-23 15:19:24,703:INFO:                 ray: Not installed
2023-06-23 15:19:24,703:INFO:            hyperopt: 0.2.7
2023-06-23 15:19:24,703:INFO:              optuna: Not installed
2023-06-23 15:19:24,703:INFO:               skopt: Not installed
2023-06-23 15:19:24,703:INFO:              mlflow: Not installed
2023-06-23 15:19:24,703:INFO:              gradio: Not installed
2023-06-23 15:19:24,703:INFO:             fastapi: Not installed
2023-06-23 15:19:24,703:INFO:             uvicorn: Not installed
2023-06-23 15:19:24,703:INFO:              m2cgen: Not installed
2023-06-23 15:19:24,703:INFO:           evidently: Not installed
2023-06-23 15:19:24,704:INFO:               fugue: Not installed
2023-06-23 15:19:24,704:INFO:           streamlit: Not installed
2023-06-23 15:19:24,704:INFO:             prophet: 1.1.4
2023-06-23 15:19:24,704:INFO:None
2023-06-23 15:19:24,704:INFO:Set up data.
2023-06-23 15:19:24,714:INFO:Set up train/test split.
2023-06-23 15:19:24,720:INFO:Set up index.
2023-06-23 15:19:24,721:INFO:Set up folding strategy.
2023-06-23 15:19:24,721:INFO:Assigning column types.
2023-06-23 15:19:24,724:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 15:19:24,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:19:24,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:19:24,813:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:24,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:24,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:19:24,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:19:24,892:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:24,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:24,896:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 15:19:24,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:19:24,971:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:24,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,021:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:19:25,056:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:25,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,059:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 15:19:25,133:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:25,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,211:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:25,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,217:INFO:Preparing preprocessing pipeline...
2023-06-23 15:19:25,218:INFO:Set up label encoding.
2023-06-23 15:19:25,218:INFO:Set up simple imputation.
2023-06-23 15:19:25,218:INFO:Set up column name cleaning.
2023-06-23 15:19:25,295:INFO:Finished creating preprocessing pipeline.
2023-06-23 15:19:25,301:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 15:19:25,301:INFO:Creating final display dataframe.
2023-06-23 15:19:25,470:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          2474
1                        Target                    day5_label
2                   Target type                    Multiclass
3                Target mapping  buy: 0, maintain: 1, sell: 2
4           Original data shape                      (981, 8)
5        Transformed data shape                      (981, 8)
6   Transformed train set shape                      (686, 8)
7    Transformed test set shape                      (295, 8)
8              Numeric features                             7
9                    Preprocess                          True
10              Imputation type                        simple
11           Numeric imputation                          mean
12       Categorical imputation                          mode
13               Fold Generator               StratifiedKFold
14                  Fold Number                            10
15                     CPU Jobs                            -1
16                      Use GPU                         False
17               Log Experiment                         False
18              Experiment Name              clf-default-name
19                          USI                          86b6
2023-06-23 15:19:25,580:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:25,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,654:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:19:25,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:19:25,658:INFO:setup() successfully completed in 1.15s...............
2023-06-23 15:19:28,390:INFO:Initializing compare_models()
2023-06-23 15:19:28,391:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 15:19:28,391:INFO:Checking exceptions
2023-06-23 15:19:28,396:INFO:Preparing display monitor
2023-06-23 15:19:28,427:INFO:Initializing Logistic Regression
2023-06-23 15:19:28,428:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-06-23 15:19:28,433:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:28,434:INFO:Initializing create_model()
2023-06-23 15:19:28,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:28,434:INFO:Checking exceptions
2023-06-23 15:19:28,434:INFO:Importing libraries
2023-06-23 15:19:28,434:INFO:Copying training dataset
2023-06-23 15:19:28,439:INFO:Defining folds
2023-06-23 15:19:28,439:INFO:Declaring metric variables
2023-06-23 15:19:28,444:INFO:Importing untrained model
2023-06-23 15:19:28,449:INFO:Logistic Regression Imported successfully
2023-06-23 15:19:28,457:INFO:Starting cross validation
2023-06-23 15:19:28,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:35,698:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,698:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,702:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,702:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:35,702:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,274:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,304:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,306:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,307:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,311:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,319:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,339:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,703:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,705:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:36,727:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:37,553:INFO:Calculating mean and std
2023-06-23 15:19:37,554:INFO:Creating metrics dataframe
2023-06-23 15:19:37,748:INFO:Uploading results into container
2023-06-23 15:19:37,749:INFO:Uploading model into container now
2023-06-23 15:19:37,750:INFO:_master_model_container: 1
2023-06-23 15:19:37,750:INFO:_display_container: 2
2023-06-23 15:19:37,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2474, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 15:19:37,751:INFO:create_model() successfully completed......................................
2023-06-23 15:19:38,146:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:38,146:INFO:Creating metrics dataframe
2023-06-23 15:19:38,157:INFO:Initializing K Neighbors Classifier
2023-06-23 15:19:38,157:INFO:Total runtime is 0.16215978463490804 minutes
2023-06-23 15:19:38,163:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:38,164:INFO:Initializing create_model()
2023-06-23 15:19:38,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:38,164:INFO:Checking exceptions
2023-06-23 15:19:38,164:INFO:Importing libraries
2023-06-23 15:19:38,164:INFO:Copying training dataset
2023-06-23 15:19:38,174:INFO:Defining folds
2023-06-23 15:19:38,174:INFO:Declaring metric variables
2023-06-23 15:19:38,180:INFO:Importing untrained model
2023-06-23 15:19:38,184:INFO:K Neighbors Classifier Imported successfully
2023-06-23 15:19:38,194:INFO:Starting cross validation
2023-06-23 15:19:38,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:38,373:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,375:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,380:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,383:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,412:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,415:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,422:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,425:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,871:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,874:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,881:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,896:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,899:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:38,902:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,014:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,017:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,406:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,419:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,421:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:39,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:40,336:INFO:Calculating mean and std
2023-06-23 15:19:40,337:INFO:Creating metrics dataframe
2023-06-23 15:19:40,520:INFO:Uploading results into container
2023-06-23 15:19:40,521:INFO:Uploading model into container now
2023-06-23 15:19:40,522:INFO:_master_model_container: 2
2023-06-23 15:19:40,522:INFO:_display_container: 2
2023-06-23 15:19:40,522:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 15:19:40,523:INFO:create_model() successfully completed......................................
2023-06-23 15:19:40,740:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:40,740:INFO:Creating metrics dataframe
2023-06-23 15:19:40,750:INFO:Initializing Naive Bayes
2023-06-23 15:19:40,750:INFO:Total runtime is 0.20538668632507323 minutes
2023-06-23 15:19:40,753:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:40,754:INFO:Initializing create_model()
2023-06-23 15:19:40,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:40,754:INFO:Checking exceptions
2023-06-23 15:19:40,754:INFO:Importing libraries
2023-06-23 15:19:40,754:INFO:Copying training dataset
2023-06-23 15:19:40,759:INFO:Defining folds
2023-06-23 15:19:40,759:INFO:Declaring metric variables
2023-06-23 15:19:40,763:INFO:Importing untrained model
2023-06-23 15:19:40,766:INFO:Naive Bayes Imported successfully
2023-06-23 15:19:40,773:INFO:Starting cross validation
2023-06-23 15:19:40,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:41,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,033:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,034:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,035:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,036:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,037:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,050:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,053:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,055:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,131:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,144:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,155:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,549:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,555:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,557:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,560:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,562:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,569:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,614:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,616:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,920:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,922:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,949:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,951:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:41,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:42,936:INFO:Calculating mean and std
2023-06-23 15:19:42,937:INFO:Creating metrics dataframe
2023-06-23 15:19:43,115:INFO:Uploading results into container
2023-06-23 15:19:43,116:INFO:Uploading model into container now
2023-06-23 15:19:43,117:INFO:_master_model_container: 3
2023-06-23 15:19:43,117:INFO:_display_container: 2
2023-06-23 15:19:43,117:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 15:19:43,117:INFO:create_model() successfully completed......................................
2023-06-23 15:19:43,292:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:43,292:INFO:Creating metrics dataframe
2023-06-23 15:19:43,304:INFO:Initializing Decision Tree Classifier
2023-06-23 15:19:43,304:INFO:Total runtime is 0.24795488516489664 minutes
2023-06-23 15:19:43,307:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:43,307:INFO:Initializing create_model()
2023-06-23 15:19:43,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:43,309:INFO:Checking exceptions
2023-06-23 15:19:43,309:INFO:Importing libraries
2023-06-23 15:19:43,309:INFO:Copying training dataset
2023-06-23 15:19:43,314:INFO:Defining folds
2023-06-23 15:19:43,314:INFO:Declaring metric variables
2023-06-23 15:19:43,318:INFO:Importing untrained model
2023-06-23 15:19:43,321:INFO:Decision Tree Classifier Imported successfully
2023-06-23 15:19:43,331:INFO:Starting cross validation
2023-06-23 15:19:43,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:43,523:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,526:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,552:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,554:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,556:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,573:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:43,576:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,072:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,073:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,077:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,090:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,205:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,233:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,571:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,573:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:44,573:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:45,534:INFO:Calculating mean and std
2023-06-23 15:19:45,535:INFO:Creating metrics dataframe
2023-06-23 15:19:45,727:INFO:Uploading results into container
2023-06-23 15:19:45,729:INFO:Uploading model into container now
2023-06-23 15:19:45,729:INFO:_master_model_container: 4
2023-06-23 15:19:45,730:INFO:_display_container: 2
2023-06-23 15:19:45,731:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2474, splitter='best')
2023-06-23 15:19:45,731:INFO:create_model() successfully completed......................................
2023-06-23 15:19:45,975:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:45,976:INFO:Creating metrics dataframe
2023-06-23 15:19:45,986:INFO:Initializing SVM - Linear Kernel
2023-06-23 15:19:45,987:INFO:Total runtime is 0.29266722599665324 minutes
2023-06-23 15:19:45,992:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:45,993:INFO:Initializing create_model()
2023-06-23 15:19:45,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:45,993:INFO:Checking exceptions
2023-06-23 15:19:45,993:INFO:Importing libraries
2023-06-23 15:19:45,994:INFO:Copying training dataset
2023-06-23 15:19:45,999:INFO:Defining folds
2023-06-23 15:19:45,999:INFO:Declaring metric variables
2023-06-23 15:19:46,004:INFO:Importing untrained model
2023-06-23 15:19:46,013:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 15:19:46,022:INFO:Starting cross validation
2023-06-23 15:19:46,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:46,198:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,200:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,203:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,203:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,234:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,238:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,238:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,239:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,240:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,241:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,655:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,659:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,662:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,668:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,669:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,679:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,682:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,716:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,727:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,736:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:46,737:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,739:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:46,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,086:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:47,087:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,102:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:19:47,103:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,105:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,107:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:47,922:INFO:Calculating mean and std
2023-06-23 15:19:47,923:INFO:Creating metrics dataframe
2023-06-23 15:19:48,101:INFO:Uploading results into container
2023-06-23 15:19:48,102:INFO:Uploading model into container now
2023-06-23 15:19:48,103:INFO:_master_model_container: 5
2023-06-23 15:19:48,103:INFO:_display_container: 2
2023-06-23 15:19:48,104:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2474, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 15:19:48,104:INFO:create_model() successfully completed......................................
2023-06-23 15:19:48,260:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:48,260:INFO:Creating metrics dataframe
2023-06-23 15:19:48,271:INFO:Initializing Ridge Classifier
2023-06-23 15:19:48,271:INFO:Total runtime is 0.33073055346806846 minutes
2023-06-23 15:19:48,277:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:48,277:INFO:Initializing create_model()
2023-06-23 15:19:48,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:48,278:INFO:Checking exceptions
2023-06-23 15:19:48,278:INFO:Importing libraries
2023-06-23 15:19:48,278:INFO:Copying training dataset
2023-06-23 15:19:48,282:INFO:Defining folds
2023-06-23 15:19:48,282:INFO:Declaring metric variables
2023-06-23 15:19:48,287:INFO:Importing untrained model
2023-06-23 15:19:48,292:INFO:Ridge Classifier Imported successfully
2023-06-23 15:19:48,301:INFO:Starting cross validation
2023-06-23 15:19:48,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:48,434:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,434:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,443:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,444:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,447:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,447:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,449:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,449:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,450:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,456:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,471:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,473:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,477:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,796:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,798:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,799:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,800:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,800:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,802:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,855:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,856:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,859:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,861:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:48,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,911:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:48,913:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,135:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:49,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,138:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,140:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,204:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:19:49,204:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,206:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:49,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:50,061:INFO:Calculating mean and std
2023-06-23 15:19:50,062:INFO:Creating metrics dataframe
2023-06-23 15:19:50,246:INFO:Uploading results into container
2023-06-23 15:19:50,247:INFO:Uploading model into container now
2023-06-23 15:19:50,247:INFO:_master_model_container: 6
2023-06-23 15:19:50,247:INFO:_display_container: 2
2023-06-23 15:19:50,247:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2474, solver='auto',
                tol=0.0001)
2023-06-23 15:19:50,247:INFO:create_model() successfully completed......................................
2023-06-23 15:19:50,395:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:50,395:INFO:Creating metrics dataframe
2023-06-23 15:19:50,406:INFO:Initializing Random Forest Classifier
2023-06-23 15:19:50,407:INFO:Total runtime is 0.3663305362065633 minutes
2023-06-23 15:19:50,414:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:50,414:INFO:Initializing create_model()
2023-06-23 15:19:50,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:50,415:INFO:Checking exceptions
2023-06-23 15:19:50,415:INFO:Importing libraries
2023-06-23 15:19:50,415:INFO:Copying training dataset
2023-06-23 15:19:50,420:INFO:Defining folds
2023-06-23 15:19:50,420:INFO:Declaring metric variables
2023-06-23 15:19:50,423:INFO:Importing untrained model
2023-06-23 15:19:50,429:INFO:Random Forest Classifier Imported successfully
2023-06-23 15:19:50,436:INFO:Starting cross validation
2023-06-23 15:19:50,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:51,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,160:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,162:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,162:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,176:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,179:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,181:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,512:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:51,516:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,190:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,196:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,319:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,321:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,433:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:52,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,171:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,173:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,175:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,354:INFO:Calculating mean and std
2023-06-23 15:19:53,355:INFO:Creating metrics dataframe
2023-06-23 15:19:53,544:INFO:Uploading results into container
2023-06-23 15:19:53,545:INFO:Uploading model into container now
2023-06-23 15:19:53,545:INFO:_master_model_container: 7
2023-06-23 15:19:53,546:INFO:_display_container: 2
2023-06-23 15:19:53,546:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2474, verbose=0, warm_start=False)
2023-06-23 15:19:53,547:INFO:create_model() successfully completed......................................
2023-06-23 15:19:53,693:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:53,693:INFO:Creating metrics dataframe
2023-06-23 15:19:53,709:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 15:19:53,710:INFO:Total runtime is 0.4213853041330973 minutes
2023-06-23 15:19:53,713:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:53,714:INFO:Initializing create_model()
2023-06-23 15:19:53,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:53,714:INFO:Checking exceptions
2023-06-23 15:19:53,714:INFO:Importing libraries
2023-06-23 15:19:53,714:INFO:Copying training dataset
2023-06-23 15:19:53,719:INFO:Defining folds
2023-06-23 15:19:53,719:INFO:Declaring metric variables
2023-06-23 15:19:53,722:INFO:Importing untrained model
2023-06-23 15:19:53,728:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 15:19:53,737:INFO:Starting cross validation
2023-06-23 15:19:53,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:53,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,912:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,913:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,914:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,916:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,992:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,995:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:53,997:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,293:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,295:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,330:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,332:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,334:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,352:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,354:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,687:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,689:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,690:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,695:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,697:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:54,699:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:55,752:INFO:Calculating mean and std
2023-06-23 15:19:55,753:INFO:Creating metrics dataframe
2023-06-23 15:19:55,949:INFO:Uploading results into container
2023-06-23 15:19:55,950:INFO:Uploading model into container now
2023-06-23 15:19:55,950:INFO:_master_model_container: 8
2023-06-23 15:19:55,950:INFO:_display_container: 2
2023-06-23 15:19:55,950:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 15:19:55,951:INFO:create_model() successfully completed......................................
2023-06-23 15:19:56,108:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:56,109:INFO:Creating metrics dataframe
2023-06-23 15:19:56,122:INFO:Initializing Ada Boost Classifier
2023-06-23 15:19:56,122:INFO:Total runtime is 0.46157737970352175 minutes
2023-06-23 15:19:56,127:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:56,128:INFO:Initializing create_model()
2023-06-23 15:19:56,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:56,128:INFO:Checking exceptions
2023-06-23 15:19:56,129:INFO:Importing libraries
2023-06-23 15:19:56,129:INFO:Copying training dataset
2023-06-23 15:19:56,133:INFO:Defining folds
2023-06-23 15:19:56,133:INFO:Declaring metric variables
2023-06-23 15:19:56,138:INFO:Importing untrained model
2023-06-23 15:19:56,151:INFO:Ada Boost Classifier Imported successfully
2023-06-23 15:19:56,171:INFO:Starting cross validation
2023-06-23 15:19:56,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:19:56,663:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,666:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,668:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,676:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,678:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,680:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,683:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,685:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,687:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,694:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,696:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:56,699:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,413:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,415:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,417:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,425:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,428:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,521:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,614:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,616:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:57,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,078:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,079:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,098:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,100:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,102:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:19:58,611:INFO:Calculating mean and std
2023-06-23 15:19:58,613:INFO:Creating metrics dataframe
2023-06-23 15:19:58,811:INFO:Uploading results into container
2023-06-23 15:19:58,812:INFO:Uploading model into container now
2023-06-23 15:19:58,813:INFO:_master_model_container: 9
2023-06-23 15:19:58,813:INFO:_display_container: 2
2023-06-23 15:19:58,814:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2474)
2023-06-23 15:19:58,814:INFO:create_model() successfully completed......................................
2023-06-23 15:19:58,961:INFO:SubProcess create_model() end ==================================
2023-06-23 15:19:58,961:INFO:Creating metrics dataframe
2023-06-23 15:19:58,977:INFO:Initializing Gradient Boosting Classifier
2023-06-23 15:19:58,977:INFO:Total runtime is 0.5091663360595703 minutes
2023-06-23 15:19:58,981:INFO:SubProcess create_model() called ==================================
2023-06-23 15:19:58,981:INFO:Initializing create_model()
2023-06-23 15:19:58,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:19:58,981:INFO:Checking exceptions
2023-06-23 15:19:58,982:INFO:Importing libraries
2023-06-23 15:19:58,982:INFO:Copying training dataset
2023-06-23 15:19:58,986:INFO:Defining folds
2023-06-23 15:19:58,986:INFO:Declaring metric variables
2023-06-23 15:19:58,994:INFO:Importing untrained model
2023-06-23 15:19:58,999:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 15:19:59,007:INFO:Starting cross validation
2023-06-23 15:19:59,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:00,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,477:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,564:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,566:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,568:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,588:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,596:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,600:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:00,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,352:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,354:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,450:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,452:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,468:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:02,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:03,999:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,001:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,003:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,045:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,048:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,049:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,206:INFO:Calculating mean and std
2023-06-23 15:20:04,208:INFO:Creating metrics dataframe
2023-06-23 15:20:04,413:INFO:Uploading results into container
2023-06-23 15:20:04,414:INFO:Uploading model into container now
2023-06-23 15:20:04,414:INFO:_master_model_container: 10
2023-06-23 15:20:04,414:INFO:_display_container: 2
2023-06-23 15:20:04,415:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2474, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 15:20:04,415:INFO:create_model() successfully completed......................................
2023-06-23 15:20:04,569:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:04,570:INFO:Creating metrics dataframe
2023-06-23 15:20:04,583:INFO:Initializing Linear Discriminant Analysis
2023-06-23 15:20:04,583:INFO:Total runtime is 0.6025952140490214 minutes
2023-06-23 15:20:04,587:INFO:SubProcess create_model() called ==================================
2023-06-23 15:20:04,587:INFO:Initializing create_model()
2023-06-23 15:20:04,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:04,587:INFO:Checking exceptions
2023-06-23 15:20:04,588:INFO:Importing libraries
2023-06-23 15:20:04,588:INFO:Copying training dataset
2023-06-23 15:20:04,593:INFO:Defining folds
2023-06-23 15:20:04,594:INFO:Declaring metric variables
2023-06-23 15:20:04,602:INFO:Importing untrained model
2023-06-23 15:20:04,605:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:20:04,616:INFO:Starting cross validation
2023-06-23 15:20:04,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:04,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,812:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,813:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,814:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,815:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,818:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,861:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,863:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:04,866:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,249:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,250:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,252:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,293:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,295:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,307:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,310:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,362:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,370:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,665:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,670:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:05,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:06,703:INFO:Calculating mean and std
2023-06-23 15:20:06,704:INFO:Creating metrics dataframe
2023-06-23 15:20:06,909:INFO:Uploading results into container
2023-06-23 15:20:06,910:INFO:Uploading model into container now
2023-06-23 15:20:06,910:INFO:_master_model_container: 11
2023-06-23 15:20:06,910:INFO:_display_container: 2
2023-06-23 15:20:06,910:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:20:06,911:INFO:create_model() successfully completed......................................
2023-06-23 15:20:07,064:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:07,065:INFO:Creating metrics dataframe
2023-06-23 15:20:07,080:INFO:Initializing Extra Trees Classifier
2023-06-23 15:20:07,080:INFO:Total runtime is 0.6442095239957174 minutes
2023-06-23 15:20:07,084:INFO:SubProcess create_model() called ==================================
2023-06-23 15:20:07,085:INFO:Initializing create_model()
2023-06-23 15:20:07,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:07,085:INFO:Checking exceptions
2023-06-23 15:20:07,085:INFO:Importing libraries
2023-06-23 15:20:07,085:INFO:Copying training dataset
2023-06-23 15:20:07,089:INFO:Defining folds
2023-06-23 15:20:07,089:INFO:Declaring metric variables
2023-06-23 15:20:07,096:INFO:Importing untrained model
2023-06-23 15:20:07,101:INFO:Extra Trees Classifier Imported successfully
2023-06-23 15:20:07,110:INFO:Starting cross validation
2023-06-23 15:20:07,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:07,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,842:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,892:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:07,895:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,071:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,074:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,077:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,960:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:08,964:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,006:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,011:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,169:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,171:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,174:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,375:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,379:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,886:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,888:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:09,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:10,299:INFO:Calculating mean and std
2023-06-23 15:20:10,300:INFO:Creating metrics dataframe
2023-06-23 15:20:10,521:INFO:Uploading results into container
2023-06-23 15:20:10,522:INFO:Uploading model into container now
2023-06-23 15:20:10,522:INFO:_master_model_container: 12
2023-06-23 15:20:10,523:INFO:_display_container: 2
2023-06-23 15:20:10,524:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2474, verbose=0, warm_start=False)
2023-06-23 15:20:10,524:INFO:create_model() successfully completed......................................
2023-06-23 15:20:10,672:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:10,673:INFO:Creating metrics dataframe
2023-06-23 15:20:10,686:INFO:Initializing Extreme Gradient Boosting
2023-06-23 15:20:10,686:INFO:Total runtime is 0.7043108026186625 minutes
2023-06-23 15:20:10,689:INFO:SubProcess create_model() called ==================================
2023-06-23 15:20:10,691:INFO:Initializing create_model()
2023-06-23 15:20:10,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:10,691:INFO:Checking exceptions
2023-06-23 15:20:10,691:INFO:Importing libraries
2023-06-23 15:20:10,691:INFO:Copying training dataset
2023-06-23 15:20:10,697:INFO:Defining folds
2023-06-23 15:20:10,697:INFO:Declaring metric variables
2023-06-23 15:20:10,701:INFO:Importing untrained model
2023-06-23 15:20:10,708:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 15:20:10,716:INFO:Starting cross validation
2023-06-23 15:20:10,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:11,726:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,730:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,737:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,739:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,797:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,808:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:11,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,588:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,645:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,649:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,669:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,671:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,680:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,683:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:12,684:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,366:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,368:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,369:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,379:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:13,381:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:14,078:INFO:Calculating mean and std
2023-06-23 15:20:14,079:INFO:Creating metrics dataframe
2023-06-23 15:20:14,315:INFO:Uploading results into container
2023-06-23 15:20:14,315:INFO:Uploading model into container now
2023-06-23 15:20:14,316:INFO:_master_model_container: 13
2023-06-23 15:20:14,316:INFO:_display_container: 2
2023-06-23 15:20:14,317:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 15:20:14,317:INFO:create_model() successfully completed......................................
2023-06-23 15:20:14,467:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:14,467:INFO:Creating metrics dataframe
2023-06-23 15:20:14,480:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 15:20:14,480:INFO:Total runtime is 0.7675577322642009 minutes
2023-06-23 15:20:14,484:INFO:SubProcess create_model() called ==================================
2023-06-23 15:20:14,484:INFO:Initializing create_model()
2023-06-23 15:20:14,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:14,486:INFO:Checking exceptions
2023-06-23 15:20:14,486:INFO:Importing libraries
2023-06-23 15:20:14,486:INFO:Copying training dataset
2023-06-23 15:20:14,490:INFO:Defining folds
2023-06-23 15:20:14,490:INFO:Declaring metric variables
2023-06-23 15:20:14,495:INFO:Importing untrained model
2023-06-23 15:20:14,499:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 15:20:14,510:INFO:Starting cross validation
2023-06-23 15:20:14,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:16,131:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,133:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,134:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,135:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,138:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,143:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,148:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,150:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,227:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,229:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:16,231:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,145:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,148:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,185:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,187:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,190:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,202:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,204:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,208:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,211:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,914:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,916:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,918:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,986:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,988:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:17,991:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:18,646:INFO:Calculating mean and std
2023-06-23 15:20:18,647:INFO:Creating metrics dataframe
2023-06-23 15:20:18,896:INFO:Uploading results into container
2023-06-23 15:20:18,897:INFO:Uploading model into container now
2023-06-23 15:20:18,897:INFO:_master_model_container: 14
2023-06-23 15:20:18,897:INFO:_display_container: 2
2023-06-23 15:20:18,897:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2474, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 15:20:18,898:INFO:create_model() successfully completed......................................
2023-06-23 15:20:19,050:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:19,050:INFO:Creating metrics dataframe
2023-06-23 15:20:19,066:INFO:Initializing Dummy Classifier
2023-06-23 15:20:19,067:INFO:Total runtime is 0.8440036733945211 minutes
2023-06-23 15:20:19,070:INFO:SubProcess create_model() called ==================================
2023-06-23 15:20:19,070:INFO:Initializing create_model()
2023-06-23 15:20:19,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD249AF2B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:19,070:INFO:Checking exceptions
2023-06-23 15:20:19,071:INFO:Importing libraries
2023-06-23 15:20:19,071:INFO:Copying training dataset
2023-06-23 15:20:19,077:INFO:Defining folds
2023-06-23 15:20:19,077:INFO:Declaring metric variables
2023-06-23 15:20:19,080:INFO:Importing untrained model
2023-06-23 15:20:19,086:INFO:Dummy Classifier Imported successfully
2023-06-23 15:20:19,095:INFO:Starting cross validation
2023-06-23 15:20:19,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:20:19,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,246:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,247:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,250:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,254:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,256:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,275:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,285:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,286:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,287:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,301:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,303:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,304:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,738:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,742:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,760:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,761:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,800:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,816:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,820:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:19,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:19,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,247:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,249:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,250:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:20,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:20,290:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:20:20,291:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:20:21,489:INFO:Calculating mean and std
2023-06-23 15:20:21,491:INFO:Creating metrics dataframe
2023-06-23 15:20:21,734:INFO:Uploading results into container
2023-06-23 15:20:21,735:INFO:Uploading model into container now
2023-06-23 15:20:21,737:INFO:_master_model_container: 15
2023-06-23 15:20:21,737:INFO:_display_container: 2
2023-06-23 15:20:21,737:INFO:DummyClassifier(constant=None, random_state=2474, strategy='prior')
2023-06-23 15:20:21,737:INFO:create_model() successfully completed......................................
2023-06-23 15:20:21,892:INFO:SubProcess create_model() end ==================================
2023-06-23 15:20:21,893:INFO:Creating metrics dataframe
2023-06-23 15:20:21,936:INFO:Initializing create_model()
2023-06-23 15:20:21,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:20:21,937:INFO:Checking exceptions
2023-06-23 15:20:21,938:INFO:Importing libraries
2023-06-23 15:20:21,939:INFO:Copying training dataset
2023-06-23 15:20:21,944:INFO:Defining folds
2023-06-23 15:20:21,945:INFO:Declaring metric variables
2023-06-23 15:20:21,945:INFO:Importing untrained model
2023-06-23 15:20:21,945:INFO:Declaring custom model
2023-06-23 15:20:21,945:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:20:21,946:INFO:Cross validation set to False
2023-06-23 15:20:21,946:INFO:Fitting Model
2023-06-23 15:20:22,236:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:20:22,236:INFO:create_model() successfully completed......................................
2023-06-23 15:20:22,423:INFO:_master_model_container: 15
2023-06-23 15:20:22,423:INFO:_display_container: 2
2023-06-23 15:20:22,424:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:20:22,425:INFO:compare_models() successfully completed......................................
2023-06-23 15:20:22,426:INFO:Initializing evaluate_model()
2023-06-23 15:20:22,426:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 15:20:22,434:INFO:Initializing plot_model()
2023-06-23 15:20:22,435:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, system=True)
2023-06-23 15:20:22,435:INFO:Checking exceptions
2023-06-23 15:20:22,437:INFO:Preloading libraries
2023-06-23 15:20:22,437:INFO:Copying training dataset
2023-06-23 15:20:22,437:INFO:Plot type: pipeline
2023-06-23 15:20:22,586:INFO:Visual Rendered Successfully
2023-06-23 15:20:22,734:INFO:plot_model() successfully completed......................................
2023-06-23 15:37:50,081:INFO:Initializing compare_models()
2023-06-23 15:37:50,082:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 15:37:50,082:INFO:Checking exceptions
2023-06-23 15:37:50,084:INFO:Preparing display monitor
2023-06-23 15:37:50,106:INFO:Initializing Logistic Regression
2023-06-23 15:37:50,106:INFO:Total runtime is 0.0 minutes
2023-06-23 15:37:50,110:INFO:SubProcess create_model() called ==================================
2023-06-23 15:37:50,110:INFO:Initializing create_model()
2023-06-23 15:37:50,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:37:50,111:INFO:Checking exceptions
2023-06-23 15:37:50,111:INFO:Importing libraries
2023-06-23 15:37:50,111:INFO:Copying training dataset
2023-06-23 15:37:50,115:INFO:Defining folds
2023-06-23 15:37:50,115:INFO:Declaring metric variables
2023-06-23 15:37:50,120:INFO:Importing untrained model
2023-06-23 15:37:50,124:INFO:Logistic Regression Imported successfully
2023-06-23 15:37:50,134:INFO:Starting cross validation
2023-06-23 15:37:50,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:37:55,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,114:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,116:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,138:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,140:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,183:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,185:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,187:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,223:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,230:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,233:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,935:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,939:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:55,948:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,033:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,037:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,045:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,049:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,069:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,638:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,642:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,645:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,668:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,671:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:56,673:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,068:INFO:Calculating mean and std
2023-06-23 15:37:58,070:INFO:Creating metrics dataframe
2023-06-23 15:37:58,366:INFO:Uploading results into container
2023-06-23 15:37:58,366:INFO:Uploading model into container now
2023-06-23 15:37:58,367:INFO:_master_model_container: 16
2023-06-23 15:37:58,367:INFO:_display_container: 3
2023-06-23 15:37:58,367:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2474, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 15:37:58,368:INFO:create_model() successfully completed......................................
2023-06-23 15:37:58,556:INFO:SubProcess create_model() end ==================================
2023-06-23 15:37:58,556:INFO:Creating metrics dataframe
2023-06-23 15:37:58,566:INFO:Initializing K Neighbors Classifier
2023-06-23 15:37:58,567:INFO:Total runtime is 0.14101522763570148 minutes
2023-06-23 15:37:58,570:INFO:SubProcess create_model() called ==================================
2023-06-23 15:37:58,570:INFO:Initializing create_model()
2023-06-23 15:37:58,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:37:58,571:INFO:Checking exceptions
2023-06-23 15:37:58,571:INFO:Importing libraries
2023-06-23 15:37:58,571:INFO:Copying training dataset
2023-06-23 15:37:58,577:INFO:Defining folds
2023-06-23 15:37:58,577:INFO:Declaring metric variables
2023-06-23 15:37:58,582:INFO:Importing untrained model
2023-06-23 15:37:58,586:INFO:K Neighbors Classifier Imported successfully
2023-06-23 15:37:58,598:INFO:Starting cross validation
2023-06-23 15:37:58,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:37:58,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,850:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,851:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,853:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,853:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:58,855:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,071:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,080:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,486:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,488:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,505:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,506:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,511:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:37:59,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,005:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,206:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,211:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,222:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:00,226:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:01,793:INFO:Calculating mean and std
2023-06-23 15:38:01,794:INFO:Creating metrics dataframe
2023-06-23 15:38:02,047:INFO:Uploading results into container
2023-06-23 15:38:02,048:INFO:Uploading model into container now
2023-06-23 15:38:02,048:INFO:_master_model_container: 17
2023-06-23 15:38:02,049:INFO:_display_container: 3
2023-06-23 15:38:02,049:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 15:38:02,049:INFO:create_model() successfully completed......................................
2023-06-23 15:38:02,203:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:02,203:INFO:Creating metrics dataframe
2023-06-23 15:38:02,217:INFO:Initializing Naive Bayes
2023-06-23 15:38:02,217:INFO:Total runtime is 0.20186242659886677 minutes
2023-06-23 15:38:02,221:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:02,222:INFO:Initializing create_model()
2023-06-23 15:38:02,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:02,222:INFO:Checking exceptions
2023-06-23 15:38:02,222:INFO:Importing libraries
2023-06-23 15:38:02,222:INFO:Copying training dataset
2023-06-23 15:38:02,228:INFO:Defining folds
2023-06-23 15:38:02,229:INFO:Declaring metric variables
2023-06-23 15:38:02,233:INFO:Importing untrained model
2023-06-23 15:38:02,237:INFO:Naive Bayes Imported successfully
2023-06-23 15:38:02,245:INFO:Starting cross validation
2023-06-23 15:38:02,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:02,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,406:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,411:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,423:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,426:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,428:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,445:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,447:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,449:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,450:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,451:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:02,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,106:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,110:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,127:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,130:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,133:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,148:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,150:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,152:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,253:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,256:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,600:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,609:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,611:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,627:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,632:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:03,636:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,227:INFO:Calculating mean and std
2023-06-23 15:38:05,228:INFO:Creating metrics dataframe
2023-06-23 15:38:05,466:INFO:Uploading results into container
2023-06-23 15:38:05,467:INFO:Uploading model into container now
2023-06-23 15:38:05,467:INFO:_master_model_container: 18
2023-06-23 15:38:05,467:INFO:_display_container: 3
2023-06-23 15:38:05,468:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 15:38:05,468:INFO:create_model() successfully completed......................................
2023-06-23 15:38:05,617:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:05,617:INFO:Creating metrics dataframe
2023-06-23 15:38:05,628:INFO:Initializing Decision Tree Classifier
2023-06-23 15:38:05,629:INFO:Total runtime is 0.25872379541397095 minutes
2023-06-23 15:38:05,633:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:05,634:INFO:Initializing create_model()
2023-06-23 15:38:05,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:05,634:INFO:Checking exceptions
2023-06-23 15:38:05,634:INFO:Importing libraries
2023-06-23 15:38:05,634:INFO:Copying training dataset
2023-06-23 15:38:05,638:INFO:Defining folds
2023-06-23 15:38:05,638:INFO:Declaring metric variables
2023-06-23 15:38:05,645:INFO:Importing untrained model
2023-06-23 15:38:05,649:INFO:Decision Tree Classifier Imported successfully
2023-06-23 15:38:05,656:INFO:Starting cross validation
2023-06-23 15:38:05,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:05,812:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,814:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,816:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,823:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,823:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,887:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,888:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:05,890:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,299:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,301:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,304:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,309:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,311:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,314:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,314:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,318:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,420:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,764:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,789:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:06,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,113:INFO:Calculating mean and std
2023-06-23 15:38:08,114:INFO:Creating metrics dataframe
2023-06-23 15:38:08,361:INFO:Uploading results into container
2023-06-23 15:38:08,362:INFO:Uploading model into container now
2023-06-23 15:38:08,363:INFO:_master_model_container: 19
2023-06-23 15:38:08,363:INFO:_display_container: 3
2023-06-23 15:38:08,364:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2474, splitter='best')
2023-06-23 15:38:08,364:INFO:create_model() successfully completed......................................
2023-06-23 15:38:08,514:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:08,514:INFO:Creating metrics dataframe
2023-06-23 15:38:08,525:INFO:Initializing SVM - Linear Kernel
2023-06-23 15:38:08,525:INFO:Total runtime is 0.3069935401280721 minutes
2023-06-23 15:38:08,529:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:08,530:INFO:Initializing create_model()
2023-06-23 15:38:08,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:08,530:INFO:Checking exceptions
2023-06-23 15:38:08,530:INFO:Importing libraries
2023-06-23 15:38:08,530:INFO:Copying training dataset
2023-06-23 15:38:08,535:INFO:Defining folds
2023-06-23 15:38:08,536:INFO:Declaring metric variables
2023-06-23 15:38:08,539:INFO:Importing untrained model
2023-06-23 15:38:08,545:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 15:38:08,554:INFO:Starting cross validation
2023-06-23 15:38:08,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:08,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:08,716:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,716:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:08,718:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,720:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:08,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,724:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,729:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:08,969:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,972:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:08,976:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,219:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,221:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,235:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,237:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,239:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,314:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,316:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,604:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,666:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,669:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,671:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,712:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:38:09,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:09,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,064:INFO:Calculating mean and std
2023-06-23 15:38:11,065:INFO:Creating metrics dataframe
2023-06-23 15:38:11,310:INFO:Uploading results into container
2023-06-23 15:38:11,312:INFO:Uploading model into container now
2023-06-23 15:38:11,313:INFO:_master_model_container: 20
2023-06-23 15:38:11,313:INFO:_display_container: 3
2023-06-23 15:38:11,313:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2474, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 15:38:11,314:INFO:create_model() successfully completed......................................
2023-06-23 15:38:11,475:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:11,475:INFO:Creating metrics dataframe
2023-06-23 15:38:11,485:INFO:Initializing Ridge Classifier
2023-06-23 15:38:11,486:INFO:Total runtime is 0.35633813142776494 minutes
2023-06-23 15:38:11,490:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:11,491:INFO:Initializing create_model()
2023-06-23 15:38:11,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:11,492:INFO:Checking exceptions
2023-06-23 15:38:11,492:INFO:Importing libraries
2023-06-23 15:38:11,492:INFO:Copying training dataset
2023-06-23 15:38:11,496:INFO:Defining folds
2023-06-23 15:38:11,496:INFO:Declaring metric variables
2023-06-23 15:38:11,500:INFO:Importing untrained model
2023-06-23 15:38:11,504:INFO:Ridge Classifier Imported successfully
2023-06-23 15:38:11,514:INFO:Starting cross validation
2023-06-23 15:38:11,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:11,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:11,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,747:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:11,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,752:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,764:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:11,765:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,777:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:11,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,781:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:11,785:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,245:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,247:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,249:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,295:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,296:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,298:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,301:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,361:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,362:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,364:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,846:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,852:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:38:12,853:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:12,856:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,152:INFO:Calculating mean and std
2023-06-23 15:38:14,153:INFO:Creating metrics dataframe
2023-06-23 15:38:14,391:INFO:Uploading results into container
2023-06-23 15:38:14,392:INFO:Uploading model into container now
2023-06-23 15:38:14,393:INFO:_master_model_container: 21
2023-06-23 15:38:14,393:INFO:_display_container: 3
2023-06-23 15:38:14,393:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2474, solver='auto',
                tol=0.0001)
2023-06-23 15:38:14,394:INFO:create_model() successfully completed......................................
2023-06-23 15:38:14,548:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:14,548:INFO:Creating metrics dataframe
2023-06-23 15:38:14,560:INFO:Initializing Random Forest Classifier
2023-06-23 15:38:14,560:INFO:Total runtime is 0.40756702820460006 minutes
2023-06-23 15:38:14,580:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:14,580:INFO:Initializing create_model()
2023-06-23 15:38:14,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:14,580:INFO:Checking exceptions
2023-06-23 15:38:14,580:INFO:Importing libraries
2023-06-23 15:38:14,580:INFO:Copying training dataset
2023-06-23 15:38:14,585:INFO:Defining folds
2023-06-23 15:38:14,585:INFO:Declaring metric variables
2023-06-23 15:38:14,591:INFO:Importing untrained model
2023-06-23 15:38:14,596:INFO:Random Forest Classifier Imported successfully
2023-06-23 15:38:14,603:INFO:Starting cross validation
2023-06-23 15:38:14,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:14,951:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,953:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,955:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,966:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,971:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,978:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,980:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:14,982:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,093:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,095:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,101:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,685:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,687:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,689:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,689:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,692:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,696:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,698:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:15,701:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,095:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,099:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,494:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,496:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:16,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:17,545:INFO:Calculating mean and std
2023-06-23 15:38:17,547:INFO:Creating metrics dataframe
2023-06-23 15:38:17,819:INFO:Uploading results into container
2023-06-23 15:38:17,820:INFO:Uploading model into container now
2023-06-23 15:38:17,820:INFO:_master_model_container: 22
2023-06-23 15:38:17,820:INFO:_display_container: 3
2023-06-23 15:38:17,821:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2474, verbose=0, warm_start=False)
2023-06-23 15:38:17,821:INFO:create_model() successfully completed......................................
2023-06-23 15:38:17,992:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:17,992:INFO:Creating metrics dataframe
2023-06-23 15:38:18,004:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 15:38:18,005:INFO:Total runtime is 0.4649901350339254 minutes
2023-06-23 15:38:18,011:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:18,011:INFO:Initializing create_model()
2023-06-23 15:38:18,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:18,012:INFO:Checking exceptions
2023-06-23 15:38:18,012:INFO:Importing libraries
2023-06-23 15:38:18,012:INFO:Copying training dataset
2023-06-23 15:38:18,016:INFO:Defining folds
2023-06-23 15:38:18,017:INFO:Declaring metric variables
2023-06-23 15:38:18,021:INFO:Importing untrained model
2023-06-23 15:38:18,028:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 15:38:18,038:INFO:Starting cross validation
2023-06-23 15:38:18,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:18,206:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,211:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,235:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,237:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,240:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,262:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,266:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,744:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,745:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,747:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,797:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:18,799:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,197:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,198:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:19,203:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:20,660:INFO:Calculating mean and std
2023-06-23 15:38:20,661:INFO:Creating metrics dataframe
2023-06-23 15:38:20,915:INFO:Uploading results into container
2023-06-23 15:38:20,916:INFO:Uploading model into container now
2023-06-23 15:38:20,917:INFO:_master_model_container: 23
2023-06-23 15:38:20,917:INFO:_display_container: 3
2023-06-23 15:38:20,917:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 15:38:20,918:INFO:create_model() successfully completed......................................
2023-06-23 15:38:21,080:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:21,081:INFO:Creating metrics dataframe
2023-06-23 15:38:21,095:INFO:Initializing Ada Boost Classifier
2023-06-23 15:38:21,095:INFO:Total runtime is 0.5164852062861125 minutes
2023-06-23 15:38:21,098:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:21,099:INFO:Initializing create_model()
2023-06-23 15:38:21,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:21,099:INFO:Checking exceptions
2023-06-23 15:38:21,099:INFO:Importing libraries
2023-06-23 15:38:21,099:INFO:Copying training dataset
2023-06-23 15:38:21,104:INFO:Defining folds
2023-06-23 15:38:21,105:INFO:Declaring metric variables
2023-06-23 15:38:21,112:INFO:Importing untrained model
2023-06-23 15:38:21,116:INFO:Ada Boost Classifier Imported successfully
2023-06-23 15:38:21,126:INFO:Starting cross validation
2023-06-23 15:38:21,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:21,433:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,436:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,436:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,438:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,449:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,453:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,461:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,481:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,483:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:21,485:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,029:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,047:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,052:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,052:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,054:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,056:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,167:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,169:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,174:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:22,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:23,906:INFO:Calculating mean and std
2023-06-23 15:38:23,907:INFO:Creating metrics dataframe
2023-06-23 15:38:24,226:INFO:Uploading results into container
2023-06-23 15:38:24,226:INFO:Uploading model into container now
2023-06-23 15:38:24,227:INFO:_master_model_container: 24
2023-06-23 15:38:24,228:INFO:_display_container: 3
2023-06-23 15:38:24,228:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2474)
2023-06-23 15:38:24,228:INFO:create_model() successfully completed......................................
2023-06-23 15:38:24,386:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:24,386:INFO:Creating metrics dataframe
2023-06-23 15:38:24,403:INFO:Initializing Gradient Boosting Classifier
2023-06-23 15:38:24,404:INFO:Total runtime is 0.571640940507253 minutes
2023-06-23 15:38:24,411:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:24,411:INFO:Initializing create_model()
2023-06-23 15:38:24,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:24,412:INFO:Checking exceptions
2023-06-23 15:38:24,412:INFO:Importing libraries
2023-06-23 15:38:24,412:INFO:Copying training dataset
2023-06-23 15:38:24,417:INFO:Defining folds
2023-06-23 15:38:24,418:INFO:Declaring metric variables
2023-06-23 15:38:24,427:INFO:Importing untrained model
2023-06-23 15:38:24,431:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 15:38:24,441:INFO:Starting cross validation
2023-06-23 15:38:24,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:25,032:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,034:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,036:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,064:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,070:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,085:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,196:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,253:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:25,255:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,036:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,038:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,063:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,065:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,075:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,155:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,159:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,162:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,277:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,281:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,286:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,997:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:26,999:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:27,000:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:27,001:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:27,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:27,003:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:27,846:INFO:Calculating mean and std
2023-06-23 15:38:27,847:INFO:Creating metrics dataframe
2023-06-23 15:38:28,084:INFO:Uploading results into container
2023-06-23 15:38:28,085:INFO:Uploading model into container now
2023-06-23 15:38:28,085:INFO:_master_model_container: 25
2023-06-23 15:38:28,085:INFO:_display_container: 3
2023-06-23 15:38:28,086:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2474, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 15:38:28,086:INFO:create_model() successfully completed......................................
2023-06-23 15:38:28,241:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:28,242:INFO:Creating metrics dataframe
2023-06-23 15:38:28,255:INFO:Initializing Linear Discriminant Analysis
2023-06-23 15:38:28,255:INFO:Total runtime is 0.635826575756073 minutes
2023-06-23 15:38:28,260:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:28,261:INFO:Initializing create_model()
2023-06-23 15:38:28,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:28,261:INFO:Checking exceptions
2023-06-23 15:38:28,261:INFO:Importing libraries
2023-06-23 15:38:28,262:INFO:Copying training dataset
2023-06-23 15:38:28,266:INFO:Defining folds
2023-06-23 15:38:28,266:INFO:Declaring metric variables
2023-06-23 15:38:28,269:INFO:Importing untrained model
2023-06-23 15:38:28,275:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:38:28,285:INFO:Starting cross validation
2023-06-23 15:38:28,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:28,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,461:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,461:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,465:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,504:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,509:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,511:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,513:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,515:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,984:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,986:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:28,988:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,013:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,045:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,047:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,049:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,059:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,062:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,065:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,450:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,452:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,496:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:29,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:30,837:INFO:Calculating mean and std
2023-06-23 15:38:30,838:INFO:Creating metrics dataframe
2023-06-23 15:38:31,103:INFO:Uploading results into container
2023-06-23 15:38:31,103:INFO:Uploading model into container now
2023-06-23 15:38:31,111:INFO:_master_model_container: 26
2023-06-23 15:38:31,111:INFO:_display_container: 3
2023-06-23 15:38:31,111:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:38:31,112:INFO:create_model() successfully completed......................................
2023-06-23 15:38:31,270:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:31,270:INFO:Creating metrics dataframe
2023-06-23 15:38:31,284:INFO:Initializing Extra Trees Classifier
2023-06-23 15:38:31,284:INFO:Total runtime is 0.6863043824831645 minutes
2023-06-23 15:38:31,289:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:31,290:INFO:Initializing create_model()
2023-06-23 15:38:31,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:31,290:INFO:Checking exceptions
2023-06-23 15:38:31,290:INFO:Importing libraries
2023-06-23 15:38:31,290:INFO:Copying training dataset
2023-06-23 15:38:31,294:INFO:Defining folds
2023-06-23 15:38:31,295:INFO:Declaring metric variables
2023-06-23 15:38:31,299:INFO:Importing untrained model
2023-06-23 15:38:31,304:INFO:Extra Trees Classifier Imported successfully
2023-06-23 15:38:31,313:INFO:Starting cross validation
2023-06-23 15:38:31,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:31,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,772:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,843:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,845:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:31,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,495:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,497:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,499:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,550:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,684:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,693:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,695:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:32,756:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,234:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,237:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,260:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:33,262:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,059:INFO:Calculating mean and std
2023-06-23 15:38:34,060:INFO:Creating metrics dataframe
2023-06-23 15:38:34,301:INFO:Uploading results into container
2023-06-23 15:38:34,302:INFO:Uploading model into container now
2023-06-23 15:38:34,303:INFO:_master_model_container: 27
2023-06-23 15:38:34,303:INFO:_display_container: 3
2023-06-23 15:38:34,303:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2474, verbose=0, warm_start=False)
2023-06-23 15:38:34,304:INFO:create_model() successfully completed......................................
2023-06-23 15:38:34,458:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:34,458:INFO:Creating metrics dataframe
2023-06-23 15:38:34,470:INFO:Initializing Extreme Gradient Boosting
2023-06-23 15:38:34,470:INFO:Total runtime is 0.7394123792648316 minutes
2023-06-23 15:38:34,474:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:34,475:INFO:Initializing create_model()
2023-06-23 15:38:34,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:34,475:INFO:Checking exceptions
2023-06-23 15:38:34,475:INFO:Importing libraries
2023-06-23 15:38:34,475:INFO:Copying training dataset
2023-06-23 15:38:34,480:INFO:Defining folds
2023-06-23 15:38:34,481:INFO:Declaring metric variables
2023-06-23 15:38:34,485:INFO:Importing untrained model
2023-06-23 15:38:34,492:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 15:38:34,500:INFO:Starting cross validation
2023-06-23 15:38:34,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:34,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,757:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,772:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,895:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,898:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:34,900:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,260:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,264:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,285:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,287:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,289:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,300:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,302:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,304:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,455:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,759:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:35,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:37,133:INFO:Calculating mean and std
2023-06-23 15:38:37,134:INFO:Creating metrics dataframe
2023-06-23 15:38:37,407:INFO:Uploading results into container
2023-06-23 15:38:37,409:INFO:Uploading model into container now
2023-06-23 15:38:37,410:INFO:_master_model_container: 28
2023-06-23 15:38:37,410:INFO:_display_container: 3
2023-06-23 15:38:37,411:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 15:38:37,411:INFO:create_model() successfully completed......................................
2023-06-23 15:38:37,570:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:37,571:INFO:Creating metrics dataframe
2023-06-23 15:38:37,586:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 15:38:37,586:INFO:Total runtime is 0.7913312117258708 minutes
2023-06-23 15:38:37,592:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:37,593:INFO:Initializing create_model()
2023-06-23 15:38:37,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:37,593:INFO:Checking exceptions
2023-06-23 15:38:37,593:INFO:Importing libraries
2023-06-23 15:38:37,594:INFO:Copying training dataset
2023-06-23 15:38:37,598:INFO:Defining folds
2023-06-23 15:38:37,599:INFO:Declaring metric variables
2023-06-23 15:38:37,605:INFO:Importing untrained model
2023-06-23 15:38:37,612:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 15:38:37,621:INFO:Starting cross validation
2023-06-23 15:38:37,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:38,761:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,774:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,777:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,801:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,802:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,816:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,821:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,846:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,846:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,848:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:38,850:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,401:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,443:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,445:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,448:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,460:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,462:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,933:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,935:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,949:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,951:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:39,953:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,072:INFO:Calculating mean and std
2023-06-23 15:38:41,073:INFO:Creating metrics dataframe
2023-06-23 15:38:41,325:INFO:Uploading results into container
2023-06-23 15:38:41,326:INFO:Uploading model into container now
2023-06-23 15:38:41,326:INFO:_master_model_container: 29
2023-06-23 15:38:41,326:INFO:_display_container: 3
2023-06-23 15:38:41,327:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2474, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 15:38:41,327:INFO:create_model() successfully completed......................................
2023-06-23 15:38:41,478:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:41,478:INFO:Creating metrics dataframe
2023-06-23 15:38:41,492:INFO:Initializing Dummy Classifier
2023-06-23 15:38:41,492:INFO:Total runtime is 0.8564441045125326 minutes
2023-06-23 15:38:41,496:INFO:SubProcess create_model() called ==================================
2023-06-23 15:38:41,497:INFO:Initializing create_model()
2023-06-23 15:38:41,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD23C7FF70>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:41,497:INFO:Checking exceptions
2023-06-23 15:38:41,497:INFO:Importing libraries
2023-06-23 15:38:41,497:INFO:Copying training dataset
2023-06-23 15:38:41,501:INFO:Defining folds
2023-06-23 15:38:41,502:INFO:Declaring metric variables
2023-06-23 15:38:41,506:INFO:Importing untrained model
2023-06-23 15:38:41,510:INFO:Dummy Classifier Imported successfully
2023-06-23 15:38:41,518:INFO:Starting cross validation
2023-06-23 15:38:41,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:38:41,674:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,676:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,677:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:41,678:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,682:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,685:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:41,687:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,695:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,697:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,699:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:41,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,724:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,726:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:41,727:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:41,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,107:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,109:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,110:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,111:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,153:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,154:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,156:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,160:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,163:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,249:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,259:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,260:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,262:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,607:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,609:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,611:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,612:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,643:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,645:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:42,646:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:38:42,647:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:38:43,938:INFO:Calculating mean and std
2023-06-23 15:38:43,940:INFO:Creating metrics dataframe
2023-06-23 15:38:44,175:INFO:Uploading results into container
2023-06-23 15:38:44,176:INFO:Uploading model into container now
2023-06-23 15:38:44,176:INFO:_master_model_container: 30
2023-06-23 15:38:44,176:INFO:_display_container: 3
2023-06-23 15:38:44,176:INFO:DummyClassifier(constant=None, random_state=2474, strategy='prior')
2023-06-23 15:38:44,176:INFO:create_model() successfully completed......................................
2023-06-23 15:38:44,329:INFO:SubProcess create_model() end ==================================
2023-06-23 15:38:44,329:INFO:Creating metrics dataframe
2023-06-23 15:38:44,354:INFO:Initializing create_model()
2023-06-23 15:38:44,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:38:44,355:INFO:Checking exceptions
2023-06-23 15:38:44,357:INFO:Importing libraries
2023-06-23 15:38:44,357:INFO:Copying training dataset
2023-06-23 15:38:44,362:INFO:Defining folds
2023-06-23 15:38:44,363:INFO:Declaring metric variables
2023-06-23 15:38:44,363:INFO:Importing untrained model
2023-06-23 15:38:44,363:INFO:Declaring custom model
2023-06-23 15:38:44,363:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:38:44,364:INFO:Cross validation set to False
2023-06-23 15:38:44,364:INFO:Fitting Model
2023-06-23 15:38:44,657:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:38:44,657:INFO:create_model() successfully completed......................................
2023-06-23 15:38:44,841:INFO:_master_model_container: 30
2023-06-23 15:38:44,842:INFO:_display_container: 3
2023-06-23 15:38:44,842:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:38:44,842:INFO:compare_models() successfully completed......................................
2023-06-23 15:40:10,467:INFO:Initializing create_model()
2023-06-23 15:40:10,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:40:10,468:INFO:Checking exceptions
2023-06-23 15:40:10,483:INFO:Importing libraries
2023-06-23 15:40:10,484:INFO:Copying training dataset
2023-06-23 15:40:10,489:INFO:Defining folds
2023-06-23 15:40:10,489:INFO:Declaring metric variables
2023-06-23 15:40:10,495:INFO:Importing untrained model
2023-06-23 15:40:10,499:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:40:10,509:INFO:Starting cross validation
2023-06-23 15:40:10,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:40:10,691:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,692:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,694:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,706:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,724:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,726:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:10,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,257:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,259:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,259:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,344:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,346:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,348:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,833:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,887:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:11,891:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:40:13,341:INFO:Calculating mean and std
2023-06-23 15:40:13,342:INFO:Creating metrics dataframe
2023-06-23 15:40:13,348:INFO:Finalizing model
2023-06-23 15:40:13,790:INFO:Uploading results into container
2023-06-23 15:40:13,791:INFO:Uploading model into container now
2023-06-23 15:40:13,807:INFO:_master_model_container: 31
2023-06-23 15:40:13,807:INFO:_display_container: 4
2023-06-23 15:40:13,807:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:40:13,807:INFO:create_model() successfully completed......................................
2023-06-23 15:40:14,007:INFO:Initializing predict_model()
2023-06-23 15:40:14,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD21908700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD24831870>)
2023-06-23 15:40:14,007:INFO:Checking exceptions
2023-06-23 15:40:14,007:INFO:Preloading libraries
2023-06-23 15:40:14,009:INFO:Set up data.
2023-06-23 15:40:14,012:INFO:Set up index.
2023-06-23 15:46:18,689:INFO:PyCaret ClassificationExperiment
2023-06-23 15:46:18,689:INFO:Logging name: clf-default-name
2023-06-23 15:46:18,689:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 15:46:18,689:INFO:version 3.0.2
2023-06-23 15:46:18,690:INFO:Initializing setup()
2023-06-23 15:46:18,690:INFO:self.USI: ec14
2023-06-23 15:46:18,690:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'html_param', 'X_train', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'y_test', 'memory', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'y', 'exp_name_log', 'idx', 'logging_param', 'seed', 'fold_generator', 'n_jobs_param', 'exp_id', 'X', 'fix_imbalance', 'data', 'X_test', 'is_multiclass', 'pipeline'}
2023-06-23 15:46:18,690:INFO:Checking environment
2023-06-23 15:46:18,690:INFO:python_version: 3.10.5
2023-06-23 15:46:18,690:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-23 15:46:18,690:INFO:machine: AMD64
2023-06-23 15:46:18,690:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 15:46:18,695:INFO:Memory: svmem(total=17130000384, available=8649043968, percent=49.5, used=8480956416, free=8649043968)
2023-06-23 15:46:18,695:INFO:Physical Core: 4
2023-06-23 15:46:18,695:INFO:Logical Core: 4
2023-06-23 15:46:18,695:INFO:Checking libraries
2023-06-23 15:46:18,695:INFO:System:
2023-06-23 15:46:18,695:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-23 15:46:18,695:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-23 15:46:18,695:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 15:46:18,695:INFO:PyCaret required dependencies:
2023-06-23 15:46:18,695:INFO:                 pip: 23.0.1
2023-06-23 15:46:18,695:INFO:          setuptools: 58.1.0
2023-06-23 15:46:18,696:INFO:             pycaret: 3.0.2
2023-06-23 15:46:18,696:INFO:             IPython: 8.9.0
2023-06-23 15:46:18,696:INFO:          ipywidgets: 8.0.6
2023-06-23 15:46:18,696:INFO:                tqdm: 4.65.0
2023-06-23 15:46:18,696:INFO:               numpy: 1.23.5
2023-06-23 15:46:18,696:INFO:              pandas: 1.5.3
2023-06-23 15:46:18,696:INFO:              jinja2: 3.1.2
2023-06-23 15:46:18,696:INFO:               scipy: 1.10.1
2023-06-23 15:46:18,696:INFO:              joblib: 1.2.0
2023-06-23 15:46:18,696:INFO:             sklearn: 1.2.2
2023-06-23 15:46:18,696:INFO:                pyod: 1.0.9
2023-06-23 15:46:18,696:INFO:            imblearn: 0.10.1
2023-06-23 15:46:18,696:INFO:   category_encoders: 2.6.1
2023-06-23 15:46:18,697:INFO:            lightgbm: 3.3.5
2023-06-23 15:46:18,697:INFO:               numba: 0.57.0
2023-06-23 15:46:18,697:INFO:            requests: 2.28.2
2023-06-23 15:46:18,697:INFO:          matplotlib: 3.7.1
2023-06-23 15:46:18,697:INFO:          scikitplot: 0.3.7
2023-06-23 15:46:18,697:INFO:         yellowbrick: 1.5
2023-06-23 15:46:18,697:INFO:              plotly: 5.15.0
2023-06-23 15:46:18,697:INFO:             kaleido: 0.2.1
2023-06-23 15:46:18,697:INFO:         statsmodels: 0.14.0
2023-06-23 15:46:18,697:INFO:              sktime: 0.17.0
2023-06-23 15:46:18,697:INFO:               tbats: 1.1.3
2023-06-23 15:46:18,698:INFO:            pmdarima: 2.0.3
2023-06-23 15:46:18,698:INFO:              psutil: 5.9.4
2023-06-23 15:46:18,698:INFO:PyCaret optional dependencies:
2023-06-23 15:46:18,698:INFO:                shap: Not installed
2023-06-23 15:46:18,698:INFO:           interpret: 0.4.2
2023-06-23 15:46:18,698:INFO:                umap: Not installed
2023-06-23 15:46:18,698:INFO:    pandas_profiling: Not installed
2023-06-23 15:46:18,698:INFO:  explainerdashboard: Not installed
2023-06-23 15:46:18,698:INFO:             autoviz: Not installed
2023-06-23 15:46:18,698:INFO:           fairlearn: Not installed
2023-06-23 15:46:18,698:INFO:             xgboost: 1.7.5
2023-06-23 15:46:18,699:INFO:            catboost: Not installed
2023-06-23 15:46:18,699:INFO:              kmodes: Not installed
2023-06-23 15:46:18,699:INFO:             mlxtend: Not installed
2023-06-23 15:46:18,699:INFO:       statsforecast: Not installed
2023-06-23 15:46:18,699:INFO:        tune_sklearn: Not installed
2023-06-23 15:46:18,699:INFO:                 ray: Not installed
2023-06-23 15:46:18,699:INFO:            hyperopt: 0.2.7
2023-06-23 15:46:18,699:INFO:              optuna: Not installed
2023-06-23 15:46:18,699:INFO:               skopt: Not installed
2023-06-23 15:46:18,699:INFO:              mlflow: Not installed
2023-06-23 15:46:18,699:INFO:              gradio: Not installed
2023-06-23 15:46:18,699:INFO:             fastapi: Not installed
2023-06-23 15:46:18,699:INFO:             uvicorn: Not installed
2023-06-23 15:46:18,700:INFO:              m2cgen: Not installed
2023-06-23 15:46:18,700:INFO:           evidently: Not installed
2023-06-23 15:46:18,700:INFO:               fugue: Not installed
2023-06-23 15:46:18,700:INFO:           streamlit: Not installed
2023-06-23 15:46:18,700:INFO:             prophet: 1.1.4
2023-06-23 15:46:18,700:INFO:None
2023-06-23 15:46:18,700:INFO:Set up data.
2023-06-23 15:46:18,705:INFO:Set up train/test split.
2023-06-23 15:46:18,709:INFO:Set up index.
2023-06-23 15:46:18,710:INFO:Set up folding strategy.
2023-06-23 15:46:18,710:INFO:Assigning column types.
2023-06-23 15:46:18,717:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 15:46:18,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:46:18,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:46:18,791:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:18,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:18,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:46:18,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:46:18,865:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:18,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:18,868:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 15:46:18,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:46:18,943:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:18,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:18,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 15:46:19,023:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:19,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:19,026:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 15:46:19,103:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:19,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:19,179:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:19,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:19,184:INFO:Preparing preprocessing pipeline...
2023-06-23 15:46:19,185:INFO:Set up label encoding.
2023-06-23 15:46:19,185:INFO:Set up simple imputation.
2023-06-23 15:46:19,185:INFO:Set up column name cleaning.
2023-06-23 15:46:19,251:INFO:Finished creating preprocessing pipeline.
2023-06-23 15:46:19,256:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 15:46:19,256:INFO:Creating final display dataframe.
2023-06-23 15:46:19,467:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          8537
1                        Target                    day5_label
2                   Target type                    Multiclass
3                Target mapping  buy: 0, maintain: 1, sell: 2
4           Original data shape                      (981, 8)
5        Transformed data shape                      (981, 8)
6   Transformed train set shape                      (686, 8)
7    Transformed test set shape                      (295, 8)
8              Numeric features                             7
9                    Preprocess                          True
10              Imputation type                        simple
11           Numeric imputation                          mean
12       Categorical imputation                          mode
13               Fold Generator               StratifiedKFold
14                  Fold Number                            10
15                     CPU Jobs                            -1
16                      Use GPU                         False
17               Log Experiment                         False
18              Experiment Name              clf-default-name
19                          USI                          ec14
2023-06-23 15:46:19,571:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:19,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:19,665:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:46:19,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:46:19,669:INFO:setup() successfully completed in 1.23s...............
2023-06-23 15:46:22,924:INFO:Initializing compare_models()
2023-06-23 15:46:22,924:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 15:46:22,924:INFO:Checking exceptions
2023-06-23 15:46:22,929:INFO:Preparing display monitor
2023-06-23 15:46:22,953:INFO:Initializing Logistic Regression
2023-06-23 15:46:22,953:INFO:Total runtime is 0.0 minutes
2023-06-23 15:46:22,957:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:22,957:INFO:Initializing create_model()
2023-06-23 15:46:22,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:22,957:INFO:Checking exceptions
2023-06-23 15:46:22,958:INFO:Importing libraries
2023-06-23 15:46:22,958:INFO:Copying training dataset
2023-06-23 15:46:22,978:INFO:Defining folds
2023-06-23 15:46:22,978:INFO:Declaring metric variables
2023-06-23 15:46:22,982:INFO:Importing untrained model
2023-06-23 15:46:22,989:INFO:Logistic Regression Imported successfully
2023-06-23 15:46:22,998:INFO:Starting cross validation
2023-06-23 15:46:22,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:27,028:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,032:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,034:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,079:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,082:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,084:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,159:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,163:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,219:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,221:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,582:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,671:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,687:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,689:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,752:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,754:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:27,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,135:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,137:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,139:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,152:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,154:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:28,156:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:29,374:INFO:Calculating mean and std
2023-06-23 15:46:29,375:INFO:Creating metrics dataframe
2023-06-23 15:46:29,613:INFO:Uploading results into container
2023-06-23 15:46:29,614:INFO:Uploading model into container now
2023-06-23 15:46:29,615:INFO:_master_model_container: 1
2023-06-23 15:46:29,615:INFO:_display_container: 2
2023-06-23 15:46:29,616:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8537, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 15:46:29,616:INFO:create_model() successfully completed......................................
2023-06-23 15:46:29,782:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:29,782:INFO:Creating metrics dataframe
2023-06-23 15:46:29,790:INFO:Initializing K Neighbors Classifier
2023-06-23 15:46:29,790:INFO:Total runtime is 0.11395795345306396 minutes
2023-06-23 15:46:29,794:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:29,795:INFO:Initializing create_model()
2023-06-23 15:46:29,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:29,795:INFO:Checking exceptions
2023-06-23 15:46:29,795:INFO:Importing libraries
2023-06-23 15:46:29,795:INFO:Copying training dataset
2023-06-23 15:46:29,800:INFO:Defining folds
2023-06-23 15:46:29,801:INFO:Declaring metric variables
2023-06-23 15:46:29,805:INFO:Importing untrained model
2023-06-23 15:46:29,810:INFO:K Neighbors Classifier Imported successfully
2023-06-23 15:46:29,818:INFO:Starting cross validation
2023-06-23 15:46:29,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:30,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,006:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,006:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,012:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,014:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,090:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,100:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,556:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,557:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,559:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,588:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,590:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,628:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,630:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,772:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:30,780:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,107:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,109:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,152:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,154:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:31,156:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,326:INFO:Calculating mean and std
2023-06-23 15:46:32,327:INFO:Creating metrics dataframe
2023-06-23 15:46:32,572:INFO:Uploading results into container
2023-06-23 15:46:32,573:INFO:Uploading model into container now
2023-06-23 15:46:32,574:INFO:_master_model_container: 2
2023-06-23 15:46:32,574:INFO:_display_container: 2
2023-06-23 15:46:32,575:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 15:46:32,575:INFO:create_model() successfully completed......................................
2023-06-23 15:46:32,724:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:32,724:INFO:Creating metrics dataframe
2023-06-23 15:46:32,734:INFO:Initializing Naive Bayes
2023-06-23 15:46:32,735:INFO:Total runtime is 0.16302916606267293 minutes
2023-06-23 15:46:32,738:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:32,738:INFO:Initializing create_model()
2023-06-23 15:46:32,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:32,739:INFO:Checking exceptions
2023-06-23 15:46:32,739:INFO:Importing libraries
2023-06-23 15:46:32,739:INFO:Copying training dataset
2023-06-23 15:46:32,745:INFO:Defining folds
2023-06-23 15:46:32,745:INFO:Declaring metric variables
2023-06-23 15:46:32,749:INFO:Importing untrained model
2023-06-23 15:46:32,752:INFO:Naive Bayes Imported successfully
2023-06-23 15:46:32,762:INFO:Starting cross validation
2023-06-23 15:46:32,763:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:32,950:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,952:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,956:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,958:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,961:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,970:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:32,973:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,009:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,013:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,426:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,456:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,462:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,509:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,513:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,515:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,886:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:33,908:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,109:INFO:Calculating mean and std
2023-06-23 15:46:35,111:INFO:Creating metrics dataframe
2023-06-23 15:46:35,357:INFO:Uploading results into container
2023-06-23 15:46:35,358:INFO:Uploading model into container now
2023-06-23 15:46:35,358:INFO:_master_model_container: 3
2023-06-23 15:46:35,358:INFO:_display_container: 2
2023-06-23 15:46:35,358:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 15:46:35,358:INFO:create_model() successfully completed......................................
2023-06-23 15:46:35,503:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:35,503:INFO:Creating metrics dataframe
2023-06-23 15:46:35,514:INFO:Initializing Decision Tree Classifier
2023-06-23 15:46:35,514:INFO:Total runtime is 0.20935970147450764 minutes
2023-06-23 15:46:35,518:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:35,520:INFO:Initializing create_model()
2023-06-23 15:46:35,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:35,520:INFO:Checking exceptions
2023-06-23 15:46:35,520:INFO:Importing libraries
2023-06-23 15:46:35,520:INFO:Copying training dataset
2023-06-23 15:46:35,524:INFO:Defining folds
2023-06-23 15:46:35,525:INFO:Declaring metric variables
2023-06-23 15:46:35,531:INFO:Importing untrained model
2023-06-23 15:46:35,534:INFO:Decision Tree Classifier Imported successfully
2023-06-23 15:46:35,546:INFO:Starting cross validation
2023-06-23 15:46:35,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:35,720:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,725:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,725:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,727:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,728:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:35,772:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,196:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,209:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,222:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,232:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,232:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,234:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,236:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,628:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,630:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,654:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:36,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:37,962:INFO:Calculating mean and std
2023-06-23 15:46:37,963:INFO:Creating metrics dataframe
2023-06-23 15:46:38,205:INFO:Uploading results into container
2023-06-23 15:46:38,206:INFO:Uploading model into container now
2023-06-23 15:46:38,206:INFO:_master_model_container: 4
2023-06-23 15:46:38,206:INFO:_display_container: 2
2023-06-23 15:46:38,206:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8537, splitter='best')
2023-06-23 15:46:38,207:INFO:create_model() successfully completed......................................
2023-06-23 15:46:38,355:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:38,356:INFO:Creating metrics dataframe
2023-06-23 15:46:38,368:INFO:Initializing SVM - Linear Kernel
2023-06-23 15:46:38,369:INFO:Total runtime is 0.2569265325864156 minutes
2023-06-23 15:46:38,372:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:38,372:INFO:Initializing create_model()
2023-06-23 15:46:38,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:38,372:INFO:Checking exceptions
2023-06-23 15:46:38,373:INFO:Importing libraries
2023-06-23 15:46:38,373:INFO:Copying training dataset
2023-06-23 15:46:38,378:INFO:Defining folds
2023-06-23 15:46:38,378:INFO:Declaring metric variables
2023-06-23 15:46:38,382:INFO:Importing untrained model
2023-06-23 15:46:38,386:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 15:46:38,393:INFO:Starting cross validation
2023-06-23 15:46:38,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:38,543:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:38,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:38,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,549:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,557:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,585:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:38,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,588:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:38,734:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,736:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,737:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,982:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:38,983:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,985:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:38,987:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,012:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:39,013:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,014:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,107:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:39,108:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,109:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,334:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:39,335:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,339:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:39,403:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,405:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,407:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,446:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 15:46:39,447:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,449:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:39,451:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:40,789:INFO:Calculating mean and std
2023-06-23 15:46:40,790:INFO:Creating metrics dataframe
2023-06-23 15:46:41,032:INFO:Uploading results into container
2023-06-23 15:46:41,033:INFO:Uploading model into container now
2023-06-23 15:46:41,033:INFO:_master_model_container: 5
2023-06-23 15:46:41,033:INFO:_display_container: 2
2023-06-23 15:46:41,034:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8537, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 15:46:41,034:INFO:create_model() successfully completed......................................
2023-06-23 15:46:41,184:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:41,184:INFO:Creating metrics dataframe
2023-06-23 15:46:41,196:INFO:Initializing Ridge Classifier
2023-06-23 15:46:41,196:INFO:Total runtime is 0.3040464003880819 minutes
2023-06-23 15:46:41,200:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:41,200:INFO:Initializing create_model()
2023-06-23 15:46:41,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:41,200:INFO:Checking exceptions
2023-06-23 15:46:41,200:INFO:Importing libraries
2023-06-23 15:46:41,200:INFO:Copying training dataset
2023-06-23 15:46:41,204:INFO:Defining folds
2023-06-23 15:46:41,204:INFO:Declaring metric variables
2023-06-23 15:46:41,209:INFO:Importing untrained model
2023-06-23 15:46:41,215:INFO:Ridge Classifier Imported successfully
2023-06-23 15:46:41,224:INFO:Starting cross validation
2023-06-23 15:46:41,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:41,363:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,364:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,366:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,368:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,368:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,370:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,372:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,390:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,393:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,408:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,417:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,419:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,842:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,845:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,864:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:41,866:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,868:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:41,870:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,223:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:42,224:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,227:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 15:46:42,227:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,228:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,229:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,230:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:42,232:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:43,585:INFO:Calculating mean and std
2023-06-23 15:46:43,586:INFO:Creating metrics dataframe
2023-06-23 15:46:43,832:INFO:Uploading results into container
2023-06-23 15:46:43,833:INFO:Uploading model into container now
2023-06-23 15:46:43,833:INFO:_master_model_container: 6
2023-06-23 15:46:43,833:INFO:_display_container: 2
2023-06-23 15:46:43,834:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8537, solver='auto',
                tol=0.0001)
2023-06-23 15:46:43,834:INFO:create_model() successfully completed......................................
2023-06-23 15:46:43,977:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:43,977:INFO:Creating metrics dataframe
2023-06-23 15:46:43,987:INFO:Initializing Random Forest Classifier
2023-06-23 15:46:43,988:INFO:Total runtime is 0.3505879004796346 minutes
2023-06-23 15:46:43,991:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:43,992:INFO:Initializing create_model()
2023-06-23 15:46:43,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:43,992:INFO:Checking exceptions
2023-06-23 15:46:43,992:INFO:Importing libraries
2023-06-23 15:46:43,993:INFO:Copying training dataset
2023-06-23 15:46:43,997:INFO:Defining folds
2023-06-23 15:46:43,997:INFO:Declaring metric variables
2023-06-23 15:46:44,002:INFO:Importing untrained model
2023-06-23 15:46:44,006:INFO:Random Forest Classifier Imported successfully
2023-06-23 15:46:44,016:INFO:Starting cross validation
2023-06-23 15:46:44,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:44,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,715:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,717:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,720:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:44,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:45,030:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:45,033:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:45,035:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,093:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,095:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,147:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,149:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,618:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:46,622:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,114:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,116:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,117:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,157:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,160:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,162:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:47,687:INFO:Calculating mean and std
2023-06-23 15:46:47,688:INFO:Creating metrics dataframe
2023-06-23 15:46:47,944:INFO:Uploading results into container
2023-06-23 15:46:47,945:INFO:Uploading model into container now
2023-06-23 15:46:47,945:INFO:_master_model_container: 7
2023-06-23 15:46:47,945:INFO:_display_container: 2
2023-06-23 15:46:47,946:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8537, verbose=0, warm_start=False)
2023-06-23 15:46:47,946:INFO:create_model() successfully completed......................................
2023-06-23 15:46:48,095:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:48,095:INFO:Creating metrics dataframe
2023-06-23 15:46:48,107:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 15:46:48,108:INFO:Total runtime is 0.4192582249641419 minutes
2023-06-23 15:46:48,112:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:48,113:INFO:Initializing create_model()
2023-06-23 15:46:48,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:48,113:INFO:Checking exceptions
2023-06-23 15:46:48,113:INFO:Importing libraries
2023-06-23 15:46:48,113:INFO:Copying training dataset
2023-06-23 15:46:48,117:INFO:Defining folds
2023-06-23 15:46:48,117:INFO:Declaring metric variables
2023-06-23 15:46:48,122:INFO:Importing untrained model
2023-06-23 15:46:48,127:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 15:46:48,136:INFO:Starting cross validation
2023-06-23 15:46:48,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:48,299:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,301:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,303:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,308:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,324:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,328:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,349:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,351:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,353:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,807:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,807:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,817:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,819:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,822:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:48,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,264:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,266:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,268:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,284:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:49,286:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:50,649:INFO:Calculating mean and std
2023-06-23 15:46:50,651:INFO:Creating metrics dataframe
2023-06-23 15:46:50,910:INFO:Uploading results into container
2023-06-23 15:46:50,911:INFO:Uploading model into container now
2023-06-23 15:46:50,912:INFO:_master_model_container: 8
2023-06-23 15:46:50,912:INFO:_display_container: 2
2023-06-23 15:46:50,912:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 15:46:50,913:INFO:create_model() successfully completed......................................
2023-06-23 15:46:51,056:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:51,057:INFO:Creating metrics dataframe
2023-06-23 15:46:51,068:INFO:Initializing Ada Boost Classifier
2023-06-23 15:46:51,068:INFO:Total runtime is 0.46858716805775963 minutes
2023-06-23 15:46:51,072:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:51,072:INFO:Initializing create_model()
2023-06-23 15:46:51,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:51,072:INFO:Checking exceptions
2023-06-23 15:46:51,072:INFO:Importing libraries
2023-06-23 15:46:51,073:INFO:Copying training dataset
2023-06-23 15:46:51,077:INFO:Defining folds
2023-06-23 15:46:51,077:INFO:Declaring metric variables
2023-06-23 15:46:51,081:INFO:Importing untrained model
2023-06-23 15:46:51,085:INFO:Ada Boost Classifier Imported successfully
2023-06-23 15:46:51,097:INFO:Starting cross validation
2023-06-23 15:46:51,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:51,512:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,516:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,516:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,518:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,528:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,532:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,539:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:51,548:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,299:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,307:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,383:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,389:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:52,422:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,057:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,061:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,063:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,124:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,129:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:53,132:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:54,058:INFO:Calculating mean and std
2023-06-23 15:46:54,060:INFO:Creating metrics dataframe
2023-06-23 15:46:54,323:INFO:Uploading results into container
2023-06-23 15:46:54,324:INFO:Uploading model into container now
2023-06-23 15:46:54,325:INFO:_master_model_container: 9
2023-06-23 15:46:54,325:INFO:_display_container: 2
2023-06-23 15:46:54,326:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8537)
2023-06-23 15:46:54,326:INFO:create_model() successfully completed......................................
2023-06-23 15:46:54,478:INFO:SubProcess create_model() end ==================================
2023-06-23 15:46:54,478:INFO:Creating metrics dataframe
2023-06-23 15:46:54,489:INFO:Initializing Gradient Boosting Classifier
2023-06-23 15:46:54,489:INFO:Total runtime is 0.525593364238739 minutes
2023-06-23 15:46:54,494:INFO:SubProcess create_model() called ==================================
2023-06-23 15:46:54,495:INFO:Initializing create_model()
2023-06-23 15:46:54,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:46:54,495:INFO:Checking exceptions
2023-06-23 15:46:54,495:INFO:Importing libraries
2023-06-23 15:46:54,495:INFO:Copying training dataset
2023-06-23 15:46:54,498:INFO:Defining folds
2023-06-23 15:46:54,498:INFO:Declaring metric variables
2023-06-23 15:46:54,503:INFO:Importing untrained model
2023-06-23 15:46:54,507:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 15:46:54,518:INFO:Starting cross validation
2023-06-23 15:46:54,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:46:55,967:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:55,970:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:55,972:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:55,987:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:55,989:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,006:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,022:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:56,030:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,971:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,973:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,974:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,977:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,977:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:57,980:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,193:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,219:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:58,221:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,688:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,690:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,706:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,710:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,713:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:46:59,959:INFO:Calculating mean and std
2023-06-23 15:46:59,961:INFO:Creating metrics dataframe
2023-06-23 15:47:00,230:INFO:Uploading results into container
2023-06-23 15:47:00,230:INFO:Uploading model into container now
2023-06-23 15:47:00,231:INFO:_master_model_container: 10
2023-06-23 15:47:00,231:INFO:_display_container: 2
2023-06-23 15:47:00,232:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8537, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 15:47:00,232:INFO:create_model() successfully completed......................................
2023-06-23 15:47:00,377:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:00,382:INFO:Creating metrics dataframe
2023-06-23 15:47:00,394:INFO:Initializing Linear Discriminant Analysis
2023-06-23 15:47:00,394:INFO:Total runtime is 0.6240141193072002 minutes
2023-06-23 15:47:00,398:INFO:SubProcess create_model() called ==================================
2023-06-23 15:47:00,399:INFO:Initializing create_model()
2023-06-23 15:47:00,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:00,399:INFO:Checking exceptions
2023-06-23 15:47:00,399:INFO:Importing libraries
2023-06-23 15:47:00,399:INFO:Copying training dataset
2023-06-23 15:47:00,403:INFO:Defining folds
2023-06-23 15:47:00,403:INFO:Declaring metric variables
2023-06-23 15:47:00,407:INFO:Importing untrained model
2023-06-23 15:47:00,412:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:47:00,419:INFO:Starting cross validation
2023-06-23 15:47:00,421:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:00,580:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,582:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,587:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,589:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,596:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,604:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,606:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:00,609:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,078:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,086:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,096:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,123:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,126:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,127:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,138:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,569:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,581:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:01,583:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:03,026:INFO:Calculating mean and std
2023-06-23 15:47:03,027:INFO:Creating metrics dataframe
2023-06-23 15:47:03,304:INFO:Uploading results into container
2023-06-23 15:47:03,305:INFO:Uploading model into container now
2023-06-23 15:47:03,305:INFO:_master_model_container: 11
2023-06-23 15:47:03,305:INFO:_display_container: 2
2023-06-23 15:47:03,305:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:47:03,306:INFO:create_model() successfully completed......................................
2023-06-23 15:47:03,455:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:03,455:INFO:Creating metrics dataframe
2023-06-23 15:47:03,470:INFO:Initializing Extra Trees Classifier
2023-06-23 15:47:03,470:INFO:Total runtime is 0.6752878546714783 minutes
2023-06-23 15:47:03,473:INFO:SubProcess create_model() called ==================================
2023-06-23 15:47:03,473:INFO:Initializing create_model()
2023-06-23 15:47:03,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:03,474:INFO:Checking exceptions
2023-06-23 15:47:03,475:INFO:Importing libraries
2023-06-23 15:47:03,475:INFO:Copying training dataset
2023-06-23 15:47:03,480:INFO:Defining folds
2023-06-23 15:47:03,480:INFO:Declaring metric variables
2023-06-23 15:47:03,485:INFO:Importing untrained model
2023-06-23 15:47:03,490:INFO:Extra Trees Classifier Imported successfully
2023-06-23 15:47:03,498:INFO:Starting cross validation
2023-06-23 15:47:03,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:04,126:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,128:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,130:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,189:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,200:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,202:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,204:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,346:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,347:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:04,349:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,277:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,281:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,652:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,654:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,738:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,740:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:05,743:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,227:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,229:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,231:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,270:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,272:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,274:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:06,984:INFO:Calculating mean and std
2023-06-23 15:47:06,985:INFO:Creating metrics dataframe
2023-06-23 15:47:07,271:INFO:Uploading results into container
2023-06-23 15:47:07,272:INFO:Uploading model into container now
2023-06-23 15:47:07,272:INFO:_master_model_container: 12
2023-06-23 15:47:07,273:INFO:_display_container: 2
2023-06-23 15:47:07,273:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8537, verbose=0, warm_start=False)
2023-06-23 15:47:07,274:INFO:create_model() successfully completed......................................
2023-06-23 15:47:07,425:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:07,425:INFO:Creating metrics dataframe
2023-06-23 15:47:07,437:INFO:Initializing Extreme Gradient Boosting
2023-06-23 15:47:07,438:INFO:Total runtime is 0.7414134740829469 minutes
2023-06-23 15:47:07,443:INFO:SubProcess create_model() called ==================================
2023-06-23 15:47:07,443:INFO:Initializing create_model()
2023-06-23 15:47:07,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:07,443:INFO:Checking exceptions
2023-06-23 15:47:07,443:INFO:Importing libraries
2023-06-23 15:47:07,443:INFO:Copying training dataset
2023-06-23 15:47:07,447:INFO:Defining folds
2023-06-23 15:47:07,447:INFO:Declaring metric variables
2023-06-23 15:47:07,451:INFO:Importing untrained model
2023-06-23 15:47:07,456:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 15:47:07,466:INFO:Starting cross validation
2023-06-23 15:47:07,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:08,026:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,029:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,033:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,038:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,040:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,041:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,043:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,062:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,064:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:08,066:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,040:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,046:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,066:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,071:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,073:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,078:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,083:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,099:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,102:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,868:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,870:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,871:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,872:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,873:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:09,875:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:11,047:INFO:Calculating mean and std
2023-06-23 15:47:11,048:INFO:Creating metrics dataframe
2023-06-23 15:47:11,346:INFO:Uploading results into container
2023-06-23 15:47:11,347:INFO:Uploading model into container now
2023-06-23 15:47:11,348:INFO:_master_model_container: 13
2023-06-23 15:47:11,348:INFO:_display_container: 2
2023-06-23 15:47:11,349:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 15:47:11,350:INFO:create_model() successfully completed......................................
2023-06-23 15:47:11,500:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:11,500:INFO:Creating metrics dataframe
2023-06-23 15:47:11,514:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 15:47:11,514:INFO:Total runtime is 0.8093483328819276 minutes
2023-06-23 15:47:11,518:INFO:SubProcess create_model() called ==================================
2023-06-23 15:47:11,519:INFO:Initializing create_model()
2023-06-23 15:47:11,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:11,519:INFO:Checking exceptions
2023-06-23 15:47:11,519:INFO:Importing libraries
2023-06-23 15:47:11,519:INFO:Copying training dataset
2023-06-23 15:47:11,523:INFO:Defining folds
2023-06-23 15:47:11,525:INFO:Declaring metric variables
2023-06-23 15:47:11,530:INFO:Importing untrained model
2023-06-23 15:47:11,535:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 15:47:11,575:INFO:Starting cross validation
2023-06-23 15:47:11,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:12,684:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,686:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,688:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,733:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,735:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,737:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,781:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,783:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,785:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,790:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:12,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,628:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,631:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,633:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,723:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,822:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:13,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,484:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,486:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,487:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:14,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:15,718:INFO:Calculating mean and std
2023-06-23 15:47:15,719:INFO:Creating metrics dataframe
2023-06-23 15:47:16,032:INFO:Uploading results into container
2023-06-23 15:47:16,033:INFO:Uploading model into container now
2023-06-23 15:47:16,034:INFO:_master_model_container: 14
2023-06-23 15:47:16,034:INFO:_display_container: 2
2023-06-23 15:47:16,035:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8537, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 15:47:16,035:INFO:create_model() successfully completed......................................
2023-06-23 15:47:16,185:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:16,185:INFO:Creating metrics dataframe
2023-06-23 15:47:16,198:INFO:Initializing Dummy Classifier
2023-06-23 15:47:16,198:INFO:Total runtime is 0.8874233126640322 minutes
2023-06-23 15:47:16,202:INFO:SubProcess create_model() called ==================================
2023-06-23 15:47:16,203:INFO:Initializing create_model()
2023-06-23 15:47:16,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD24621630>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:16,203:INFO:Checking exceptions
2023-06-23 15:47:16,203:INFO:Importing libraries
2023-06-23 15:47:16,203:INFO:Copying training dataset
2023-06-23 15:47:16,209:INFO:Defining folds
2023-06-23 15:47:16,210:INFO:Declaring metric variables
2023-06-23 15:47:16,214:INFO:Importing untrained model
2023-06-23 15:47:16,218:INFO:Dummy Classifier Imported successfully
2023-06-23 15:47:16,225:INFO:Starting cross validation
2023-06-23 15:47:16,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:16,370:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,372:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,373:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,375:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,389:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,393:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,395:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,396:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,397:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,438:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,439:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,443:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,934:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,936:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,937:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,938:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,976:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,978:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,978:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,979:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,980:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,980:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,981:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,982:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,989:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,993:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:16,994:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:16,995:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,467:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:17,467:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,469:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,471:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:17,472:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 15:47:17,474:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:19,186:INFO:Calculating mean and std
2023-06-23 15:47:19,187:INFO:Creating metrics dataframe
2023-06-23 15:47:19,491:INFO:Uploading results into container
2023-06-23 15:47:19,492:INFO:Uploading model into container now
2023-06-23 15:47:19,493:INFO:_master_model_container: 15
2023-06-23 15:47:19,493:INFO:_display_container: 2
2023-06-23 15:47:19,493:INFO:DummyClassifier(constant=None, random_state=8537, strategy='prior')
2023-06-23 15:47:19,495:INFO:create_model() successfully completed......................................
2023-06-23 15:47:19,636:INFO:SubProcess create_model() end ==================================
2023-06-23 15:47:19,636:INFO:Creating metrics dataframe
2023-06-23 15:47:19,662:INFO:Initializing create_model()
2023-06-23 15:47:19,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:19,662:INFO:Checking exceptions
2023-06-23 15:47:19,665:INFO:Importing libraries
2023-06-23 15:47:19,665:INFO:Copying training dataset
2023-06-23 15:47:19,668:INFO:Defining folds
2023-06-23 15:47:19,668:INFO:Declaring metric variables
2023-06-23 15:47:19,668:INFO:Importing untrained model
2023-06-23 15:47:19,668:INFO:Declaring custom model
2023-06-23 15:47:19,669:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 15:47:19,669:INFO:Cross validation set to False
2023-06-23 15:47:19,669:INFO:Fitting Model
2023-06-23 15:47:20,029:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 15:47:20,030:INFO:create_model() successfully completed......................................
2023-06-23 15:47:20,208:INFO:_master_model_container: 15
2023-06-23 15:47:20,208:INFO:_display_container: 2
2023-06-23 15:47:20,208:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 15:47:20,208:INFO:compare_models() successfully completed......................................
2023-06-23 15:47:20,209:INFO:Initializing evaluate_model()
2023-06-23 15:47:20,209:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 15:47:20,216:INFO:Initializing plot_model()
2023-06-23 15:47:20,216:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, system=True)
2023-06-23 15:47:20,217:INFO:Checking exceptions
2023-06-23 15:47:20,219:INFO:Preloading libraries
2023-06-23 15:47:20,219:INFO:Copying training dataset
2023-06-23 15:47:20,219:INFO:Plot type: pipeline
2023-06-23 15:47:20,434:INFO:Visual Rendered Successfully
2023-06-23 15:47:20,581:INFO:plot_model() successfully completed......................................
2023-06-23 15:47:55,404:INFO:Initializing create_model()
2023-06-23 15:47:55,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:47:55,405:INFO:Checking exceptions
2023-06-23 15:47:55,419:INFO:Importing libraries
2023-06-23 15:47:55,419:INFO:Copying training dataset
2023-06-23 15:47:55,424:INFO:Defining folds
2023-06-23 15:47:55,425:INFO:Declaring metric variables
2023-06-23 15:47:55,429:INFO:Importing untrained model
2023-06-23 15:47:55,434:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 15:47:55,443:INFO:Starting cross validation
2023-06-23 15:47:55,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:47:55,651:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,654:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,657:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,659:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,661:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,663:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,688:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,693:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,696:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:55,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,504:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,508:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,512:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,582:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,584:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,621:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:56,624:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,212:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,218:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:57,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 15:47:59,236:INFO:Calculating mean and std
2023-06-23 15:47:59,239:INFO:Creating metrics dataframe
2023-06-23 15:47:59,247:INFO:Finalizing model
2023-06-23 15:47:59,624:INFO:Uploading results into container
2023-06-23 15:47:59,625:INFO:Uploading model into container now
2023-06-23 15:47:59,636:INFO:_master_model_container: 16
2023-06-23 15:47:59,636:INFO:_display_container: 3
2023-06-23 15:47:59,637:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 15:47:59,637:INFO:create_model() successfully completed......................................
2023-06-23 15:47:59,828:INFO:Initializing predict_model()
2023-06-23 15:47:59,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD245D8940>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD248300D0>)
2023-06-23 15:47:59,828:INFO:Checking exceptions
2023-06-23 15:47:59,828:INFO:Preloading libraries
2023-06-23 15:47:59,830:INFO:Set up data.
2023-06-23 15:47:59,835:INFO:Set up index.
2023-06-26 10:17:33,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 10:17:33,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 10:17:33,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 10:17:33,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 10:17:43,036:INFO:Soft dependency imported: prophet: 1.1.4
2023-06-26 10:17:46,123:INFO:PyCaret ClassificationExperiment
2023-06-26 10:17:46,123:INFO:Logging name: clf-default-name
2023-06-26 10:17:46,123:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-26 10:17:46,123:INFO:version 3.0.2
2023-06-26 10:17:46,124:INFO:Initializing setup()
2023-06-26 10:17:46,124:INFO:self.USI: 0a5e
2023-06-26 10:17:46,124:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'USI', 'X_train', 'exp_name_log', '_ml_usecase', 'pipeline', 'y', 'target_param', 'y_train', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'y_test', 'data', 'idx', 'gpu_param', 'X', 'exp_id', 'n_jobs_param', 'seed', 'log_plots_param', 'is_multiclass', 'html_param'}
2023-06-26 10:17:46,124:INFO:Checking environment
2023-06-26 10:17:46,124:INFO:python_version: 3.10.5
2023-06-26 10:17:46,124:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-26 10:17:46,124:INFO:machine: AMD64
2023-06-26 10:17:46,124:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-26 10:17:46,128:INFO:Memory: svmem(total=17130000384, available=8936611840, percent=47.8, used=8193388544, free=8936611840)
2023-06-26 10:17:46,128:INFO:Physical Core: 4
2023-06-26 10:17:46,128:INFO:Logical Core: 4
2023-06-26 10:17:46,128:INFO:Checking libraries
2023-06-26 10:17:46,128:INFO:System:
2023-06-26 10:17:46,128:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-26 10:17:46,128:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-26 10:17:46,128:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-26 10:17:46,128:INFO:PyCaret required dependencies:
2023-06-26 10:17:46,128:INFO:                 pip: 23.0.1
2023-06-26 10:17:46,128:INFO:          setuptools: 58.1.0
2023-06-26 10:17:46,128:INFO:             pycaret: 3.0.2
2023-06-26 10:17:46,129:INFO:             IPython: 8.9.0
2023-06-26 10:17:46,129:INFO:          ipywidgets: 8.0.6
2023-06-26 10:17:46,129:INFO:                tqdm: 4.65.0
2023-06-26 10:17:46,129:INFO:               numpy: 1.23.5
2023-06-26 10:17:46,129:INFO:              pandas: 1.5.3
2023-06-26 10:17:46,129:INFO:              jinja2: 3.1.2
2023-06-26 10:17:46,129:INFO:               scipy: 1.10.1
2023-06-26 10:17:46,130:INFO:              joblib: 1.2.0
2023-06-26 10:17:46,131:INFO:             sklearn: 1.2.2
2023-06-26 10:17:46,131:INFO:                pyod: 1.0.9
2023-06-26 10:17:46,131:INFO:            imblearn: 0.10.1
2023-06-26 10:17:46,131:INFO:   category_encoders: 2.6.1
2023-06-26 10:17:46,131:INFO:            lightgbm: 3.3.5
2023-06-26 10:17:46,131:INFO:               numba: 0.57.0
2023-06-26 10:17:46,131:INFO:            requests: 2.28.2
2023-06-26 10:17:46,131:INFO:          matplotlib: 3.7.1
2023-06-26 10:17:46,131:INFO:          scikitplot: 0.3.7
2023-06-26 10:17:46,131:INFO:         yellowbrick: 1.5
2023-06-26 10:17:46,131:INFO:              plotly: 5.15.0
2023-06-26 10:17:46,131:INFO:             kaleido: 0.2.1
2023-06-26 10:17:46,132:INFO:         statsmodels: 0.14.0
2023-06-26 10:17:46,132:INFO:              sktime: 0.17.0
2023-06-26 10:17:46,132:INFO:               tbats: 1.1.3
2023-06-26 10:17:46,132:INFO:            pmdarima: 2.0.3
2023-06-26 10:17:46,132:INFO:              psutil: 5.9.4
2023-06-26 10:17:46,132:INFO:PyCaret optional dependencies:
2023-06-26 10:17:46,159:INFO:                shap: Not installed
2023-06-26 10:17:46,159:INFO:           interpret: 0.4.2
2023-06-26 10:17:46,159:INFO:                umap: Not installed
2023-06-26 10:17:46,159:INFO:    pandas_profiling: Not installed
2023-06-26 10:17:46,159:INFO:  explainerdashboard: Not installed
2023-06-26 10:17:46,159:INFO:             autoviz: Not installed
2023-06-26 10:17:46,159:INFO:           fairlearn: Not installed
2023-06-26 10:17:46,159:INFO:             xgboost: 1.7.5
2023-06-26 10:17:46,159:INFO:            catboost: Not installed
2023-06-26 10:17:46,160:INFO:              kmodes: Not installed
2023-06-26 10:17:46,160:INFO:             mlxtend: Not installed
2023-06-26 10:17:46,160:INFO:       statsforecast: Not installed
2023-06-26 10:17:46,160:INFO:        tune_sklearn: Not installed
2023-06-26 10:17:46,160:INFO:                 ray: Not installed
2023-06-26 10:17:46,160:INFO:            hyperopt: 0.2.7
2023-06-26 10:17:46,160:INFO:              optuna: Not installed
2023-06-26 10:17:46,160:INFO:               skopt: Not installed
2023-06-26 10:17:46,160:INFO:              mlflow: Not installed
2023-06-26 10:17:46,160:INFO:              gradio: Not installed
2023-06-26 10:17:46,160:INFO:             fastapi: Not installed
2023-06-26 10:17:46,160:INFO:             uvicorn: Not installed
2023-06-26 10:17:46,161:INFO:              m2cgen: Not installed
2023-06-26 10:17:46,161:INFO:           evidently: Not installed
2023-06-26 10:17:46,161:INFO:               fugue: Not installed
2023-06-26 10:17:46,161:INFO:           streamlit: Not installed
2023-06-26 10:17:46,161:INFO:             prophet: 1.1.4
2023-06-26 10:17:46,161:INFO:None
2023-06-26 10:17:46,161:INFO:Set up data.
2023-06-26 10:17:46,167:INFO:Set up train/test split.
2023-06-26 10:17:46,215:INFO:Set up index.
2023-06-26 10:17:46,215:INFO:Set up folding strategy.
2023-06-26 10:17:46,215:INFO:Assigning column types.
2023-06-26 10:17:46,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-26 10:17:46,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,308:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,393:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:46,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:46,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,732:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,771:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:46,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:46,775:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-26 10:17:46,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,864:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:46,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:46,921:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 10:17:46,955:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:46,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:46,958:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-26 10:17:47,045:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:47,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:47,144:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:47,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:47,151:INFO:Preparing preprocessing pipeline...
2023-06-26 10:17:47,173:INFO:Set up label encoding.
2023-06-26 10:17:47,173:INFO:Set up simple imputation.
2023-06-26 10:17:47,174:INFO:Set up column name cleaning.
2023-06-26 10:17:47,315:INFO:Finished creating preprocessing pipeline.
2023-06-26 10:17:47,330:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-26 10:17:47,331:INFO:Creating final display dataframe.
2023-06-26 10:17:47,494:INFO:Setup _display_container:                     Description              Value
0                    Session id               8830
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (981, 8)
5        Transformed data shape           (981, 8)
6   Transformed train set shape           (686, 8)
7    Transformed test set shape           (295, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               0a5e
2023-06-26 10:17:47,637:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:47,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:47,730:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 10:17:47,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 10:17:47,734:INFO:setup() successfully completed in 1.98s...............
2023-06-26 10:18:38,023:INFO:Initializing compare_models()
2023-06-26 10:18:38,023:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 10:18:38,023:INFO:Checking exceptions
2023-06-26 10:18:38,049:INFO:Preparing display monitor
2023-06-26 10:18:38,099:INFO:Initializing Logistic Regression
2023-06-26 10:18:38,100:INFO:Total runtime is 1.6637643178304036e-05 minutes
2023-06-26 10:18:38,103:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:38,103:INFO:Initializing create_model()
2023-06-26 10:18:38,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:38,104:INFO:Checking exceptions
2023-06-26 10:18:38,104:INFO:Importing libraries
2023-06-26 10:18:38,104:INFO:Copying training dataset
2023-06-26 10:18:38,108:INFO:Defining folds
2023-06-26 10:18:38,109:INFO:Declaring metric variables
2023-06-26 10:18:38,128:INFO:Importing untrained model
2023-06-26 10:18:38,132:INFO:Logistic Regression Imported successfully
2023-06-26 10:18:38,140:INFO:Starting cross validation
2023-06-26 10:18:38,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:44,781:INFO:Calculating mean and std
2023-06-26 10:18:44,782:INFO:Creating metrics dataframe
2023-06-26 10:18:45,091:INFO:Uploading results into container
2023-06-26 10:18:45,093:INFO:Uploading model into container now
2023-06-26 10:18:45,094:INFO:_master_model_container: 1
2023-06-26 10:18:45,094:INFO:_display_container: 2
2023-06-26 10:18:45,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8830, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 10:18:45,095:INFO:create_model() successfully completed......................................
2023-06-26 10:18:45,173:INFO:SubProcess create_model() end ==================================
2023-06-26 10:18:45,173:INFO:Creating metrics dataframe
2023-06-26 10:18:45,181:INFO:Initializing K Neighbors Classifier
2023-06-26 10:18:45,182:INFO:Total runtime is 0.11804953416188557 minutes
2023-06-26 10:18:45,185:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:45,186:INFO:Initializing create_model()
2023-06-26 10:18:45,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:45,186:INFO:Checking exceptions
2023-06-26 10:18:45,186:INFO:Importing libraries
2023-06-26 10:18:45,186:INFO:Copying training dataset
2023-06-26 10:18:45,189:INFO:Defining folds
2023-06-26 10:18:45,189:INFO:Declaring metric variables
2023-06-26 10:18:45,193:INFO:Importing untrained model
2023-06-26 10:18:45,197:INFO:K Neighbors Classifier Imported successfully
2023-06-26 10:18:45,206:INFO:Starting cross validation
2023-06-26 10:18:45,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:48,165:INFO:Calculating mean and std
2023-06-26 10:18:48,166:INFO:Creating metrics dataframe
2023-06-26 10:18:48,472:INFO:Uploading results into container
2023-06-26 10:18:48,473:INFO:Uploading model into container now
2023-06-26 10:18:48,474:INFO:_master_model_container: 2
2023-06-26 10:18:48,474:INFO:_display_container: 2
2023-06-26 10:18:48,475:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 10:18:48,475:INFO:create_model() successfully completed......................................
2023-06-26 10:18:48,548:INFO:SubProcess create_model() end ==================================
2023-06-26 10:18:48,549:INFO:Creating metrics dataframe
2023-06-26 10:18:48,558:INFO:Initializing Naive Bayes
2023-06-26 10:18:48,558:INFO:Total runtime is 0.17432111501693726 minutes
2023-06-26 10:18:48,562:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:48,563:INFO:Initializing create_model()
2023-06-26 10:18:48,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:48,563:INFO:Checking exceptions
2023-06-26 10:18:48,563:INFO:Importing libraries
2023-06-26 10:18:48,563:INFO:Copying training dataset
2023-06-26 10:18:48,567:INFO:Defining folds
2023-06-26 10:18:48,567:INFO:Declaring metric variables
2023-06-26 10:18:48,570:INFO:Importing untrained model
2023-06-26 10:18:48,574:INFO:Naive Bayes Imported successfully
2023-06-26 10:18:48,584:INFO:Starting cross validation
2023-06-26 10:18:48,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:51,511:INFO:Calculating mean and std
2023-06-26 10:18:51,513:INFO:Creating metrics dataframe
2023-06-26 10:18:51,813:INFO:Uploading results into container
2023-06-26 10:18:51,814:INFO:Uploading model into container now
2023-06-26 10:18:51,814:INFO:_master_model_container: 3
2023-06-26 10:18:51,814:INFO:_display_container: 2
2023-06-26 10:18:51,815:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 10:18:51,815:INFO:create_model() successfully completed......................................
2023-06-26 10:18:51,886:INFO:SubProcess create_model() end ==================================
2023-06-26 10:18:51,886:INFO:Creating metrics dataframe
2023-06-26 10:18:51,899:INFO:Initializing Decision Tree Classifier
2023-06-26 10:18:51,899:INFO:Total runtime is 0.23000119924545287 minutes
2023-06-26 10:18:51,903:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:51,904:INFO:Initializing create_model()
2023-06-26 10:18:51,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:51,904:INFO:Checking exceptions
2023-06-26 10:18:51,904:INFO:Importing libraries
2023-06-26 10:18:51,904:INFO:Copying training dataset
2023-06-26 10:18:51,908:INFO:Defining folds
2023-06-26 10:18:51,908:INFO:Declaring metric variables
2023-06-26 10:18:51,912:INFO:Importing untrained model
2023-06-26 10:18:51,916:INFO:Decision Tree Classifier Imported successfully
2023-06-26 10:18:51,926:INFO:Starting cross validation
2023-06-26 10:18:51,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:54,830:INFO:Calculating mean and std
2023-06-26 10:18:54,831:INFO:Creating metrics dataframe
2023-06-26 10:18:55,125:INFO:Uploading results into container
2023-06-26 10:18:55,125:INFO:Uploading model into container now
2023-06-26 10:18:55,126:INFO:_master_model_container: 4
2023-06-26 10:18:55,126:INFO:_display_container: 2
2023-06-26 10:18:55,127:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8830, splitter='best')
2023-06-26 10:18:55,127:INFO:create_model() successfully completed......................................
2023-06-26 10:18:55,201:INFO:SubProcess create_model() end ==================================
2023-06-26 10:18:55,202:INFO:Creating metrics dataframe
2023-06-26 10:18:55,212:INFO:Initializing SVM - Linear Kernel
2023-06-26 10:18:55,213:INFO:Total runtime is 0.2852265159289042 minutes
2023-06-26 10:18:55,217:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:55,217:INFO:Initializing create_model()
2023-06-26 10:18:55,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:55,218:INFO:Checking exceptions
2023-06-26 10:18:55,218:INFO:Importing libraries
2023-06-26 10:18:55,218:INFO:Copying training dataset
2023-06-26 10:18:55,221:INFO:Defining folds
2023-06-26 10:18:55,221:INFO:Declaring metric variables
2023-06-26 10:18:55,225:INFO:Importing untrained model
2023-06-26 10:18:55,230:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 10:18:55,240:INFO:Starting cross validation
2023-06-26 10:18:55,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:55,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:55,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:55,926:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:56,020:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:56,108:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:56,428:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:56,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:18:58,095:INFO:Calculating mean and std
2023-06-26 10:18:58,095:INFO:Creating metrics dataframe
2023-06-26 10:18:58,393:INFO:Uploading results into container
2023-06-26 10:18:58,394:INFO:Uploading model into container now
2023-06-26 10:18:58,394:INFO:_master_model_container: 5
2023-06-26 10:18:58,394:INFO:_display_container: 2
2023-06-26 10:18:58,395:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8830, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 10:18:58,395:INFO:create_model() successfully completed......................................
2023-06-26 10:18:58,468:INFO:SubProcess create_model() end ==================================
2023-06-26 10:18:58,468:INFO:Creating metrics dataframe
2023-06-26 10:18:58,478:INFO:Initializing Ridge Classifier
2023-06-26 10:18:58,478:INFO:Total runtime is 0.3396509329477946 minutes
2023-06-26 10:18:58,481:INFO:SubProcess create_model() called ==================================
2023-06-26 10:18:58,481:INFO:Initializing create_model()
2023-06-26 10:18:58,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:18:58,482:INFO:Checking exceptions
2023-06-26 10:18:58,482:INFO:Importing libraries
2023-06-26 10:18:58,482:INFO:Copying training dataset
2023-06-26 10:18:58,486:INFO:Defining folds
2023-06-26 10:18:58,486:INFO:Declaring metric variables
2023-06-26 10:18:58,489:INFO:Importing untrained model
2023-06-26 10:18:58,493:INFO:Ridge Classifier Imported successfully
2023-06-26 10:18:58,502:INFO:Starting cross validation
2023-06-26 10:18:58,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:18:58,745:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:58,789:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:58,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:58,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,272:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,288:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,393:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:18:59,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:19:01,490:INFO:Calculating mean and std
2023-06-26 10:19:01,491:INFO:Creating metrics dataframe
2023-06-26 10:19:01,801:INFO:Uploading results into container
2023-06-26 10:19:01,801:INFO:Uploading model into container now
2023-06-26 10:19:01,802:INFO:_master_model_container: 6
2023-06-26 10:19:01,802:INFO:_display_container: 2
2023-06-26 10:19:01,803:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8830, solver='auto',
                tol=0.0001)
2023-06-26 10:19:01,803:INFO:create_model() successfully completed......................................
2023-06-26 10:19:01,875:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:01,876:INFO:Creating metrics dataframe
2023-06-26 10:19:01,886:INFO:Initializing Random Forest Classifier
2023-06-26 10:19:01,886:INFO:Total runtime is 0.39644736448923745 minutes
2023-06-26 10:19:01,889:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:01,890:INFO:Initializing create_model()
2023-06-26 10:19:01,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:01,890:INFO:Checking exceptions
2023-06-26 10:19:01,890:INFO:Importing libraries
2023-06-26 10:19:01,890:INFO:Copying training dataset
2023-06-26 10:19:01,895:INFO:Defining folds
2023-06-26 10:19:01,895:INFO:Declaring metric variables
2023-06-26 10:19:01,898:INFO:Importing untrained model
2023-06-26 10:19:01,902:INFO:Random Forest Classifier Imported successfully
2023-06-26 10:19:01,912:INFO:Starting cross validation
2023-06-26 10:19:01,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:05,717:INFO:Calculating mean and std
2023-06-26 10:19:05,718:INFO:Creating metrics dataframe
2023-06-26 10:19:06,032:INFO:Uploading results into container
2023-06-26 10:19:06,033:INFO:Uploading model into container now
2023-06-26 10:19:06,033:INFO:_master_model_container: 7
2023-06-26 10:19:06,033:INFO:_display_container: 2
2023-06-26 10:19:06,034:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8830, verbose=0, warm_start=False)
2023-06-26 10:19:06,034:INFO:create_model() successfully completed......................................
2023-06-26 10:19:06,106:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:06,107:INFO:Creating metrics dataframe
2023-06-26 10:19:06,119:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 10:19:06,119:INFO:Total runtime is 0.4669947624206543 minutes
2023-06-26 10:19:06,123:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:06,124:INFO:Initializing create_model()
2023-06-26 10:19:06,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:06,124:INFO:Checking exceptions
2023-06-26 10:19:06,124:INFO:Importing libraries
2023-06-26 10:19:06,124:INFO:Copying training dataset
2023-06-26 10:19:06,129:INFO:Defining folds
2023-06-26 10:19:06,129:INFO:Declaring metric variables
2023-06-26 10:19:06,132:INFO:Importing untrained model
2023-06-26 10:19:06,136:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 10:19:06,145:INFO:Starting cross validation
2023-06-26 10:19:06,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:09,159:INFO:Calculating mean and std
2023-06-26 10:19:09,160:INFO:Creating metrics dataframe
2023-06-26 10:19:09,475:INFO:Uploading results into container
2023-06-26 10:19:09,476:INFO:Uploading model into container now
2023-06-26 10:19:09,477:INFO:_master_model_container: 8
2023-06-26 10:19:09,477:INFO:_display_container: 2
2023-06-26 10:19:09,478:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 10:19:09,478:INFO:create_model() successfully completed......................................
2023-06-26 10:19:09,550:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:09,550:INFO:Creating metrics dataframe
2023-06-26 10:19:09,561:INFO:Initializing Ada Boost Classifier
2023-06-26 10:19:09,562:INFO:Total runtime is 0.5243880192438761 minutes
2023-06-26 10:19:09,565:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:09,565:INFO:Initializing create_model()
2023-06-26 10:19:09,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:09,565:INFO:Checking exceptions
2023-06-26 10:19:09,566:INFO:Importing libraries
2023-06-26 10:19:09,566:INFO:Copying training dataset
2023-06-26 10:19:09,569:INFO:Defining folds
2023-06-26 10:19:09,569:INFO:Declaring metric variables
2023-06-26 10:19:09,572:INFO:Importing untrained model
2023-06-26 10:19:09,576:INFO:Ada Boost Classifier Imported successfully
2023-06-26 10:19:09,584:INFO:Starting cross validation
2023-06-26 10:19:09,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:13,178:INFO:Calculating mean and std
2023-06-26 10:19:13,179:INFO:Creating metrics dataframe
2023-06-26 10:19:13,497:INFO:Uploading results into container
2023-06-26 10:19:13,498:INFO:Uploading model into container now
2023-06-26 10:19:13,499:INFO:_master_model_container: 9
2023-06-26 10:19:13,499:INFO:_display_container: 2
2023-06-26 10:19:13,499:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8830)
2023-06-26 10:19:13,500:INFO:create_model() successfully completed......................................
2023-06-26 10:19:13,572:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:13,572:INFO:Creating metrics dataframe
2023-06-26 10:19:13,583:INFO:Initializing Gradient Boosting Classifier
2023-06-26 10:19:13,584:INFO:Total runtime is 0.591413148244222 minutes
2023-06-26 10:19:13,587:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:13,588:INFO:Initializing create_model()
2023-06-26 10:19:13,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:13,588:INFO:Checking exceptions
2023-06-26 10:19:13,589:INFO:Importing libraries
2023-06-26 10:19:13,589:INFO:Copying training dataset
2023-06-26 10:19:13,593:INFO:Defining folds
2023-06-26 10:19:13,593:INFO:Declaring metric variables
2023-06-26 10:19:13,597:INFO:Importing untrained model
2023-06-26 10:19:13,602:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 10:19:13,613:INFO:Starting cross validation
2023-06-26 10:19:13,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:18,997:INFO:Calculating mean and std
2023-06-26 10:19:18,998:INFO:Creating metrics dataframe
2023-06-26 10:19:19,321:INFO:Uploading results into container
2023-06-26 10:19:19,322:INFO:Uploading model into container now
2023-06-26 10:19:19,323:INFO:_master_model_container: 10
2023-06-26 10:19:19,323:INFO:_display_container: 2
2023-06-26 10:19:19,324:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8830, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 10:19:19,324:INFO:create_model() successfully completed......................................
2023-06-26 10:19:19,396:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:19,396:INFO:Creating metrics dataframe
2023-06-26 10:19:19,408:INFO:Initializing Linear Discriminant Analysis
2023-06-26 10:19:19,408:INFO:Total runtime is 0.6884853521982829 minutes
2023-06-26 10:19:19,412:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:19,413:INFO:Initializing create_model()
2023-06-26 10:19:19,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:19,413:INFO:Checking exceptions
2023-06-26 10:19:19,413:INFO:Importing libraries
2023-06-26 10:19:19,413:INFO:Copying training dataset
2023-06-26 10:19:19,417:INFO:Defining folds
2023-06-26 10:19:19,417:INFO:Declaring metric variables
2023-06-26 10:19:19,420:INFO:Importing untrained model
2023-06-26 10:19:19,423:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 10:19:19,432:INFO:Starting cross validation
2023-06-26 10:19:19,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:22,731:INFO:Calculating mean and std
2023-06-26 10:19:22,731:INFO:Creating metrics dataframe
2023-06-26 10:19:23,068:INFO:Uploading results into container
2023-06-26 10:19:23,068:INFO:Uploading model into container now
2023-06-26 10:19:23,069:INFO:_master_model_container: 11
2023-06-26 10:19:23,069:INFO:_display_container: 2
2023-06-26 10:19:23,069:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:19:23,070:INFO:create_model() successfully completed......................................
2023-06-26 10:19:23,143:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:23,143:INFO:Creating metrics dataframe
2023-06-26 10:19:23,154:INFO:Initializing Extra Trees Classifier
2023-06-26 10:19:23,154:INFO:Total runtime is 0.7509171923001607 minutes
2023-06-26 10:19:23,157:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:23,158:INFO:Initializing create_model()
2023-06-26 10:19:23,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:23,158:INFO:Checking exceptions
2023-06-26 10:19:23,158:INFO:Importing libraries
2023-06-26 10:19:23,158:INFO:Copying training dataset
2023-06-26 10:19:23,162:INFO:Defining folds
2023-06-26 10:19:23,162:INFO:Declaring metric variables
2023-06-26 10:19:23,165:INFO:Importing untrained model
2023-06-26 10:19:23,168:INFO:Extra Trees Classifier Imported successfully
2023-06-26 10:19:23,178:INFO:Starting cross validation
2023-06-26 10:19:23,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:27,110:INFO:Calculating mean and std
2023-06-26 10:19:27,110:INFO:Creating metrics dataframe
2023-06-26 10:19:27,451:INFO:Uploading results into container
2023-06-26 10:19:27,451:INFO:Uploading model into container now
2023-06-26 10:19:27,452:INFO:_master_model_container: 12
2023-06-26 10:19:27,452:INFO:_display_container: 2
2023-06-26 10:19:27,452:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8830, verbose=0, warm_start=False)
2023-06-26 10:19:27,452:INFO:create_model() successfully completed......................................
2023-06-26 10:19:27,524:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:27,524:INFO:Creating metrics dataframe
2023-06-26 10:19:27,538:INFO:Initializing Extreme Gradient Boosting
2023-06-26 10:19:27,538:INFO:Total runtime is 0.8239781697591146 minutes
2023-06-26 10:19:27,543:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:27,544:INFO:Initializing create_model()
2023-06-26 10:19:27,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:27,544:INFO:Checking exceptions
2023-06-26 10:19:27,544:INFO:Importing libraries
2023-06-26 10:19:27,544:INFO:Copying training dataset
2023-06-26 10:19:27,548:INFO:Defining folds
2023-06-26 10:19:27,548:INFO:Declaring metric variables
2023-06-26 10:19:27,551:INFO:Importing untrained model
2023-06-26 10:19:27,556:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 10:19:27,567:INFO:Starting cross validation
2023-06-26 10:19:27,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:31,673:INFO:Calculating mean and std
2023-06-26 10:19:31,673:INFO:Creating metrics dataframe
2023-06-26 10:19:32,033:INFO:Uploading results into container
2023-06-26 10:19:32,034:INFO:Uploading model into container now
2023-06-26 10:19:32,034:INFO:_master_model_container: 13
2023-06-26 10:19:32,034:INFO:_display_container: 2
2023-06-26 10:19:32,035:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 10:19:32,035:INFO:create_model() successfully completed......................................
2023-06-26 10:19:32,120:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:32,121:INFO:Creating metrics dataframe
2023-06-26 10:19:32,141:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 10:19:32,142:INFO:Total runtime is 0.9007213672002157 minutes
2023-06-26 10:19:32,148:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:32,149:INFO:Initializing create_model()
2023-06-26 10:19:32,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:32,149:INFO:Checking exceptions
2023-06-26 10:19:32,149:INFO:Importing libraries
2023-06-26 10:19:32,149:INFO:Copying training dataset
2023-06-26 10:19:32,157:INFO:Defining folds
2023-06-26 10:19:32,158:INFO:Declaring metric variables
2023-06-26 10:19:32,163:INFO:Importing untrained model
2023-06-26 10:19:32,167:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 10:19:32,179:INFO:Starting cross validation
2023-06-26 10:19:32,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:37,012:INFO:Calculating mean and std
2023-06-26 10:19:37,014:INFO:Creating metrics dataframe
2023-06-26 10:19:37,385:INFO:Uploading results into container
2023-06-26 10:19:37,386:INFO:Uploading model into container now
2023-06-26 10:19:37,386:INFO:_master_model_container: 14
2023-06-26 10:19:37,386:INFO:_display_container: 2
2023-06-26 10:19:37,387:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8830, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 10:19:37,387:INFO:create_model() successfully completed......................................
2023-06-26 10:19:37,461:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:37,461:INFO:Creating metrics dataframe
2023-06-26 10:19:37,476:INFO:Initializing Dummy Classifier
2023-06-26 10:19:37,476:INFO:Total runtime is 0.9896126508712768 minutes
2023-06-26 10:19:37,480:INFO:SubProcess create_model() called ==================================
2023-06-26 10:19:37,481:INFO:Initializing create_model()
2023-06-26 10:19:37,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7522C0040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:37,481:INFO:Checking exceptions
2023-06-26 10:19:37,481:INFO:Importing libraries
2023-06-26 10:19:37,481:INFO:Copying training dataset
2023-06-26 10:19:37,484:INFO:Defining folds
2023-06-26 10:19:37,485:INFO:Declaring metric variables
2023-06-26 10:19:37,488:INFO:Importing untrained model
2023-06-26 10:19:37,494:INFO:Dummy Classifier Imported successfully
2023-06-26 10:19:37,503:INFO:Starting cross validation
2023-06-26 10:19:37,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:19:37,698:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:37,698:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:38,285:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:38,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:38,351:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:38,359:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:38,963:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:39,017:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:19:41,060:INFO:Calculating mean and std
2023-06-26 10:19:41,061:INFO:Creating metrics dataframe
2023-06-26 10:19:41,429:INFO:Uploading results into container
2023-06-26 10:19:41,429:INFO:Uploading model into container now
2023-06-26 10:19:41,430:INFO:_master_model_container: 15
2023-06-26 10:19:41,430:INFO:_display_container: 2
2023-06-26 10:19:41,431:INFO:DummyClassifier(constant=None, random_state=8830, strategy='prior')
2023-06-26 10:19:41,431:INFO:create_model() successfully completed......................................
2023-06-26 10:19:41,505:INFO:SubProcess create_model() end ==================================
2023-06-26 10:19:41,505:INFO:Creating metrics dataframe
2023-06-26 10:19:41,527:INFO:Initializing create_model()
2023-06-26 10:19:41,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:19:41,527:INFO:Checking exceptions
2023-06-26 10:19:41,529:INFO:Importing libraries
2023-06-26 10:19:41,530:INFO:Copying training dataset
2023-06-26 10:19:41,533:INFO:Defining folds
2023-06-26 10:19:41,533:INFO:Declaring metric variables
2023-06-26 10:19:41,533:INFO:Importing untrained model
2023-06-26 10:19:41,533:INFO:Declaring custom model
2023-06-26 10:19:41,534:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 10:19:41,534:INFO:Cross validation set to False
2023-06-26 10:19:41,534:INFO:Fitting Model
2023-06-26 10:19:41,935:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:19:41,935:INFO:create_model() successfully completed......................................
2023-06-26 10:19:42,041:INFO:_master_model_container: 15
2023-06-26 10:19:42,042:INFO:_display_container: 2
2023-06-26 10:19:42,042:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:19:42,042:INFO:compare_models() successfully completed......................................
2023-06-26 10:19:42,043:INFO:Initializing evaluate_model()
2023-06-26 10:19:42,043:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-26 10:19:42,083:INFO:Initializing plot_model()
2023-06-26 10:19:42,083:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, system=True)
2023-06-26 10:19:42,083:INFO:Checking exceptions
2023-06-26 10:19:42,085:INFO:Preloading libraries
2023-06-26 10:19:42,085:INFO:Copying training dataset
2023-06-26 10:19:42,085:INFO:Plot type: pipeline
2023-06-26 10:19:42,584:INFO:Visual Rendered Successfully
2023-06-26 10:19:42,659:INFO:plot_model() successfully completed......................................
2023-06-26 10:20:01,769:INFO:Initializing compare_models()
2023-06-26 10:20:01,769:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 10:20:01,769:INFO:Checking exceptions
2023-06-26 10:20:01,771:INFO:Preparing display monitor
2023-06-26 10:20:01,797:INFO:Initializing Logistic Regression
2023-06-26 10:20:01,797:INFO:Total runtime is 0.0 minutes
2023-06-26 10:20:01,802:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:01,802:INFO:Initializing create_model()
2023-06-26 10:20:01,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:01,803:INFO:Checking exceptions
2023-06-26 10:20:01,803:INFO:Importing libraries
2023-06-26 10:20:01,803:INFO:Copying training dataset
2023-06-26 10:20:01,807:INFO:Defining folds
2023-06-26 10:20:01,807:INFO:Declaring metric variables
2023-06-26 10:20:01,811:INFO:Importing untrained model
2023-06-26 10:20:01,816:INFO:Logistic Regression Imported successfully
2023-06-26 10:20:01,824:INFO:Starting cross validation
2023-06-26 10:20:01,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:05,507:INFO:Calculating mean and std
2023-06-26 10:20:05,508:INFO:Creating metrics dataframe
2023-06-26 10:20:05,884:INFO:Uploading results into container
2023-06-26 10:20:05,885:INFO:Uploading model into container now
2023-06-26 10:20:05,885:INFO:_master_model_container: 16
2023-06-26 10:20:05,885:INFO:_display_container: 3
2023-06-26 10:20:05,885:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8830, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 10:20:05,885:INFO:create_model() successfully completed......................................
2023-06-26 10:20:05,960:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:05,960:INFO:Creating metrics dataframe
2023-06-26 10:20:05,969:INFO:Initializing K Neighbors Classifier
2023-06-26 10:20:05,970:INFO:Total runtime is 0.06956022183100383 minutes
2023-06-26 10:20:05,975:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:05,975:INFO:Initializing create_model()
2023-06-26 10:20:05,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:05,976:INFO:Checking exceptions
2023-06-26 10:20:05,976:INFO:Importing libraries
2023-06-26 10:20:05,976:INFO:Copying training dataset
2023-06-26 10:20:05,979:INFO:Defining folds
2023-06-26 10:20:05,979:INFO:Declaring metric variables
2023-06-26 10:20:05,982:INFO:Importing untrained model
2023-06-26 10:20:05,987:INFO:K Neighbors Classifier Imported successfully
2023-06-26 10:20:05,996:INFO:Starting cross validation
2023-06-26 10:20:05,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:09,662:INFO:Calculating mean and std
2023-06-26 10:20:09,663:INFO:Creating metrics dataframe
2023-06-26 10:20:10,031:INFO:Uploading results into container
2023-06-26 10:20:10,032:INFO:Uploading model into container now
2023-06-26 10:20:10,033:INFO:_master_model_container: 17
2023-06-26 10:20:10,033:INFO:_display_container: 3
2023-06-26 10:20:10,033:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 10:20:10,035:INFO:create_model() successfully completed......................................
2023-06-26 10:20:10,109:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:10,109:INFO:Creating metrics dataframe
2023-06-26 10:20:10,118:INFO:Initializing Naive Bayes
2023-06-26 10:20:10,118:INFO:Total runtime is 0.13868374824523927 minutes
2023-06-26 10:20:10,123:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:10,124:INFO:Initializing create_model()
2023-06-26 10:20:10,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:10,124:INFO:Checking exceptions
2023-06-26 10:20:10,124:INFO:Importing libraries
2023-06-26 10:20:10,124:INFO:Copying training dataset
2023-06-26 10:20:10,128:INFO:Defining folds
2023-06-26 10:20:10,128:INFO:Declaring metric variables
2023-06-26 10:20:10,131:INFO:Importing untrained model
2023-06-26 10:20:10,136:INFO:Naive Bayes Imported successfully
2023-06-26 10:20:10,146:INFO:Starting cross validation
2023-06-26 10:20:10,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:13,641:INFO:Calculating mean and std
2023-06-26 10:20:13,642:INFO:Creating metrics dataframe
2023-06-26 10:20:14,014:INFO:Uploading results into container
2023-06-26 10:20:14,015:INFO:Uploading model into container now
2023-06-26 10:20:14,015:INFO:_master_model_container: 18
2023-06-26 10:20:14,015:INFO:_display_container: 3
2023-06-26 10:20:14,015:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 10:20:14,015:INFO:create_model() successfully completed......................................
2023-06-26 10:20:14,088:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:14,088:INFO:Creating metrics dataframe
2023-06-26 10:20:14,099:INFO:Initializing Decision Tree Classifier
2023-06-26 10:20:14,100:INFO:Total runtime is 0.20505526860555012 minutes
2023-06-26 10:20:14,104:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:14,104:INFO:Initializing create_model()
2023-06-26 10:20:14,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:14,105:INFO:Checking exceptions
2023-06-26 10:20:14,105:INFO:Importing libraries
2023-06-26 10:20:14,105:INFO:Copying training dataset
2023-06-26 10:20:14,109:INFO:Defining folds
2023-06-26 10:20:14,109:INFO:Declaring metric variables
2023-06-26 10:20:14,112:INFO:Importing untrained model
2023-06-26 10:20:14,117:INFO:Decision Tree Classifier Imported successfully
2023-06-26 10:20:14,129:INFO:Starting cross validation
2023-06-26 10:20:14,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:17,623:INFO:Calculating mean and std
2023-06-26 10:20:17,624:INFO:Creating metrics dataframe
2023-06-26 10:20:18,005:INFO:Uploading results into container
2023-06-26 10:20:18,006:INFO:Uploading model into container now
2023-06-26 10:20:18,006:INFO:_master_model_container: 19
2023-06-26 10:20:18,007:INFO:_display_container: 3
2023-06-26 10:20:18,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8830, splitter='best')
2023-06-26 10:20:18,007:INFO:create_model() successfully completed......................................
2023-06-26 10:20:18,081:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:18,081:INFO:Creating metrics dataframe
2023-06-26 10:20:18,091:INFO:Initializing SVM - Linear Kernel
2023-06-26 10:20:18,091:INFO:Total runtime is 0.2715630531311035 minutes
2023-06-26 10:20:18,094:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:18,095:INFO:Initializing create_model()
2023-06-26 10:20:18,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:18,095:INFO:Checking exceptions
2023-06-26 10:20:18,095:INFO:Importing libraries
2023-06-26 10:20:18,096:INFO:Copying training dataset
2023-06-26 10:20:18,099:INFO:Defining folds
2023-06-26 10:20:18,100:INFO:Declaring metric variables
2023-06-26 10:20:18,102:INFO:Importing untrained model
2023-06-26 10:20:18,107:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 10:20:18,114:INFO:Starting cross validation
2023-06-26 10:20:18,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:18,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,328:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,334:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:18,949:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:19,011:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:19,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:19,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 10:20:21,675:INFO:Calculating mean and std
2023-06-26 10:20:21,676:INFO:Creating metrics dataframe
2023-06-26 10:20:22,053:INFO:Uploading results into container
2023-06-26 10:20:22,054:INFO:Uploading model into container now
2023-06-26 10:20:22,055:INFO:_master_model_container: 20
2023-06-26 10:20:22,055:INFO:_display_container: 3
2023-06-26 10:20:22,056:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8830, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 10:20:22,056:INFO:create_model() successfully completed......................................
2023-06-26 10:20:22,130:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:22,130:INFO:Creating metrics dataframe
2023-06-26 10:20:22,140:INFO:Initializing Ridge Classifier
2023-06-26 10:20:22,140:INFO:Total runtime is 0.33905246257781985 minutes
2023-06-26 10:20:22,144:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:22,145:INFO:Initializing create_model()
2023-06-26 10:20:22,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:22,145:INFO:Checking exceptions
2023-06-26 10:20:22,145:INFO:Importing libraries
2023-06-26 10:20:22,145:INFO:Copying training dataset
2023-06-26 10:20:22,149:INFO:Defining folds
2023-06-26 10:20:22,149:INFO:Declaring metric variables
2023-06-26 10:20:22,151:INFO:Importing untrained model
2023-06-26 10:20:22,155:INFO:Ridge Classifier Imported successfully
2023-06-26 10:20:22,164:INFO:Starting cross validation
2023-06-26 10:20:22,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:22,284:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,291:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,309:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,915:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,916:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:22,927:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:23,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:23,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:23,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 10:20:25,618:INFO:Calculating mean and std
2023-06-26 10:20:25,619:INFO:Creating metrics dataframe
2023-06-26 10:20:26,091:INFO:Uploading results into container
2023-06-26 10:20:26,092:INFO:Uploading model into container now
2023-06-26 10:20:26,093:INFO:_master_model_container: 21
2023-06-26 10:20:26,093:INFO:_display_container: 3
2023-06-26 10:20:26,094:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8830, solver='auto',
                tol=0.0001)
2023-06-26 10:20:26,095:INFO:create_model() successfully completed......................................
2023-06-26 10:20:26,174:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:26,175:INFO:Creating metrics dataframe
2023-06-26 10:20:26,185:INFO:Initializing Random Forest Classifier
2023-06-26 10:20:26,185:INFO:Total runtime is 0.40646544694900516 minutes
2023-06-26 10:20:26,190:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:26,191:INFO:Initializing create_model()
2023-06-26 10:20:26,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:26,191:INFO:Checking exceptions
2023-06-26 10:20:26,191:INFO:Importing libraries
2023-06-26 10:20:26,191:INFO:Copying training dataset
2023-06-26 10:20:26,196:INFO:Defining folds
2023-06-26 10:20:26,196:INFO:Declaring metric variables
2023-06-26 10:20:26,200:INFO:Importing untrained model
2023-06-26 10:20:26,208:INFO:Random Forest Classifier Imported successfully
2023-06-26 10:20:26,215:INFO:Starting cross validation
2023-06-26 10:20:26,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:30,699:INFO:Calculating mean and std
2023-06-26 10:20:30,701:INFO:Creating metrics dataframe
2023-06-26 10:20:31,076:INFO:Uploading results into container
2023-06-26 10:20:31,077:INFO:Uploading model into container now
2023-06-26 10:20:31,077:INFO:_master_model_container: 22
2023-06-26 10:20:31,077:INFO:_display_container: 3
2023-06-26 10:20:31,078:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8830, verbose=0, warm_start=False)
2023-06-26 10:20:31,078:INFO:create_model() successfully completed......................................
2023-06-26 10:20:31,149:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:31,149:INFO:Creating metrics dataframe
2023-06-26 10:20:31,163:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 10:20:31,163:INFO:Total runtime is 0.48943517605463666 minutes
2023-06-26 10:20:31,167:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:31,167:INFO:Initializing create_model()
2023-06-26 10:20:31,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:31,167:INFO:Checking exceptions
2023-06-26 10:20:31,168:INFO:Importing libraries
2023-06-26 10:20:31,168:INFO:Copying training dataset
2023-06-26 10:20:31,174:INFO:Defining folds
2023-06-26 10:20:31,174:INFO:Declaring metric variables
2023-06-26 10:20:31,177:INFO:Importing untrained model
2023-06-26 10:20:31,182:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 10:20:31,196:INFO:Starting cross validation
2023-06-26 10:20:31,197:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:35,483:INFO:Calculating mean and std
2023-06-26 10:20:35,484:INFO:Creating metrics dataframe
2023-06-26 10:20:35,884:INFO:Uploading results into container
2023-06-26 10:20:35,884:INFO:Uploading model into container now
2023-06-26 10:20:35,885:INFO:_master_model_container: 23
2023-06-26 10:20:35,885:INFO:_display_container: 3
2023-06-26 10:20:35,885:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 10:20:35,885:INFO:create_model() successfully completed......................................
2023-06-26 10:20:35,970:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:35,971:INFO:Creating metrics dataframe
2023-06-26 10:20:35,983:INFO:Initializing Ada Boost Classifier
2023-06-26 10:20:35,983:INFO:Total runtime is 0.5697627504666647 minutes
2023-06-26 10:20:35,987:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:35,988:INFO:Initializing create_model()
2023-06-26 10:20:35,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:35,988:INFO:Checking exceptions
2023-06-26 10:20:35,988:INFO:Importing libraries
2023-06-26 10:20:35,988:INFO:Copying training dataset
2023-06-26 10:20:35,992:INFO:Defining folds
2023-06-26 10:20:35,992:INFO:Declaring metric variables
2023-06-26 10:20:35,998:INFO:Importing untrained model
2023-06-26 10:20:36,003:INFO:Ada Boost Classifier Imported successfully
2023-06-26 10:20:36,011:INFO:Starting cross validation
2023-06-26 10:20:36,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:39,847:INFO:Calculating mean and std
2023-06-26 10:20:39,848:INFO:Creating metrics dataframe
2023-06-26 10:20:40,259:INFO:Uploading results into container
2023-06-26 10:20:40,260:INFO:Uploading model into container now
2023-06-26 10:20:40,261:INFO:_master_model_container: 24
2023-06-26 10:20:40,261:INFO:_display_container: 3
2023-06-26 10:20:40,262:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8830)
2023-06-26 10:20:40,262:INFO:create_model() successfully completed......................................
2023-06-26 10:20:40,338:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:40,338:INFO:Creating metrics dataframe
2023-06-26 10:20:40,349:INFO:Initializing Gradient Boosting Classifier
2023-06-26 10:20:40,349:INFO:Total runtime is 0.6425330956776938 minutes
2023-06-26 10:20:40,353:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:40,353:INFO:Initializing create_model()
2023-06-26 10:20:40,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:40,354:INFO:Checking exceptions
2023-06-26 10:20:40,354:INFO:Importing libraries
2023-06-26 10:20:40,354:INFO:Copying training dataset
2023-06-26 10:20:40,357:INFO:Defining folds
2023-06-26 10:20:40,358:INFO:Declaring metric variables
2023-06-26 10:20:40,360:INFO:Importing untrained model
2023-06-26 10:20:40,364:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 10:20:40,373:INFO:Starting cross validation
2023-06-26 10:20:40,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:44,466:INFO:Calculating mean and std
2023-06-26 10:20:44,467:INFO:Creating metrics dataframe
2023-06-26 10:20:44,864:INFO:Uploading results into container
2023-06-26 10:20:44,865:INFO:Uploading model into container now
2023-06-26 10:20:44,865:INFO:_master_model_container: 25
2023-06-26 10:20:44,865:INFO:_display_container: 3
2023-06-26 10:20:44,866:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8830, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 10:20:44,866:INFO:create_model() successfully completed......................................
2023-06-26 10:20:44,940:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:44,940:INFO:Creating metrics dataframe
2023-06-26 10:20:44,954:INFO:Initializing Linear Discriminant Analysis
2023-06-26 10:20:44,954:INFO:Total runtime is 0.719291122754415 minutes
2023-06-26 10:20:44,958:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:44,958:INFO:Initializing create_model()
2023-06-26 10:20:44,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:44,959:INFO:Checking exceptions
2023-06-26 10:20:44,959:INFO:Importing libraries
2023-06-26 10:20:44,959:INFO:Copying training dataset
2023-06-26 10:20:44,962:INFO:Defining folds
2023-06-26 10:20:44,962:INFO:Declaring metric variables
2023-06-26 10:20:44,965:INFO:Importing untrained model
2023-06-26 10:20:44,969:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 10:20:44,977:INFO:Starting cross validation
2023-06-26 10:20:44,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:48,699:INFO:Calculating mean and std
2023-06-26 10:20:48,700:INFO:Creating metrics dataframe
2023-06-26 10:20:49,107:INFO:Uploading results into container
2023-06-26 10:20:49,107:INFO:Uploading model into container now
2023-06-26 10:20:49,108:INFO:_master_model_container: 26
2023-06-26 10:20:49,108:INFO:_display_container: 3
2023-06-26 10:20:49,108:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:20:49,108:INFO:create_model() successfully completed......................................
2023-06-26 10:20:49,188:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:49,188:INFO:Creating metrics dataframe
2023-06-26 10:20:49,198:INFO:Initializing Extra Trees Classifier
2023-06-26 10:20:49,198:INFO:Total runtime is 0.7900282939275107 minutes
2023-06-26 10:20:49,201:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:49,202:INFO:Initializing create_model()
2023-06-26 10:20:49,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:49,202:INFO:Checking exceptions
2023-06-26 10:20:49,202:INFO:Importing libraries
2023-06-26 10:20:49,202:INFO:Copying training dataset
2023-06-26 10:20:49,207:INFO:Defining folds
2023-06-26 10:20:49,208:INFO:Declaring metric variables
2023-06-26 10:20:49,211:INFO:Importing untrained model
2023-06-26 10:20:49,216:INFO:Extra Trees Classifier Imported successfully
2023-06-26 10:20:49,224:INFO:Starting cross validation
2023-06-26 10:20:49,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:53,211:INFO:Calculating mean and std
2023-06-26 10:20:53,212:INFO:Creating metrics dataframe
2023-06-26 10:20:53,633:INFO:Uploading results into container
2023-06-26 10:20:53,634:INFO:Uploading model into container now
2023-06-26 10:20:53,636:INFO:_master_model_container: 27
2023-06-26 10:20:53,636:INFO:_display_container: 3
2023-06-26 10:20:53,637:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8830, verbose=0, warm_start=False)
2023-06-26 10:20:53,637:INFO:create_model() successfully completed......................................
2023-06-26 10:20:53,711:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:53,711:INFO:Creating metrics dataframe
2023-06-26 10:20:53,725:INFO:Initializing Extreme Gradient Boosting
2023-06-26 10:20:53,725:INFO:Total runtime is 0.865467421213786 minutes
2023-06-26 10:20:53,729:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:53,730:INFO:Initializing create_model()
2023-06-26 10:20:53,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:53,730:INFO:Checking exceptions
2023-06-26 10:20:53,730:INFO:Importing libraries
2023-06-26 10:20:53,730:INFO:Copying training dataset
2023-06-26 10:20:53,735:INFO:Defining folds
2023-06-26 10:20:53,736:INFO:Declaring metric variables
2023-06-26 10:20:53,741:INFO:Importing untrained model
2023-06-26 10:20:53,746:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 10:20:53,755:INFO:Starting cross validation
2023-06-26 10:20:53,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:20:57,928:INFO:Calculating mean and std
2023-06-26 10:20:57,929:INFO:Creating metrics dataframe
2023-06-26 10:20:58,328:INFO:Uploading results into container
2023-06-26 10:20:58,328:INFO:Uploading model into container now
2023-06-26 10:20:58,329:INFO:_master_model_container: 28
2023-06-26 10:20:58,329:INFO:_display_container: 3
2023-06-26 10:20:58,330:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 10:20:58,331:INFO:create_model() successfully completed......................................
2023-06-26 10:20:58,404:INFO:SubProcess create_model() end ==================================
2023-06-26 10:20:58,404:INFO:Creating metrics dataframe
2023-06-26 10:20:58,415:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 10:20:58,415:INFO:Total runtime is 0.9436370293299359 minutes
2023-06-26 10:20:58,420:INFO:SubProcess create_model() called ==================================
2023-06-26 10:20:58,420:INFO:Initializing create_model()
2023-06-26 10:20:58,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:20:58,421:INFO:Checking exceptions
2023-06-26 10:20:58,421:INFO:Importing libraries
2023-06-26 10:20:58,421:INFO:Copying training dataset
2023-06-26 10:20:58,425:INFO:Defining folds
2023-06-26 10:20:58,425:INFO:Declaring metric variables
2023-06-26 10:20:58,428:INFO:Importing untrained model
2023-06-26 10:20:58,431:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 10:20:58,440:INFO:Starting cross validation
2023-06-26 10:20:58,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:21:02,577:INFO:Calculating mean and std
2023-06-26 10:21:02,578:INFO:Creating metrics dataframe
2023-06-26 10:21:02,983:INFO:Uploading results into container
2023-06-26 10:21:02,983:INFO:Uploading model into container now
2023-06-26 10:21:02,984:INFO:_master_model_container: 29
2023-06-26 10:21:02,985:INFO:_display_container: 3
2023-06-26 10:21:02,985:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8830, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 10:21:02,986:INFO:create_model() successfully completed......................................
2023-06-26 10:21:03,064:INFO:SubProcess create_model() end ==================================
2023-06-26 10:21:03,064:INFO:Creating metrics dataframe
2023-06-26 10:21:03,077:INFO:Initializing Dummy Classifier
2023-06-26 10:21:03,077:INFO:Total runtime is 1.0213431676228844 minutes
2023-06-26 10:21:03,081:INFO:SubProcess create_model() called ==================================
2023-06-26 10:21:03,081:INFO:Initializing create_model()
2023-06-26 10:21:03,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7541675B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:21:03,082:INFO:Checking exceptions
2023-06-26 10:21:03,082:INFO:Importing libraries
2023-06-26 10:21:03,082:INFO:Copying training dataset
2023-06-26 10:21:03,087:INFO:Defining folds
2023-06-26 10:21:03,088:INFO:Declaring metric variables
2023-06-26 10:21:03,091:INFO:Importing untrained model
2023-06-26 10:21:03,096:INFO:Dummy Classifier Imported successfully
2023-06-26 10:21:03,107:INFO:Starting cross validation
2023-06-26 10:21:03,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:21:03,282:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:03,294:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:03,296:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:03,334:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,116:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,151:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:04,852:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 10:21:07,119:INFO:Calculating mean and std
2023-06-26 10:21:07,120:INFO:Creating metrics dataframe
2023-06-26 10:21:07,502:INFO:Uploading results into container
2023-06-26 10:21:07,503:INFO:Uploading model into container now
2023-06-26 10:21:07,504:INFO:_master_model_container: 30
2023-06-26 10:21:07,504:INFO:_display_container: 3
2023-06-26 10:21:07,505:INFO:DummyClassifier(constant=None, random_state=8830, strategy='prior')
2023-06-26 10:21:07,505:INFO:create_model() successfully completed......................................
2023-06-26 10:21:07,582:INFO:SubProcess create_model() end ==================================
2023-06-26 10:21:07,582:INFO:Creating metrics dataframe
2023-06-26 10:21:07,605:INFO:Initializing create_model()
2023-06-26 10:21:07,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:21:07,605:INFO:Checking exceptions
2023-06-26 10:21:07,607:INFO:Importing libraries
2023-06-26 10:21:07,607:INFO:Copying training dataset
2023-06-26 10:21:07,610:INFO:Defining folds
2023-06-26 10:21:07,610:INFO:Declaring metric variables
2023-06-26 10:21:07,610:INFO:Importing untrained model
2023-06-26 10:21:07,610:INFO:Declaring custom model
2023-06-26 10:21:07,613:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 10:21:07,614:INFO:Cross validation set to False
2023-06-26 10:21:07,614:INFO:Fitting Model
2023-06-26 10:21:08,059:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:21:08,059:INFO:create_model() successfully completed......................................
2023-06-26 10:21:08,180:INFO:_master_model_container: 30
2023-06-26 10:21:08,181:INFO:_display_container: 3
2023-06-26 10:21:08,181:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:21:08,181:INFO:compare_models() successfully completed......................................
2023-06-26 10:27:50,106:INFO:Initializing create_model()
2023-06-26 10:27:50,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 10:27:50,107:INFO:Checking exceptions
2023-06-26 10:27:50,122:INFO:Importing libraries
2023-06-26 10:27:50,122:INFO:Copying training dataset
2023-06-26 10:27:50,127:INFO:Defining folds
2023-06-26 10:27:50,127:INFO:Declaring metric variables
2023-06-26 10:27:50,131:INFO:Importing untrained model
2023-06-26 10:27:50,135:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 10:27:50,146:INFO:Starting cross validation
2023-06-26 10:27:50,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 10:27:58,435:INFO:Calculating mean and std
2023-06-26 10:27:58,436:INFO:Creating metrics dataframe
2023-06-26 10:27:58,441:INFO:Finalizing model
2023-06-26 10:27:58,906:INFO:Uploading results into container
2023-06-26 10:27:58,907:INFO:Uploading model into container now
2023-06-26 10:27:58,919:INFO:_master_model_container: 31
2023-06-26 10:27:58,920:INFO:_display_container: 4
2023-06-26 10:27:58,920:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 10:27:58,920:INFO:create_model() successfully completed......................................
2023-06-26 10:27:59,006:INFO:Initializing predict_model()
2023-06-26 10:27:59,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75399EF50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E757583B50>)
2023-06-26 10:27:59,006:INFO:Checking exceptions
2023-06-26 10:27:59,007:INFO:Preloading libraries
2023-06-26 10:27:59,008:INFO:Set up data.
2023-06-26 10:27:59,012:INFO:Set up index.
2023-06-26 11:04:48,474:INFO:PyCaret ClassificationExperiment
2023-06-26 11:04:48,474:INFO:Logging name: clf-default-name
2023-06-26 11:04:48,475:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-26 11:04:48,475:INFO:version 3.0.2
2023-06-26 11:04:48,475:INFO:Initializing setup()
2023-06-26 11:04:48,475:INFO:self.USI: 3688
2023-06-26 11:04:48,475:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'USI', 'X_train', 'exp_name_log', '_ml_usecase', 'pipeline', 'y', 'target_param', 'y_train', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'y_test', 'data', 'idx', 'gpu_param', 'X', 'exp_id', 'n_jobs_param', 'seed', 'log_plots_param', 'is_multiclass', 'html_param'}
2023-06-26 11:04:48,475:INFO:Checking environment
2023-06-26 11:04:48,475:INFO:python_version: 3.10.5
2023-06-26 11:04:48,475:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-26 11:04:48,475:INFO:machine: AMD64
2023-06-26 11:04:48,476:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-26 11:04:48,479:INFO:Memory: svmem(total=17130000384, available=9171656704, percent=46.5, used=7958343680, free=9171656704)
2023-06-26 11:04:48,479:INFO:Physical Core: 4
2023-06-26 11:04:48,479:INFO:Logical Core: 4
2023-06-26 11:04:48,479:INFO:Checking libraries
2023-06-26 11:04:48,479:INFO:System:
2023-06-26 11:04:48,480:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-26 11:04:48,480:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-26 11:04:48,480:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-26 11:04:48,480:INFO:PyCaret required dependencies:
2023-06-26 11:04:48,480:INFO:                 pip: 23.0.1
2023-06-26 11:04:48,480:INFO:          setuptools: 58.1.0
2023-06-26 11:04:48,480:INFO:             pycaret: 3.0.2
2023-06-26 11:04:48,480:INFO:             IPython: 8.9.0
2023-06-26 11:04:48,480:INFO:          ipywidgets: 8.0.6
2023-06-26 11:04:48,480:INFO:                tqdm: 4.65.0
2023-06-26 11:04:48,480:INFO:               numpy: 1.23.5
2023-06-26 11:04:48,480:INFO:              pandas: 1.5.3
2023-06-26 11:04:48,480:INFO:              jinja2: 3.1.2
2023-06-26 11:04:48,480:INFO:               scipy: 1.10.1
2023-06-26 11:04:48,480:INFO:              joblib: 1.2.0
2023-06-26 11:04:48,480:INFO:             sklearn: 1.2.2
2023-06-26 11:04:48,481:INFO:                pyod: 1.0.9
2023-06-26 11:04:48,481:INFO:            imblearn: 0.10.1
2023-06-26 11:04:48,481:INFO:   category_encoders: 2.6.1
2023-06-26 11:04:48,481:INFO:            lightgbm: 3.3.5
2023-06-26 11:04:48,481:INFO:               numba: 0.57.0
2023-06-26 11:04:48,481:INFO:            requests: 2.28.2
2023-06-26 11:04:48,481:INFO:          matplotlib: 3.7.1
2023-06-26 11:04:48,481:INFO:          scikitplot: 0.3.7
2023-06-26 11:04:48,481:INFO:         yellowbrick: 1.5
2023-06-26 11:04:48,481:INFO:              plotly: 5.15.0
2023-06-26 11:04:48,481:INFO:             kaleido: 0.2.1
2023-06-26 11:04:48,481:INFO:         statsmodels: 0.14.0
2023-06-26 11:04:48,481:INFO:              sktime: 0.17.0
2023-06-26 11:04:48,481:INFO:               tbats: 1.1.3
2023-06-26 11:04:48,481:INFO:            pmdarima: 2.0.3
2023-06-26 11:04:48,481:INFO:              psutil: 5.9.4
2023-06-26 11:04:48,481:INFO:PyCaret optional dependencies:
2023-06-26 11:04:48,481:INFO:                shap: Not installed
2023-06-26 11:04:48,482:INFO:           interpret: 0.4.2
2023-06-26 11:04:48,482:INFO:                umap: Not installed
2023-06-26 11:04:48,482:INFO:    pandas_profiling: Not installed
2023-06-26 11:04:48,482:INFO:  explainerdashboard: Not installed
2023-06-26 11:04:48,482:INFO:             autoviz: Not installed
2023-06-26 11:04:48,482:INFO:           fairlearn: Not installed
2023-06-26 11:04:48,482:INFO:             xgboost: 1.7.5
2023-06-26 11:04:48,482:INFO:            catboost: Not installed
2023-06-26 11:04:48,482:INFO:              kmodes: Not installed
2023-06-26 11:04:48,482:INFO:             mlxtend: Not installed
2023-06-26 11:04:48,482:INFO:       statsforecast: Not installed
2023-06-26 11:04:48,482:INFO:        tune_sklearn: Not installed
2023-06-26 11:04:48,482:INFO:                 ray: Not installed
2023-06-26 11:04:48,482:INFO:            hyperopt: 0.2.7
2023-06-26 11:04:48,482:INFO:              optuna: Not installed
2023-06-26 11:04:48,482:INFO:               skopt: Not installed
2023-06-26 11:04:48,482:INFO:              mlflow: Not installed
2023-06-26 11:04:48,482:INFO:              gradio: Not installed
2023-06-26 11:04:48,483:INFO:             fastapi: Not installed
2023-06-26 11:04:48,483:INFO:             uvicorn: Not installed
2023-06-26 11:04:48,483:INFO:              m2cgen: Not installed
2023-06-26 11:04:48,483:INFO:           evidently: Not installed
2023-06-26 11:04:48,483:INFO:               fugue: Not installed
2023-06-26 11:04:48,483:INFO:           streamlit: Not installed
2023-06-26 11:04:48,483:INFO:             prophet: 1.1.4
2023-06-26 11:04:48,483:INFO:None
2023-06-26 11:04:48,483:INFO:Set up data.
2023-06-26 11:04:48,488:INFO:Set up train/test split.
2023-06-26 11:04:48,492:INFO:Set up index.
2023-06-26 11:04:48,492:INFO:Set up folding strategy.
2023-06-26 11:04:48,493:INFO:Assigning column types.
2023-06-26 11:04:48,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-26 11:04:48,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,573:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:48,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:48,626:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,657:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:48,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:48,661:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-26 11:04:48,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,742:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:48,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:48,799:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 11:04:48,834:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:48,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:48,838:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-26 11:04:48,968:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:48,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:49,052:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:49,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:49,056:INFO:Preparing preprocessing pipeline...
2023-06-26 11:04:49,057:INFO:Set up label encoding.
2023-06-26 11:04:49,057:INFO:Set up simple imputation.
2023-06-26 11:04:49,058:INFO:Set up column name cleaning.
2023-06-26 11:04:49,129:INFO:Finished creating preprocessing pipeline.
2023-06-26 11:04:49,134:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-26 11:04:49,134:INFO:Creating final display dataframe.
2023-06-26 11:04:49,348:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          5504
1                        Target                    day5_label
2                   Target type                    Multiclass
3                Target mapping  buy: 0, maintain: 1, sell: 2
4           Original data shape                      (981, 8)
5        Transformed data shape                      (981, 8)
6   Transformed train set shape                      (686, 8)
7    Transformed test set shape                      (295, 8)
8              Numeric features                             7
9                    Preprocess                          True
10              Imputation type                        simple
11           Numeric imputation                          mean
12       Categorical imputation                          mode
13               Fold Generator               StratifiedKFold
14                  Fold Number                            10
15                     CPU Jobs                            -1
16                      Use GPU                         False
17               Log Experiment                         False
18              Experiment Name              clf-default-name
19                          USI                          3688
2023-06-26 11:04:49,435:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:49,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:49,520:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 11:04:49,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 11:04:49,524:INFO:setup() successfully completed in 1.39s...............
2023-06-26 11:04:53,048:INFO:Initializing compare_models()
2023-06-26 11:04:53,048:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 11:04:53,048:INFO:Checking exceptions
2023-06-26 11:04:53,052:INFO:Preparing display monitor
2023-06-26 11:04:53,077:INFO:Initializing Logistic Regression
2023-06-26 11:04:53,077:INFO:Total runtime is 0.0 minutes
2023-06-26 11:04:53,081:INFO:SubProcess create_model() called ==================================
2023-06-26 11:04:53,082:INFO:Initializing create_model()
2023-06-26 11:04:53,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:04:53,082:INFO:Checking exceptions
2023-06-26 11:04:53,082:INFO:Importing libraries
2023-06-26 11:04:53,083:INFO:Copying training dataset
2023-06-26 11:04:53,089:INFO:Defining folds
2023-06-26 11:04:53,089:INFO:Declaring metric variables
2023-06-26 11:04:53,093:INFO:Importing untrained model
2023-06-26 11:04:53,098:INFO:Logistic Regression Imported successfully
2023-06-26 11:04:53,105:INFO:Starting cross validation
2023-06-26 11:04:53,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:04:56,746:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,809:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,881:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,883:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:56,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,444:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,445:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,550:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,552:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,554:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,555:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,559:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,600:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:57,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,096:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,137:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,139:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:04:58,143:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,163:INFO:Calculating mean and std
2023-06-26 11:05:00,164:INFO:Creating metrics dataframe
2023-06-26 11:05:00,534:INFO:Uploading results into container
2023-06-26 11:05:00,535:INFO:Uploading model into container now
2023-06-26 11:05:00,535:INFO:_master_model_container: 1
2023-06-26 11:05:00,535:INFO:_display_container: 2
2023-06-26 11:05:00,536:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5504, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 11:05:00,536:INFO:create_model() successfully completed......................................
2023-06-26 11:05:00,623:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:00,623:INFO:Creating metrics dataframe
2023-06-26 11:05:00,635:INFO:Initializing K Neighbors Classifier
2023-06-26 11:05:00,635:INFO:Total runtime is 0.1259583552678426 minutes
2023-06-26 11:05:00,638:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:00,638:INFO:Initializing create_model()
2023-06-26 11:05:00,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:00,639:INFO:Checking exceptions
2023-06-26 11:05:00,639:INFO:Importing libraries
2023-06-26 11:05:00,639:INFO:Copying training dataset
2023-06-26 11:05:00,645:INFO:Defining folds
2023-06-26 11:05:00,645:INFO:Declaring metric variables
2023-06-26 11:05:00,648:INFO:Importing untrained model
2023-06-26 11:05:00,652:INFO:K Neighbors Classifier Imported successfully
2023-06-26 11:05:00,660:INFO:Starting cross validation
2023-06-26 11:05:00,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:00,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,833:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,838:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,925:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,927:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:00,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,475:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,477:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,479:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,484:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,486:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,488:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,586:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,588:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,748:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:01,752:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,172:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,175:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,177:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,191:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:02,193:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,269:INFO:Calculating mean and std
2023-06-26 11:05:04,270:INFO:Creating metrics dataframe
2023-06-26 11:05:04,636:INFO:Uploading results into container
2023-06-26 11:05:04,636:INFO:Uploading model into container now
2023-06-26 11:05:04,637:INFO:_master_model_container: 2
2023-06-26 11:05:04,637:INFO:_display_container: 2
2023-06-26 11:05:04,638:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 11:05:04,638:INFO:create_model() successfully completed......................................
2023-06-26 11:05:04,718:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:04,718:INFO:Creating metrics dataframe
2023-06-26 11:05:04,728:INFO:Initializing Naive Bayes
2023-06-26 11:05:04,728:INFO:Total runtime is 0.19417361418406168 minutes
2023-06-26 11:05:04,731:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:04,732:INFO:Initializing create_model()
2023-06-26 11:05:04,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:04,732:INFO:Checking exceptions
2023-06-26 11:05:04,732:INFO:Importing libraries
2023-06-26 11:05:04,732:INFO:Copying training dataset
2023-06-26 11:05:04,736:INFO:Defining folds
2023-06-26 11:05:04,736:INFO:Declaring metric variables
2023-06-26 11:05:04,739:INFO:Importing untrained model
2023-06-26 11:05:04,743:INFO:Naive Bayes Imported successfully
2023-06-26 11:05:04,753:INFO:Starting cross validation
2023-06-26 11:05:04,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:04,897:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,899:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,960:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,963:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:04,968:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,468:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,472:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,504:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,516:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,518:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,534:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:05,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,073:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,078:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,085:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,086:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:06,088:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,118:INFO:Calculating mean and std
2023-06-26 11:05:08,119:INFO:Creating metrics dataframe
2023-06-26 11:05:08,493:INFO:Uploading results into container
2023-06-26 11:05:08,494:INFO:Uploading model into container now
2023-06-26 11:05:08,495:INFO:_master_model_container: 3
2023-06-26 11:05:08,495:INFO:_display_container: 2
2023-06-26 11:05:08,496:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 11:05:08,496:INFO:create_model() successfully completed......................................
2023-06-26 11:05:08,575:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:08,575:INFO:Creating metrics dataframe
2023-06-26 11:05:08,584:INFO:Initializing Decision Tree Classifier
2023-06-26 11:05:08,585:INFO:Total runtime is 0.25845951239267984 minutes
2023-06-26 11:05:08,589:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:08,589:INFO:Initializing create_model()
2023-06-26 11:05:08,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:08,590:INFO:Checking exceptions
2023-06-26 11:05:08,590:INFO:Importing libraries
2023-06-26 11:05:08,590:INFO:Copying training dataset
2023-06-26 11:05:08,595:INFO:Defining folds
2023-06-26 11:05:08,595:INFO:Declaring metric variables
2023-06-26 11:05:08,600:INFO:Importing untrained model
2023-06-26 11:05:08,604:INFO:Decision Tree Classifier Imported successfully
2023-06-26 11:05:08,613:INFO:Starting cross validation
2023-06-26 11:05:08,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:08,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,764:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,766:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,768:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,790:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:08,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,373:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,376:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,420:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,422:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,431:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,433:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,435:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,446:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,448:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:09,450:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,018:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,020:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,029:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:10,033:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,103:INFO:Calculating mean and std
2023-06-26 11:05:12,104:INFO:Creating metrics dataframe
2023-06-26 11:05:12,485:INFO:Uploading results into container
2023-06-26 11:05:12,486:INFO:Uploading model into container now
2023-06-26 11:05:12,487:INFO:_master_model_container: 4
2023-06-26 11:05:12,487:INFO:_display_container: 2
2023-06-26 11:05:12,487:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5504, splitter='best')
2023-06-26 11:05:12,488:INFO:create_model() successfully completed......................................
2023-06-26 11:05:12,570:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:12,570:INFO:Creating metrics dataframe
2023-06-26 11:05:12,581:INFO:Initializing SVM - Linear Kernel
2023-06-26 11:05:12,581:INFO:Total runtime is 0.3250582456588745 minutes
2023-06-26 11:05:12,584:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:12,585:INFO:Initializing create_model()
2023-06-26 11:05:12,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:12,585:INFO:Checking exceptions
2023-06-26 11:05:12,585:INFO:Importing libraries
2023-06-26 11:05:12,585:INFO:Copying training dataset
2023-06-26 11:05:12,591:INFO:Defining folds
2023-06-26 11:05:12,591:INFO:Declaring metric variables
2023-06-26 11:05:12,605:INFO:Importing untrained model
2023-06-26 11:05:12,610:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 11:05:12,620:INFO:Starting cross validation
2023-06-26 11:05:12,621:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:12,764:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:12,765:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,770:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,776:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:12,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,780:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,782:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,801:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:12,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,809:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,879:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:12,880:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,882:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:12,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:13,403:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,405:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,409:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:13,415:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,417:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,419:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,477:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:13,478:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,480:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,482:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:13,534:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,536:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:13,538:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,026:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:14,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,029:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,038:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:05:14,040:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,042:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:14,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,137:INFO:Calculating mean and std
2023-06-26 11:05:16,138:INFO:Creating metrics dataframe
2023-06-26 11:05:16,512:INFO:Uploading results into container
2023-06-26 11:05:16,512:INFO:Uploading model into container now
2023-06-26 11:05:16,513:INFO:_master_model_container: 5
2023-06-26 11:05:16,513:INFO:_display_container: 2
2023-06-26 11:05:16,513:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5504, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 11:05:16,513:INFO:create_model() successfully completed......................................
2023-06-26 11:05:16,591:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:16,591:INFO:Creating metrics dataframe
2023-06-26 11:05:16,603:INFO:Initializing Ridge Classifier
2023-06-26 11:05:16,604:INFO:Total runtime is 0.39210693438847855 minutes
2023-06-26 11:05:16,608:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:16,609:INFO:Initializing create_model()
2023-06-26 11:05:16,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:16,610:INFO:Checking exceptions
2023-06-26 11:05:16,610:INFO:Importing libraries
2023-06-26 11:05:16,610:INFO:Copying training dataset
2023-06-26 11:05:16,614:INFO:Defining folds
2023-06-26 11:05:16,614:INFO:Declaring metric variables
2023-06-26 11:05:16,617:INFO:Importing untrained model
2023-06-26 11:05:16,622:INFO:Ridge Classifier Imported successfully
2023-06-26 11:05:16,630:INFO:Starting cross validation
2023-06-26 11:05:16,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:16,752:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:16,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,754:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,757:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:16,758:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,758:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,759:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:16,760:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,760:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,761:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,762:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,763:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,796:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:16,797:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,799:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:16,801:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,383:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,384:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,386:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,386:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,388:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,390:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,417:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,421:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,426:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,467:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,468:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,474:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,996:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,996:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:05:17,997:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,997:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:17,999:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:18,001:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:18,001:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:20,108:INFO:Calculating mean and std
2023-06-26 11:05:20,109:INFO:Creating metrics dataframe
2023-06-26 11:05:20,482:INFO:Uploading results into container
2023-06-26 11:05:20,482:INFO:Uploading model into container now
2023-06-26 11:05:20,483:INFO:_master_model_container: 6
2023-06-26 11:05:20,483:INFO:_display_container: 2
2023-06-26 11:05:20,483:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5504, solver='auto',
                tol=0.0001)
2023-06-26 11:05:20,483:INFO:create_model() successfully completed......................................
2023-06-26 11:05:20,561:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:20,561:INFO:Creating metrics dataframe
2023-06-26 11:05:20,574:INFO:Initializing Random Forest Classifier
2023-06-26 11:05:20,574:INFO:Total runtime is 0.4582749923070271 minutes
2023-06-26 11:05:20,577:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:20,578:INFO:Initializing create_model()
2023-06-26 11:05:20,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:20,578:INFO:Checking exceptions
2023-06-26 11:05:20,578:INFO:Importing libraries
2023-06-26 11:05:20,579:INFO:Copying training dataset
2023-06-26 11:05:20,583:INFO:Defining folds
2023-06-26 11:05:20,583:INFO:Declaring metric variables
2023-06-26 11:05:20,586:INFO:Importing untrained model
2023-06-26 11:05:20,592:INFO:Random Forest Classifier Imported successfully
2023-06-26 11:05:20,599:INFO:Starting cross validation
2023-06-26 11:05:20,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:21,264:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,266:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,267:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,298:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,300:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,302:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,400:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,444:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,445:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:21,446:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,638:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,641:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,643:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,659:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,661:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,781:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,783:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,785:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:22,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,727:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,729:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,731:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,774:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,776:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:23,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,152:INFO:Calculating mean and std
2023-06-26 11:05:25,153:INFO:Creating metrics dataframe
2023-06-26 11:05:25,539:INFO:Uploading results into container
2023-06-26 11:05:25,540:INFO:Uploading model into container now
2023-06-26 11:05:25,541:INFO:_master_model_container: 7
2023-06-26 11:05:25,541:INFO:_display_container: 2
2023-06-26 11:05:25,542:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5504, verbose=0, warm_start=False)
2023-06-26 11:05:25,542:INFO:create_model() successfully completed......................................
2023-06-26 11:05:25,620:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:25,620:INFO:Creating metrics dataframe
2023-06-26 11:05:25,632:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 11:05:25,632:INFO:Total runtime is 0.5425734996795654 minutes
2023-06-26 11:05:25,635:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:25,635:INFO:Initializing create_model()
2023-06-26 11:05:25,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:25,636:INFO:Checking exceptions
2023-06-26 11:05:25,636:INFO:Importing libraries
2023-06-26 11:05:25,636:INFO:Copying training dataset
2023-06-26 11:05:25,642:INFO:Defining folds
2023-06-26 11:05:25,642:INFO:Declaring metric variables
2023-06-26 11:05:25,646:INFO:Importing untrained model
2023-06-26 11:05:25,651:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 11:05:25,659:INFO:Starting cross validation
2023-06-26 11:05:25,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:25,801:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,808:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,809:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,819:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,821:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:25,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,408:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,410:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,412:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,425:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,451:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,452:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,473:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,475:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,477:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,993:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,995:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:26,997:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:27,014:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:27,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:27,017:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:29,170:INFO:Calculating mean and std
2023-06-26 11:05:29,171:INFO:Creating metrics dataframe
2023-06-26 11:05:29,551:INFO:Uploading results into container
2023-06-26 11:05:29,552:INFO:Uploading model into container now
2023-06-26 11:05:29,553:INFO:_master_model_container: 8
2023-06-26 11:05:29,554:INFO:_display_container: 2
2023-06-26 11:05:29,554:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 11:05:29,555:INFO:create_model() successfully completed......................................
2023-06-26 11:05:29,633:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:29,633:INFO:Creating metrics dataframe
2023-06-26 11:05:29,643:INFO:Initializing Ada Boost Classifier
2023-06-26 11:05:29,644:INFO:Total runtime is 0.6094525853792826 minutes
2023-06-26 11:05:29,647:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:29,647:INFO:Initializing create_model()
2023-06-26 11:05:29,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:29,647:INFO:Checking exceptions
2023-06-26 11:05:29,647:INFO:Importing libraries
2023-06-26 11:05:29,648:INFO:Copying training dataset
2023-06-26 11:05:29,652:INFO:Defining folds
2023-06-26 11:05:29,652:INFO:Declaring metric variables
2023-06-26 11:05:29,656:INFO:Importing untrained model
2023-06-26 11:05:29,662:INFO:Ada Boost Classifier Imported successfully
2023-06-26 11:05:29,669:INFO:Starting cross validation
2023-06-26 11:05:29,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:30,066:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,067:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,068:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,069:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,070:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,071:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,083:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,084:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,086:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,103:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,106:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:30,108:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,052:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,054:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,057:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,065:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,067:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,069:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,081:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,084:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,087:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,087:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,098:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,930:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,932:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,934:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:31,934:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:33,633:INFO:Calculating mean and std
2023-06-26 11:05:33,634:INFO:Creating metrics dataframe
2023-06-26 11:05:34,025:INFO:Uploading results into container
2023-06-26 11:05:34,026:INFO:Uploading model into container now
2023-06-26 11:05:34,027:INFO:_master_model_container: 9
2023-06-26 11:05:34,027:INFO:_display_container: 2
2023-06-26 11:05:34,027:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5504)
2023-06-26 11:05:34,027:INFO:create_model() successfully completed......................................
2023-06-26 11:05:34,106:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:34,106:INFO:Creating metrics dataframe
2023-06-26 11:05:34,145:INFO:Initializing Gradient Boosting Classifier
2023-06-26 11:05:34,145:INFO:Total runtime is 0.6844669500986734 minutes
2023-06-26 11:05:34,149:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:34,149:INFO:Initializing create_model()
2023-06-26 11:05:34,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:34,149:INFO:Checking exceptions
2023-06-26 11:05:34,149:INFO:Importing libraries
2023-06-26 11:05:34,149:INFO:Copying training dataset
2023-06-26 11:05:34,153:INFO:Defining folds
2023-06-26 11:05:34,154:INFO:Declaring metric variables
2023-06-26 11:05:34,158:INFO:Importing untrained model
2023-06-26 11:05:34,162:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 11:05:34,169:INFO:Starting cross validation
2023-06-26 11:05:34,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:35,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,523:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,525:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,525:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,527:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,535:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,557:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:35,559:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,642:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,644:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,646:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,665:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,669:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,765:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,767:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,769:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,780:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:37,782:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,476:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,478:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,480:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,494:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,496:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,497:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:39,875:INFO:Calculating mean and std
2023-06-26 11:05:39,876:INFO:Creating metrics dataframe
2023-06-26 11:05:40,275:INFO:Uploading results into container
2023-06-26 11:05:40,276:INFO:Uploading model into container now
2023-06-26 11:05:40,277:INFO:_master_model_container: 10
2023-06-26 11:05:40,277:INFO:_display_container: 2
2023-06-26 11:05:40,278:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5504, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 11:05:40,278:INFO:create_model() successfully completed......................................
2023-06-26 11:05:40,358:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:40,358:INFO:Creating metrics dataframe
2023-06-26 11:05:40,368:INFO:Initializing Linear Discriminant Analysis
2023-06-26 11:05:40,369:INFO:Total runtime is 0.7881917516390482 minutes
2023-06-26 11:05:40,374:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:40,374:INFO:Initializing create_model()
2023-06-26 11:05:40,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:40,374:INFO:Checking exceptions
2023-06-26 11:05:40,374:INFO:Importing libraries
2023-06-26 11:05:40,374:INFO:Copying training dataset
2023-06-26 11:05:40,379:INFO:Defining folds
2023-06-26 11:05:40,379:INFO:Declaring metric variables
2023-06-26 11:05:40,384:INFO:Importing untrained model
2023-06-26 11:05:40,389:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 11:05:40,397:INFO:Starting cross validation
2023-06-26 11:05:40,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:40,537:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,540:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,548:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,550:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,557:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,577:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:40,581:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,144:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,148:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,198:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,200:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,250:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,252:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,254:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,268:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,753:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,755:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:41,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:44,067:INFO:Calculating mean and std
2023-06-26 11:05:44,069:INFO:Creating metrics dataframe
2023-06-26 11:05:44,468:INFO:Uploading results into container
2023-06-26 11:05:44,469:INFO:Uploading model into container now
2023-06-26 11:05:44,469:INFO:_master_model_container: 11
2023-06-26 11:05:44,470:INFO:_display_container: 2
2023-06-26 11:05:44,471:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:05:44,471:INFO:create_model() successfully completed......................................
2023-06-26 11:05:44,550:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:44,550:INFO:Creating metrics dataframe
2023-06-26 11:05:44,562:INFO:Initializing Extra Trees Classifier
2023-06-26 11:05:44,562:INFO:Total runtime is 0.8580731074015299 minutes
2023-06-26 11:05:44,565:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:44,566:INFO:Initializing create_model()
2023-06-26 11:05:44,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:44,566:INFO:Checking exceptions
2023-06-26 11:05:44,566:INFO:Importing libraries
2023-06-26 11:05:44,567:INFO:Copying training dataset
2023-06-26 11:05:44,572:INFO:Defining folds
2023-06-26 11:05:44,573:INFO:Declaring metric variables
2023-06-26 11:05:44,577:INFO:Importing untrained model
2023-06-26 11:05:44,582:INFO:Extra Trees Classifier Imported successfully
2023-06-26 11:05:44,591:INFO:Starting cross validation
2023-06-26 11:05:44,592:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:45,180:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,182:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,184:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,191:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,193:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,259:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:45,418:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,495:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,497:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,499:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,502:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,785:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,787:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,790:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:46,842:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,593:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,595:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,597:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,634:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,636:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:47,640:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:49,319:INFO:Calculating mean and std
2023-06-26 11:05:49,321:INFO:Creating metrics dataframe
2023-06-26 11:05:49,749:INFO:Uploading results into container
2023-06-26 11:05:49,750:INFO:Uploading model into container now
2023-06-26 11:05:49,750:INFO:_master_model_container: 12
2023-06-26 11:05:49,750:INFO:_display_container: 2
2023-06-26 11:05:49,751:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5504, verbose=0, warm_start=False)
2023-06-26 11:05:49,751:INFO:create_model() successfully completed......................................
2023-06-26 11:05:49,833:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:49,833:INFO:Creating metrics dataframe
2023-06-26 11:05:49,845:INFO:Initializing Extreme Gradient Boosting
2023-06-26 11:05:49,845:INFO:Total runtime is 0.9461246689160664 minutes
2023-06-26 11:05:49,848:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:49,848:INFO:Initializing create_model()
2023-06-26 11:05:49,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:49,849:INFO:Checking exceptions
2023-06-26 11:05:49,849:INFO:Importing libraries
2023-06-26 11:05:49,849:INFO:Copying training dataset
2023-06-26 11:05:49,853:INFO:Defining folds
2023-06-26 11:05:49,853:INFO:Declaring metric variables
2023-06-26 11:05:49,858:INFO:Importing untrained model
2023-06-26 11:05:49,863:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 11:05:49,870:INFO:Starting cross validation
2023-06-26 11:05:49,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:50,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,434:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,460:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,589:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:50,595:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,491:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,493:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,495:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,527:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,595:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,597:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,738:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,740:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:51,742:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,472:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,474:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,476:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,532:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,534:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:52,536:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:54,433:INFO:Calculating mean and std
2023-06-26 11:05:54,435:INFO:Creating metrics dataframe
2023-06-26 11:05:54,867:INFO:Uploading results into container
2023-06-26 11:05:54,867:INFO:Uploading model into container now
2023-06-26 11:05:54,868:INFO:_master_model_container: 13
2023-06-26 11:05:54,868:INFO:_display_container: 2
2023-06-26 11:05:54,869:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 11:05:54,869:INFO:create_model() successfully completed......................................
2023-06-26 11:05:54,950:INFO:SubProcess create_model() end ==================================
2023-06-26 11:05:54,950:INFO:Creating metrics dataframe
2023-06-26 11:05:54,963:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 11:05:54,963:INFO:Total runtime is 1.0314232190450032 minutes
2023-06-26 11:05:54,967:INFO:SubProcess create_model() called ==================================
2023-06-26 11:05:54,968:INFO:Initializing create_model()
2023-06-26 11:05:54,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:05:54,968:INFO:Checking exceptions
2023-06-26 11:05:54,968:INFO:Importing libraries
2023-06-26 11:05:54,968:INFO:Copying training dataset
2023-06-26 11:05:54,974:INFO:Defining folds
2023-06-26 11:05:54,974:INFO:Declaring metric variables
2023-06-26 11:05:54,979:INFO:Importing untrained model
2023-06-26 11:05:54,984:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 11:05:54,994:INFO:Starting cross validation
2023-06-26 11:05:54,995:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:05:56,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,095:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,097:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,103:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,110:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,113:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,118:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,124:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:56,126:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,175:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,177:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,179:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,200:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,206:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,213:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,215:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,219:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,274:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:57,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,139:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,141:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,165:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,166:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:05:58,168:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,063:INFO:Calculating mean and std
2023-06-26 11:06:00,064:INFO:Creating metrics dataframe
2023-06-26 11:06:00,501:INFO:Uploading results into container
2023-06-26 11:06:00,502:INFO:Uploading model into container now
2023-06-26 11:06:00,502:INFO:_master_model_container: 14
2023-06-26 11:06:00,502:INFO:_display_container: 2
2023-06-26 11:06:00,503:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5504, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 11:06:00,504:INFO:create_model() successfully completed......................................
2023-06-26 11:06:00,583:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:00,583:INFO:Creating metrics dataframe
2023-06-26 11:06:00,596:INFO:Initializing Dummy Classifier
2023-06-26 11:06:00,596:INFO:Total runtime is 1.1253048737843832 minutes
2023-06-26 11:06:00,599:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:00,600:INFO:Initializing create_model()
2023-06-26 11:06:00,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AA78970>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:00,600:INFO:Checking exceptions
2023-06-26 11:06:00,600:INFO:Importing libraries
2023-06-26 11:06:00,600:INFO:Copying training dataset
2023-06-26 11:06:00,606:INFO:Defining folds
2023-06-26 11:06:00,607:INFO:Declaring metric variables
2023-06-26 11:06:00,618:INFO:Importing untrained model
2023-06-26 11:06:00,624:INFO:Dummy Classifier Imported successfully
2023-06-26 11:06:00,632:INFO:Starting cross validation
2023-06-26 11:06:00,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:00,791:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,792:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,792:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:00,794:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,794:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:00,796:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,802:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:00,807:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:00,845:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:00,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,440:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,442:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:01,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,528:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:01,530:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:01,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,581:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,583:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:01,589:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:01,598:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,197:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,198:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:02,199:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,200:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:02,202:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:06:02,204:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:04,741:INFO:Calculating mean and std
2023-06-26 11:06:04,742:INFO:Creating metrics dataframe
2023-06-26 11:06:05,181:INFO:Uploading results into container
2023-06-26 11:06:05,181:INFO:Uploading model into container now
2023-06-26 11:06:05,182:INFO:_master_model_container: 15
2023-06-26 11:06:05,182:INFO:_display_container: 2
2023-06-26 11:06:05,182:INFO:DummyClassifier(constant=None, random_state=5504, strategy='prior')
2023-06-26 11:06:05,182:INFO:create_model() successfully completed......................................
2023-06-26 11:06:05,266:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:05,266:INFO:Creating metrics dataframe
2023-06-26 11:06:05,288:INFO:Initializing create_model()
2023-06-26 11:06:05,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:05,289:INFO:Checking exceptions
2023-06-26 11:06:05,292:INFO:Importing libraries
2023-06-26 11:06:05,292:INFO:Copying training dataset
2023-06-26 11:06:05,296:INFO:Defining folds
2023-06-26 11:06:05,297:INFO:Declaring metric variables
2023-06-26 11:06:05,297:INFO:Importing untrained model
2023-06-26 11:06:05,297:INFO:Declaring custom model
2023-06-26 11:06:05,297:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 11:06:05,298:INFO:Cross validation set to False
2023-06-26 11:06:05,298:INFO:Fitting Model
2023-06-26 11:06:05,769:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:06:05,769:INFO:create_model() successfully completed......................................
2023-06-26 11:06:05,883:INFO:_master_model_container: 15
2023-06-26 11:06:05,883:INFO:_display_container: 2
2023-06-26 11:06:05,884:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:06:05,884:INFO:compare_models() successfully completed......................................
2023-06-26 11:06:05,884:INFO:Initializing evaluate_model()
2023-06-26 11:06:05,885:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-26 11:06:05,895:INFO:Initializing plot_model()
2023-06-26 11:06:05,896:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, system=True)
2023-06-26 11:06:05,896:INFO:Checking exceptions
2023-06-26 11:06:05,898:INFO:Preloading libraries
2023-06-26 11:06:05,899:INFO:Copying training dataset
2023-06-26 11:06:05,899:INFO:Plot type: pipeline
2023-06-26 11:06:06,029:INFO:Visual Rendered Successfully
2023-06-26 11:06:06,107:INFO:plot_model() successfully completed......................................
2023-06-26 11:06:14,305:INFO:Initializing compare_models()
2023-06-26 11:06:14,305:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 11:06:14,305:INFO:Checking exceptions
2023-06-26 11:06:14,307:INFO:Preparing display monitor
2023-06-26 11:06:14,331:INFO:Initializing Logistic Regression
2023-06-26 11:06:14,332:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-06-26 11:06:14,336:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:14,336:INFO:Initializing create_model()
2023-06-26 11:06:14,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:14,337:INFO:Checking exceptions
2023-06-26 11:06:14,337:INFO:Importing libraries
2023-06-26 11:06:14,337:INFO:Copying training dataset
2023-06-26 11:06:14,342:INFO:Defining folds
2023-06-26 11:06:14,342:INFO:Declaring metric variables
2023-06-26 11:06:14,345:INFO:Importing untrained model
2023-06-26 11:06:14,350:INFO:Logistic Regression Imported successfully
2023-06-26 11:06:14,358:INFO:Starting cross validation
2023-06-26 11:06:14,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:14,596:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,601:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,603:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,623:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,624:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,626:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,627:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:14,628:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,457:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,501:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,504:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,506:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,547:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,561:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,563:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,596:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,599:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:15,602:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,276:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,278:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,280:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,327:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:16,332:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:18,783:INFO:Calculating mean and std
2023-06-26 11:06:18,784:INFO:Creating metrics dataframe
2023-06-26 11:06:19,215:INFO:Uploading results into container
2023-06-26 11:06:19,216:INFO:Uploading model into container now
2023-06-26 11:06:19,216:INFO:_master_model_container: 16
2023-06-26 11:06:19,216:INFO:_display_container: 3
2023-06-26 11:06:19,217:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5504, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 11:06:19,217:INFO:create_model() successfully completed......................................
2023-06-26 11:06:19,295:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:19,295:INFO:Creating metrics dataframe
2023-06-26 11:06:19,306:INFO:Initializing K Neighbors Classifier
2023-06-26 11:06:19,306:INFO:Total runtime is 0.08291506767272949 minutes
2023-06-26 11:06:19,310:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:19,311:INFO:Initializing create_model()
2023-06-26 11:06:19,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:19,311:INFO:Checking exceptions
2023-06-26 11:06:19,311:INFO:Importing libraries
2023-06-26 11:06:19,311:INFO:Copying training dataset
2023-06-26 11:06:19,314:INFO:Defining folds
2023-06-26 11:06:19,314:INFO:Declaring metric variables
2023-06-26 11:06:19,317:INFO:Importing untrained model
2023-06-26 11:06:19,321:INFO:K Neighbors Classifier Imported successfully
2023-06-26 11:06:19,329:INFO:Starting cross validation
2023-06-26 11:06:19,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:19,503:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,503:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,505:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,507:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,507:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,516:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,529:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,665:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:19,669:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,259:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,284:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,286:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,289:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,289:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,291:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,293:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,576:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,578:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,580:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,990:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,992:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:20,994:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:21,012:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:21,014:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:21,016:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:23,357:INFO:Calculating mean and std
2023-06-26 11:06:23,358:INFO:Creating metrics dataframe
2023-06-26 11:06:23,836:INFO:Uploading results into container
2023-06-26 11:06:23,838:INFO:Uploading model into container now
2023-06-26 11:06:23,839:INFO:_master_model_container: 17
2023-06-26 11:06:23,839:INFO:_display_container: 3
2023-06-26 11:06:23,839:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 11:06:23,839:INFO:create_model() successfully completed......................................
2023-06-26 11:06:23,918:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:23,918:INFO:Creating metrics dataframe
2023-06-26 11:06:23,927:INFO:Initializing Naive Bayes
2023-06-26 11:06:23,928:INFO:Total runtime is 0.15993651549021404 minutes
2023-06-26 11:06:23,931:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:23,931:INFO:Initializing create_model()
2023-06-26 11:06:23,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:23,932:INFO:Checking exceptions
2023-06-26 11:06:23,932:INFO:Importing libraries
2023-06-26 11:06:23,932:INFO:Copying training dataset
2023-06-26 11:06:23,937:INFO:Defining folds
2023-06-26 11:06:23,938:INFO:Declaring metric variables
2023-06-26 11:06:23,944:INFO:Importing untrained model
2023-06-26 11:06:23,947:INFO:Naive Bayes Imported successfully
2023-06-26 11:06:23,960:INFO:Starting cross validation
2023-06-26 11:06:23,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:24,115:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,117:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,119:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,120:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,130:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,133:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,140:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,143:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,145:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,832:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,902:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,902:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,908:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:24,912:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,536:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,538:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,563:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,565:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:25,567:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,106:INFO:Calculating mean and std
2023-06-26 11:06:28,107:INFO:Creating metrics dataframe
2023-06-26 11:06:28,550:INFO:Uploading results into container
2023-06-26 11:06:28,551:INFO:Uploading model into container now
2023-06-26 11:06:28,551:INFO:_master_model_container: 18
2023-06-26 11:06:28,551:INFO:_display_container: 3
2023-06-26 11:06:28,551:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 11:06:28,552:INFO:create_model() successfully completed......................................
2023-06-26 11:06:28,633:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:28,633:INFO:Creating metrics dataframe
2023-06-26 11:06:28,643:INFO:Initializing Decision Tree Classifier
2023-06-26 11:06:28,644:INFO:Total runtime is 0.23852211634318035 minutes
2023-06-26 11:06:28,647:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:28,647:INFO:Initializing create_model()
2023-06-26 11:06:28,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:28,648:INFO:Checking exceptions
2023-06-26 11:06:28,648:INFO:Importing libraries
2023-06-26 11:06:28,648:INFO:Copying training dataset
2023-06-26 11:06:28,653:INFO:Defining folds
2023-06-26 11:06:28,653:INFO:Declaring metric variables
2023-06-26 11:06:28,658:INFO:Importing untrained model
2023-06-26 11:06:28,662:INFO:Decision Tree Classifier Imported successfully
2023-06-26 11:06:28,669:INFO:Starting cross validation
2023-06-26 11:06:28,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:28,824:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,826:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,841:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,908:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:28,911:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,503:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,506:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,508:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,544:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,566:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,572:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,799:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:29,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,326:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,367:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:30,371:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:32,844:INFO:Calculating mean and std
2023-06-26 11:06:32,845:INFO:Creating metrics dataframe
2023-06-26 11:06:33,281:INFO:Uploading results into container
2023-06-26 11:06:33,282:INFO:Uploading model into container now
2023-06-26 11:06:33,283:INFO:_master_model_container: 19
2023-06-26 11:06:33,283:INFO:_display_container: 3
2023-06-26 11:06:33,283:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5504, splitter='best')
2023-06-26 11:06:33,283:INFO:create_model() successfully completed......................................
2023-06-26 11:06:33,361:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:33,362:INFO:Creating metrics dataframe
2023-06-26 11:06:33,374:INFO:Initializing SVM - Linear Kernel
2023-06-26 11:06:33,374:INFO:Total runtime is 0.3173786878585816 minutes
2023-06-26 11:06:33,378:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:33,379:INFO:Initializing create_model()
2023-06-26 11:06:33,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:33,379:INFO:Checking exceptions
2023-06-26 11:06:33,379:INFO:Importing libraries
2023-06-26 11:06:33,379:INFO:Copying training dataset
2023-06-26 11:06:33,383:INFO:Defining folds
2023-06-26 11:06:33,383:INFO:Declaring metric variables
2023-06-26 11:06:33,389:INFO:Importing untrained model
2023-06-26 11:06:33,394:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 11:06:33,403:INFO:Starting cross validation
2023-06-26 11:06:33,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:33,541:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:33,542:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,548:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,551:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:33,553:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,556:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,558:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,570:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:33,571:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,573:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,574:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:33,575:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,575:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,577:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:33,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,243:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,244:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,246:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,252:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,253:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,255:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,257:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,308:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,308:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,310:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,313:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,315:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,317:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,926:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,927:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,928:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 11:06:34,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,933:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:34,934:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:37,412:INFO:Calculating mean and std
2023-06-26 11:06:37,413:INFO:Creating metrics dataframe
2023-06-26 11:06:37,851:INFO:Uploading results into container
2023-06-26 11:06:37,852:INFO:Uploading model into container now
2023-06-26 11:06:37,852:INFO:_master_model_container: 20
2023-06-26 11:06:37,853:INFO:_display_container: 3
2023-06-26 11:06:37,853:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5504, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 11:06:37,853:INFO:create_model() successfully completed......................................
2023-06-26 11:06:37,932:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:37,932:INFO:Creating metrics dataframe
2023-06-26 11:06:37,944:INFO:Initializing Ridge Classifier
2023-06-26 11:06:37,944:INFO:Total runtime is 0.39355269670486454 minutes
2023-06-26 11:06:37,948:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:37,949:INFO:Initializing create_model()
2023-06-26 11:06:37,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:37,949:INFO:Checking exceptions
2023-06-26 11:06:37,949:INFO:Importing libraries
2023-06-26 11:06:37,949:INFO:Copying training dataset
2023-06-26 11:06:37,956:INFO:Defining folds
2023-06-26 11:06:37,956:INFO:Declaring metric variables
2023-06-26 11:06:37,960:INFO:Importing untrained model
2023-06-26 11:06:37,965:INFO:Ridge Classifier Imported successfully
2023-06-26 11:06:37,978:INFO:Starting cross validation
2023-06-26 11:06:37,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:38,117:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,120:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,121:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,122:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,122:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,123:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,123:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,124:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,125:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,125:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,126:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,127:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,191:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,794:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,796:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,798:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,834:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,835:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,837:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,839:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,840:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,941:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:38,941:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:38,945:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,465:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:39,466:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,472:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,494:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 11:06:39,495:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,498:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:39,499:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:41,958:INFO:Calculating mean and std
2023-06-26 11:06:41,960:INFO:Creating metrics dataframe
2023-06-26 11:06:42,388:INFO:Uploading results into container
2023-06-26 11:06:42,389:INFO:Uploading model into container now
2023-06-26 11:06:42,390:INFO:_master_model_container: 21
2023-06-26 11:06:42,390:INFO:_display_container: 3
2023-06-26 11:06:42,390:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5504, solver='auto',
                tol=0.0001)
2023-06-26 11:06:42,390:INFO:create_model() successfully completed......................................
2023-06-26 11:06:42,471:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:42,472:INFO:Creating metrics dataframe
2023-06-26 11:06:42,481:INFO:Initializing Random Forest Classifier
2023-06-26 11:06:42,482:INFO:Total runtime is 0.46917394797007245 minutes
2023-06-26 11:06:42,486:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:42,487:INFO:Initializing create_model()
2023-06-26 11:06:42,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:42,487:INFO:Checking exceptions
2023-06-26 11:06:42,487:INFO:Importing libraries
2023-06-26 11:06:42,488:INFO:Copying training dataset
2023-06-26 11:06:42,492:INFO:Defining folds
2023-06-26 11:06:42,492:INFO:Declaring metric variables
2023-06-26 11:06:42,495:INFO:Importing untrained model
2023-06-26 11:06:42,502:INFO:Random Forest Classifier Imported successfully
2023-06-26 11:06:42,510:INFO:Starting cross validation
2023-06-26 11:06:42,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:42,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,827:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,829:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,849:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,852:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,889:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,891:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,893:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,913:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,915:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:42,918:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,831:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,833:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,836:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,927:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,929:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,931:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,946:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,948:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:43,952:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,702:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,704:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,706:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,803:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,805:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:44,807:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:46,925:INFO:Calculating mean and std
2023-06-26 11:06:46,926:INFO:Creating metrics dataframe
2023-06-26 11:06:47,364:INFO:Uploading results into container
2023-06-26 11:06:47,365:INFO:Uploading model into container now
2023-06-26 11:06:47,365:INFO:_master_model_container: 22
2023-06-26 11:06:47,365:INFO:_display_container: 3
2023-06-26 11:06:47,365:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5504, verbose=0, warm_start=False)
2023-06-26 11:06:47,366:INFO:create_model() successfully completed......................................
2023-06-26 11:06:47,442:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:47,443:INFO:Creating metrics dataframe
2023-06-26 11:06:47,456:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 11:06:47,456:INFO:Total runtime is 0.5520755966504415 minutes
2023-06-26 11:06:47,460:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:47,460:INFO:Initializing create_model()
2023-06-26 11:06:47,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:47,460:INFO:Checking exceptions
2023-06-26 11:06:47,461:INFO:Importing libraries
2023-06-26 11:06:47,461:INFO:Copying training dataset
2023-06-26 11:06:47,465:INFO:Defining folds
2023-06-26 11:06:47,465:INFO:Declaring metric variables
2023-06-26 11:06:47,470:INFO:Importing untrained model
2023-06-26 11:06:47,475:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 11:06:47,483:INFO:Starting cross validation
2023-06-26 11:06:47,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:47,660:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,660:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,661:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,662:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,663:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,664:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,675:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,677:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,678:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,679:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,680:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:47,690:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,369:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,371:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,419:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,421:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,422:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,425:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,426:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,427:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:48,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,075:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,077:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,079:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,090:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,092:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:49,094:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:51,615:INFO:Calculating mean and std
2023-06-26 11:06:51,616:INFO:Creating metrics dataframe
2023-06-26 11:06:52,049:INFO:Uploading results into container
2023-06-26 11:06:52,051:INFO:Uploading model into container now
2023-06-26 11:06:52,051:INFO:_master_model_container: 23
2023-06-26 11:06:52,051:INFO:_display_container: 3
2023-06-26 11:06:52,052:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 11:06:52,052:INFO:create_model() successfully completed......................................
2023-06-26 11:06:52,133:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:52,134:INFO:Creating metrics dataframe
2023-06-26 11:06:52,144:INFO:Initializing Ada Boost Classifier
2023-06-26 11:06:52,145:INFO:Total runtime is 0.6302266120910645 minutes
2023-06-26 11:06:52,149:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:52,149:INFO:Initializing create_model()
2023-06-26 11:06:52,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:52,149:INFO:Checking exceptions
2023-06-26 11:06:52,150:INFO:Importing libraries
2023-06-26 11:06:52,151:INFO:Copying training dataset
2023-06-26 11:06:52,155:INFO:Defining folds
2023-06-26 11:06:52,155:INFO:Declaring metric variables
2023-06-26 11:06:52,160:INFO:Importing untrained model
2023-06-26 11:06:52,164:INFO:Ada Boost Classifier Imported successfully
2023-06-26 11:06:52,178:INFO:Starting cross validation
2023-06-26 11:06:52,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:52,411:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,412:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,412:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,413:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,414:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,415:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,416:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,467:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,470:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:52,471:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,207:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,222:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,223:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,224:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,226:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,276:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,279:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,401:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,406:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,996:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,998:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:53,998:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:54,000:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:54,001:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:54,003:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:56,311:INFO:Calculating mean and std
2023-06-26 11:06:56,312:INFO:Creating metrics dataframe
2023-06-26 11:06:56,787:INFO:Uploading results into container
2023-06-26 11:06:56,788:INFO:Uploading model into container now
2023-06-26 11:06:56,788:INFO:_master_model_container: 24
2023-06-26 11:06:56,788:INFO:_display_container: 3
2023-06-26 11:06:56,789:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5504)
2023-06-26 11:06:56,789:INFO:create_model() successfully completed......................................
2023-06-26 11:06:56,868:INFO:SubProcess create_model() end ==================================
2023-06-26 11:06:56,868:INFO:Creating metrics dataframe
2023-06-26 11:06:56,878:INFO:Initializing Gradient Boosting Classifier
2023-06-26 11:06:56,879:INFO:Total runtime is 0.7091317216555277 minutes
2023-06-26 11:06:56,882:INFO:SubProcess create_model() called ==================================
2023-06-26 11:06:56,882:INFO:Initializing create_model()
2023-06-26 11:06:56,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:06:56,883:INFO:Checking exceptions
2023-06-26 11:06:56,884:INFO:Importing libraries
2023-06-26 11:06:56,884:INFO:Copying training dataset
2023-06-26 11:06:56,888:INFO:Defining folds
2023-06-26 11:06:56,889:INFO:Declaring metric variables
2023-06-26 11:06:56,891:INFO:Importing untrained model
2023-06-26 11:06:56,898:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 11:06:56,906:INFO:Starting cross validation
2023-06-26 11:06:56,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:06:57,292:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,292:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,294:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,294:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,296:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,296:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,327:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,329:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,331:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,337:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,339:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:57,341:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,305:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,306:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,308:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,347:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,352:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,365:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,367:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,369:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,390:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:58,392:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,238:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,240:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,242:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:06:59,254:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:01,299:INFO:Calculating mean and std
2023-06-26 11:07:01,301:INFO:Creating metrics dataframe
2023-06-26 11:07:01,731:INFO:Uploading results into container
2023-06-26 11:07:01,732:INFO:Uploading model into container now
2023-06-26 11:07:01,732:INFO:_master_model_container: 25
2023-06-26 11:07:01,733:INFO:_display_container: 3
2023-06-26 11:07:01,734:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5504, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 11:07:01,734:INFO:create_model() successfully completed......................................
2023-06-26 11:07:01,812:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:01,813:INFO:Creating metrics dataframe
2023-06-26 11:07:01,824:INFO:Initializing Linear Discriminant Analysis
2023-06-26 11:07:01,825:INFO:Total runtime is 0.7915411035219828 minutes
2023-06-26 11:07:01,828:INFO:SubProcess create_model() called ==================================
2023-06-26 11:07:01,829:INFO:Initializing create_model()
2023-06-26 11:07:01,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:01,829:INFO:Checking exceptions
2023-06-26 11:07:01,829:INFO:Importing libraries
2023-06-26 11:07:01,829:INFO:Copying training dataset
2023-06-26 11:07:01,832:INFO:Defining folds
2023-06-26 11:07:01,833:INFO:Declaring metric variables
2023-06-26 11:07:01,838:INFO:Importing untrained model
2023-06-26 11:07:01,843:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 11:07:01,851:INFO:Starting cross validation
2023-06-26 11:07:01,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:07:01,998:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,002:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,021:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,021:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,023:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,046:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,048:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,051:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,722:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,724:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,741:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,743:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,745:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,797:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,804:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:02,808:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,405:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,407:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,409:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,454:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,456:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:03,457:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:05,953:INFO:Calculating mean and std
2023-06-26 11:07:05,954:INFO:Creating metrics dataframe
2023-06-26 11:07:06,387:INFO:Uploading results into container
2023-06-26 11:07:06,388:INFO:Uploading model into container now
2023-06-26 11:07:06,388:INFO:_master_model_container: 26
2023-06-26 11:07:06,388:INFO:_display_container: 3
2023-06-26 11:07:06,389:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:07:06,389:INFO:create_model() successfully completed......................................
2023-06-26 11:07:06,469:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:06,470:INFO:Creating metrics dataframe
2023-06-26 11:07:06,482:INFO:Initializing Extra Trees Classifier
2023-06-26 11:07:06,482:INFO:Total runtime is 0.8691827178001403 minutes
2023-06-26 11:07:06,486:INFO:SubProcess create_model() called ==================================
2023-06-26 11:07:06,486:INFO:Initializing create_model()
2023-06-26 11:07:06,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:06,487:INFO:Checking exceptions
2023-06-26 11:07:06,487:INFO:Importing libraries
2023-06-26 11:07:06,487:INFO:Copying training dataset
2023-06-26 11:07:06,491:INFO:Defining folds
2023-06-26 11:07:06,491:INFO:Declaring metric variables
2023-06-26 11:07:06,496:INFO:Importing untrained model
2023-06-26 11:07:06,501:INFO:Extra Trees Classifier Imported successfully
2023-06-26 11:07:06,509:INFO:Starting cross validation
2023-06-26 11:07:06,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:07:06,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,844:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,846:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,846:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,848:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,848:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,873:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,876:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,877:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,979:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,981:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:06,984:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,806:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,809:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,810:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,826:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,828:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,830:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,948:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,951:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:07,953:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,026:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,028:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,031:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,623:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,625:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,627:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,655:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,656:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:08,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:10,711:INFO:Calculating mean and std
2023-06-26 11:07:10,712:INFO:Creating metrics dataframe
2023-06-26 11:07:11,150:INFO:Uploading results into container
2023-06-26 11:07:11,151:INFO:Uploading model into container now
2023-06-26 11:07:11,152:INFO:_master_model_container: 27
2023-06-26 11:07:11,152:INFO:_display_container: 3
2023-06-26 11:07:11,152:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5504, verbose=0, warm_start=False)
2023-06-26 11:07:11,152:INFO:create_model() successfully completed......................................
2023-06-26 11:07:11,232:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:11,232:INFO:Creating metrics dataframe
2023-06-26 11:07:11,244:INFO:Initializing Extreme Gradient Boosting
2023-06-26 11:07:11,245:INFO:Total runtime is 0.9485558311144511 minutes
2023-06-26 11:07:11,249:INFO:SubProcess create_model() called ==================================
2023-06-26 11:07:11,249:INFO:Initializing create_model()
2023-06-26 11:07:11,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:11,250:INFO:Checking exceptions
2023-06-26 11:07:11,250:INFO:Importing libraries
2023-06-26 11:07:11,251:INFO:Copying training dataset
2023-06-26 11:07:11,255:INFO:Defining folds
2023-06-26 11:07:11,255:INFO:Declaring metric variables
2023-06-26 11:07:11,258:INFO:Importing untrained model
2023-06-26 11:07:11,263:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 11:07:11,272:INFO:Starting cross validation
2023-06-26 11:07:11,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:07:11,455:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,456:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,457:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,458:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,459:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,460:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,476:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,478:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,483:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,484:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,489:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:11,492:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,144:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,146:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,150:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,176:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,178:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,180:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,248:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,253:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,254:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,255:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,257:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,907:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,910:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,960:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:12,964:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:15,410:INFO:Calculating mean and std
2023-06-26 11:07:15,411:INFO:Creating metrics dataframe
2023-06-26 11:07:15,841:INFO:Uploading results into container
2023-06-26 11:07:15,842:INFO:Uploading model into container now
2023-06-26 11:07:15,842:INFO:_master_model_container: 28
2023-06-26 11:07:15,842:INFO:_display_container: 3
2023-06-26 11:07:15,843:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 11:07:15,843:INFO:create_model() successfully completed......................................
2023-06-26 11:07:15,920:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:15,920:INFO:Creating metrics dataframe
2023-06-26 11:07:15,932:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 11:07:15,933:INFO:Total runtime is 1.0267003734906515 minutes
2023-06-26 11:07:15,938:INFO:SubProcess create_model() called ==================================
2023-06-26 11:07:15,938:INFO:Initializing create_model()
2023-06-26 11:07:15,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:15,938:INFO:Checking exceptions
2023-06-26 11:07:15,938:INFO:Importing libraries
2023-06-26 11:07:15,939:INFO:Copying training dataset
2023-06-26 11:07:15,943:INFO:Defining folds
2023-06-26 11:07:15,943:INFO:Declaring metric variables
2023-06-26 11:07:15,947:INFO:Importing untrained model
2023-06-26 11:07:15,953:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 11:07:15,961:INFO:Starting cross validation
2023-06-26 11:07:15,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:07:16,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,192:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,194:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,195:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,196:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,217:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,219:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,221:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,251:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,253:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:16,255:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,021:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,023:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,042:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,044:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,046:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,164:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,167:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,170:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,183:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,186:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,188:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,843:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,845:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,847:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,882:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,884:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:17,886:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,154:INFO:Calculating mean and std
2023-06-26 11:07:20,155:INFO:Creating metrics dataframe
2023-06-26 11:07:20,590:INFO:Uploading results into container
2023-06-26 11:07:20,591:INFO:Uploading model into container now
2023-06-26 11:07:20,591:INFO:_master_model_container: 29
2023-06-26 11:07:20,591:INFO:_display_container: 3
2023-06-26 11:07:20,592:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5504, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 11:07:20,592:INFO:create_model() successfully completed......................................
2023-06-26 11:07:20,671:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:20,671:INFO:Creating metrics dataframe
2023-06-26 11:07:20,686:INFO:Initializing Dummy Classifier
2023-06-26 11:07:20,686:INFO:Total runtime is 1.1059046347935995 minutes
2023-06-26 11:07:20,690:INFO:SubProcess create_model() called ==================================
2023-06-26 11:07:20,691:INFO:Initializing create_model()
2023-06-26 11:07:20,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75002B7C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:20,691:INFO:Checking exceptions
2023-06-26 11:07:20,691:INFO:Importing libraries
2023-06-26 11:07:20,692:INFO:Copying training dataset
2023-06-26 11:07:20,696:INFO:Defining folds
2023-06-26 11:07:20,696:INFO:Declaring metric variables
2023-06-26 11:07:20,702:INFO:Importing untrained model
2023-06-26 11:07:20,706:INFO:Dummy Classifier Imported successfully
2023-06-26 11:07:20,713:INFO:Starting cross validation
2023-06-26 11:07:20,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:07:20,861:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,863:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,864:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:20,867:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,868:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,870:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,871:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:20,873:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,899:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,901:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,903:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:20,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,904:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:20,905:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:20,906:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,579:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,582:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,583:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:21,585:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,587:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,589:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,590:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:21,591:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,606:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,617:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,619:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:21,620:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,660:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:21,667:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:21,668:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,256:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,258:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,260:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:22,261:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,285:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,287:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:22,289:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 11:07:22,290:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:07:24,823:INFO:Calculating mean and std
2023-06-26 11:07:24,824:INFO:Creating metrics dataframe
2023-06-26 11:07:25,261:INFO:Uploading results into container
2023-06-26 11:07:25,262:INFO:Uploading model into container now
2023-06-26 11:07:25,266:INFO:_master_model_container: 30
2023-06-26 11:07:25,266:INFO:_display_container: 3
2023-06-26 11:07:25,266:INFO:DummyClassifier(constant=None, random_state=5504, strategy='prior')
2023-06-26 11:07:25,266:INFO:create_model() successfully completed......................................
2023-06-26 11:07:25,348:INFO:SubProcess create_model() end ==================================
2023-06-26 11:07:25,348:INFO:Creating metrics dataframe
2023-06-26 11:07:25,371:INFO:Initializing create_model()
2023-06-26 11:07:25,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:07:25,372:INFO:Checking exceptions
2023-06-26 11:07:25,374:INFO:Importing libraries
2023-06-26 11:07:25,374:INFO:Copying training dataset
2023-06-26 11:07:25,378:INFO:Defining folds
2023-06-26 11:07:25,378:INFO:Declaring metric variables
2023-06-26 11:07:25,378:INFO:Importing untrained model
2023-06-26 11:07:25,378:INFO:Declaring custom model
2023-06-26 11:07:25,379:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 11:07:25,380:INFO:Cross validation set to False
2023-06-26 11:07:25,380:INFO:Fitting Model
2023-06-26 11:07:25,844:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:07:25,844:INFO:create_model() successfully completed......................................
2023-06-26 11:07:25,954:INFO:_master_model_container: 30
2023-06-26 11:07:25,954:INFO:_display_container: 3
2023-06-26 11:07:25,954:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:07:25,954:INFO:compare_models() successfully completed......................................
2023-06-26 11:37:18,661:INFO:Initializing create_model()
2023-06-26 11:37:18,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 11:37:18,662:INFO:Checking exceptions
2023-06-26 11:37:18,678:INFO:Importing libraries
2023-06-26 11:37:18,678:INFO:Copying training dataset
2023-06-26 11:37:18,683:INFO:Defining folds
2023-06-26 11:37:18,684:INFO:Declaring metric variables
2023-06-26 11:37:18,688:INFO:Importing untrained model
2023-06-26 11:37:18,692:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 11:37:18,700:INFO:Starting cross validation
2023-06-26 11:37:18,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 11:37:22,348:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,350:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,353:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,377:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,379:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,382:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,385:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,390:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:22,545:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,078:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,080:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,082:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,110:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,112:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,114:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,203:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,207:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,209:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,266:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,268:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:23,270:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,100:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,104:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,117:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,148:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,150:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:24,152:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'sell') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-26 11:37:26,932:INFO:Calculating mean and std
2023-06-26 11:37:26,933:INFO:Creating metrics dataframe
2023-06-26 11:37:26,942:INFO:Finalizing model
2023-06-26 11:37:27,457:INFO:Uploading results into container
2023-06-26 11:37:27,457:INFO:Uploading model into container now
2023-06-26 11:37:27,469:INFO:_master_model_container: 31
2023-06-26 11:37:27,469:INFO:_display_container: 4
2023-06-26 11:37:27,470:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 11:37:27,470:INFO:create_model() successfully completed......................................
2023-06-26 11:37:27,585:INFO:Initializing predict_model()
2023-06-26 11:37:27,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E754166C50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E757735CF0>)
2023-06-26 11:37:27,586:INFO:Checking exceptions
2023-06-26 11:37:27,586:INFO:Preloading libraries
2023-06-26 11:37:27,587:INFO:Set up data.
2023-06-26 11:37:27,592:INFO:Set up index.
2023-06-26 13:04:52,708:INFO:PyCaret ClassificationExperiment
2023-06-26 13:04:52,708:INFO:Logging name: clf-default-name
2023-06-26 13:04:52,708:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-26 13:04:52,708:INFO:version 3.0.2
2023-06-26 13:04:52,708:INFO:Initializing setup()
2023-06-26 13:04:52,708:INFO:self.USI: c615
2023-06-26 13:04:52,708:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'USI', 'X_train', 'exp_name_log', '_ml_usecase', 'pipeline', 'y', 'target_param', 'y_train', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'y_test', 'data', 'idx', 'gpu_param', 'X', 'exp_id', 'n_jobs_param', 'seed', 'log_plots_param', 'is_multiclass', 'html_param'}
2023-06-26 13:04:52,708:INFO:Checking environment
2023-06-26 13:04:52,708:INFO:python_version: 3.10.5
2023-06-26 13:04:52,708:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-26 13:04:52,708:INFO:machine: AMD64
2023-06-26 13:04:52,709:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-26 13:04:52,713:INFO:Memory: svmem(total=17130000384, available=8341811200, percent=51.3, used=8788189184, free=8341811200)
2023-06-26 13:04:52,713:INFO:Physical Core: 4
2023-06-26 13:04:52,713:INFO:Logical Core: 4
2023-06-26 13:04:52,713:INFO:Checking libraries
2023-06-26 13:04:52,713:INFO:System:
2023-06-26 13:04:52,713:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-26 13:04:52,714:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-26 13:04:52,714:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-26 13:04:52,714:INFO:PyCaret required dependencies:
2023-06-26 13:04:52,714:INFO:                 pip: 23.0.1
2023-06-26 13:04:52,714:INFO:          setuptools: 58.1.0
2023-06-26 13:04:52,714:INFO:             pycaret: 3.0.2
2023-06-26 13:04:52,714:INFO:             IPython: 8.9.0
2023-06-26 13:04:52,714:INFO:          ipywidgets: 8.0.6
2023-06-26 13:04:52,714:INFO:                tqdm: 4.65.0
2023-06-26 13:04:52,714:INFO:               numpy: 1.23.5
2023-06-26 13:04:52,714:INFO:              pandas: 1.5.3
2023-06-26 13:04:52,714:INFO:              jinja2: 3.1.2
2023-06-26 13:04:52,714:INFO:               scipy: 1.10.1
2023-06-26 13:04:52,714:INFO:              joblib: 1.2.0
2023-06-26 13:04:52,714:INFO:             sklearn: 1.2.2
2023-06-26 13:04:52,714:INFO:                pyod: 1.0.9
2023-06-26 13:04:52,714:INFO:            imblearn: 0.10.1
2023-06-26 13:04:52,715:INFO:   category_encoders: 2.6.1
2023-06-26 13:04:52,715:INFO:            lightgbm: 3.3.5
2023-06-26 13:04:52,715:INFO:               numba: 0.57.0
2023-06-26 13:04:52,715:INFO:            requests: 2.28.2
2023-06-26 13:04:52,715:INFO:          matplotlib: 3.7.1
2023-06-26 13:04:52,715:INFO:          scikitplot: 0.3.7
2023-06-26 13:04:52,715:INFO:         yellowbrick: 1.5
2023-06-26 13:04:52,715:INFO:              plotly: 5.15.0
2023-06-26 13:04:52,715:INFO:             kaleido: 0.2.1
2023-06-26 13:04:52,715:INFO:         statsmodels: 0.14.0
2023-06-26 13:04:52,715:INFO:              sktime: 0.17.0
2023-06-26 13:04:52,715:INFO:               tbats: 1.1.3
2023-06-26 13:04:52,715:INFO:            pmdarima: 2.0.3
2023-06-26 13:04:52,715:INFO:              psutil: 5.9.4
2023-06-26 13:04:52,715:INFO:PyCaret optional dependencies:
2023-06-26 13:04:52,715:INFO:                shap: Not installed
2023-06-26 13:04:52,715:INFO:           interpret: 0.4.2
2023-06-26 13:04:52,716:INFO:                umap: Not installed
2023-06-26 13:04:52,716:INFO:    pandas_profiling: Not installed
2023-06-26 13:04:52,716:INFO:  explainerdashboard: Not installed
2023-06-26 13:04:52,716:INFO:             autoviz: Not installed
2023-06-26 13:04:52,716:INFO:           fairlearn: Not installed
2023-06-26 13:04:52,716:INFO:             xgboost: 1.7.5
2023-06-26 13:04:52,716:INFO:            catboost: Not installed
2023-06-26 13:04:52,716:INFO:              kmodes: Not installed
2023-06-26 13:04:52,716:INFO:             mlxtend: Not installed
2023-06-26 13:04:52,716:INFO:       statsforecast: Not installed
2023-06-26 13:04:52,716:INFO:        tune_sklearn: Not installed
2023-06-26 13:04:52,716:INFO:                 ray: Not installed
2023-06-26 13:04:52,716:INFO:            hyperopt: 0.2.7
2023-06-26 13:04:52,716:INFO:              optuna: Not installed
2023-06-26 13:04:52,716:INFO:               skopt: Not installed
2023-06-26 13:04:52,716:INFO:              mlflow: Not installed
2023-06-26 13:04:52,716:INFO:              gradio: Not installed
2023-06-26 13:04:52,716:INFO:             fastapi: Not installed
2023-06-26 13:04:52,716:INFO:             uvicorn: Not installed
2023-06-26 13:04:52,717:INFO:              m2cgen: Not installed
2023-06-26 13:04:52,717:INFO:           evidently: Not installed
2023-06-26 13:04:52,717:INFO:               fugue: Not installed
2023-06-26 13:04:52,717:INFO:           streamlit: Not installed
2023-06-26 13:04:52,717:INFO:             prophet: 1.1.4
2023-06-26 13:04:52,717:INFO:None
2023-06-26 13:04:52,717:INFO:Set up data.
2023-06-26 13:04:52,726:INFO:Set up train/test split.
2023-06-26 13:04:52,731:INFO:Set up index.
2023-06-26 13:04:52,731:INFO:Set up folding strategy.
2023-06-26 13:04:52,731:INFO:Assigning column types.
2023-06-26 13:04:52,738:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-26 13:04:52,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 13:04:52,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 13:04:52,824:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:52,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:52,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 13:04:52,875:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 13:04:52,905:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:52,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:52,908:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-26 13:04:52,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 13:04:52,989:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:52,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 13:04:53,070:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:53,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,073:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-26 13:04:53,153:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:53,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,231:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:53,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,235:INFO:Preparing preprocessing pipeline...
2023-06-26 13:04:53,237:INFO:Set up label encoding.
2023-06-26 13:04:53,237:INFO:Set up simple imputation.
2023-06-26 13:04:53,238:INFO:Set up column name cleaning.
2023-06-26 13:04:53,363:INFO:Finished creating preprocessing pipeline.
2023-06-26 13:04:53,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-26 13:04:53,369:INFO:Creating final display dataframe.
2023-06-26 13:04:53,595:INFO:Setup _display_container:                     Description              Value
0                    Session id               2097
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (981, 8)
5        Transformed data shape           (981, 8)
6   Transformed train set shape           (686, 8)
7    Transformed test set shape           (295, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               c615
2023-06-26 13:04:53,688:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:53,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,771:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 13:04:53,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 13:04:53,774:INFO:setup() successfully completed in 1.59s...............
2023-06-26 13:04:53,774:INFO:Initializing compare_models()
2023-06-26 13:04:53,774:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 13:04:53,774:INFO:Checking exceptions
2023-06-26 13:04:53,777:INFO:Preparing display monitor
2023-06-26 13:04:53,801:INFO:Initializing Logistic Regression
2023-06-26 13:04:53,801:INFO:Total runtime is 0.0 minutes
2023-06-26 13:04:53,805:INFO:SubProcess create_model() called ==================================
2023-06-26 13:04:53,806:INFO:Initializing create_model()
2023-06-26 13:04:53,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:04:53,806:INFO:Checking exceptions
2023-06-26 13:04:53,806:INFO:Importing libraries
2023-06-26 13:04:53,806:INFO:Copying training dataset
2023-06-26 13:04:53,810:INFO:Defining folds
2023-06-26 13:04:53,811:INFO:Declaring metric variables
2023-06-26 13:04:53,814:INFO:Importing untrained model
2023-06-26 13:04:53,819:INFO:Logistic Regression Imported successfully
2023-06-26 13:04:53,825:INFO:Starting cross validation
2023-06-26 13:04:53,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:05,957:INFO:Calculating mean and std
2023-06-26 13:05:05,957:INFO:Creating metrics dataframe
2023-06-26 13:05:06,388:INFO:Uploading results into container
2023-06-26 13:05:06,389:INFO:Uploading model into container now
2023-06-26 13:05:06,389:INFO:_master_model_container: 1
2023-06-26 13:05:06,389:INFO:_display_container: 2
2023-06-26 13:05:06,389:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2097, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 13:05:06,390:INFO:create_model() successfully completed......................................
2023-06-26 13:05:06,476:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:06,476:INFO:Creating metrics dataframe
2023-06-26 13:05:06,486:INFO:Initializing K Neighbors Classifier
2023-06-26 13:05:06,486:INFO:Total runtime is 0.21141889492670696 minutes
2023-06-26 13:05:06,489:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:06,490:INFO:Initializing create_model()
2023-06-26 13:05:06,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:06,491:INFO:Checking exceptions
2023-06-26 13:05:06,491:INFO:Importing libraries
2023-06-26 13:05:06,491:INFO:Copying training dataset
2023-06-26 13:05:06,495:INFO:Defining folds
2023-06-26 13:05:06,495:INFO:Declaring metric variables
2023-06-26 13:05:06,498:INFO:Importing untrained model
2023-06-26 13:05:06,504:INFO:K Neighbors Classifier Imported successfully
2023-06-26 13:05:06,511:INFO:Starting cross validation
2023-06-26 13:05:06,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:10,508:INFO:Calculating mean and std
2023-06-26 13:05:10,509:INFO:Creating metrics dataframe
2023-06-26 13:05:10,936:INFO:Uploading results into container
2023-06-26 13:05:10,937:INFO:Uploading model into container now
2023-06-26 13:05:10,937:INFO:_master_model_container: 2
2023-06-26 13:05:10,937:INFO:_display_container: 2
2023-06-26 13:05:10,938:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 13:05:10,938:INFO:create_model() successfully completed......................................
2023-06-26 13:05:11,017:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:11,017:INFO:Creating metrics dataframe
2023-06-26 13:05:11,026:INFO:Initializing Naive Bayes
2023-06-26 13:05:11,026:INFO:Total runtime is 0.2870843807856242 minutes
2023-06-26 13:05:11,030:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:11,030:INFO:Initializing create_model()
2023-06-26 13:05:11,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:11,031:INFO:Checking exceptions
2023-06-26 13:05:11,031:INFO:Importing libraries
2023-06-26 13:05:11,031:INFO:Copying training dataset
2023-06-26 13:05:11,035:INFO:Defining folds
2023-06-26 13:05:11,035:INFO:Declaring metric variables
2023-06-26 13:05:11,038:INFO:Importing untrained model
2023-06-26 13:05:11,042:INFO:Naive Bayes Imported successfully
2023-06-26 13:05:11,052:INFO:Starting cross validation
2023-06-26 13:05:11,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:15,112:INFO:Calculating mean and std
2023-06-26 13:05:15,113:INFO:Creating metrics dataframe
2023-06-26 13:05:15,539:INFO:Uploading results into container
2023-06-26 13:05:15,540:INFO:Uploading model into container now
2023-06-26 13:05:15,540:INFO:_master_model_container: 3
2023-06-26 13:05:15,540:INFO:_display_container: 2
2023-06-26 13:05:15,540:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 13:05:15,540:INFO:create_model() successfully completed......................................
2023-06-26 13:05:15,618:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:15,618:INFO:Creating metrics dataframe
2023-06-26 13:05:15,628:INFO:Initializing Decision Tree Classifier
2023-06-26 13:05:15,628:INFO:Total runtime is 0.3637808283170064 minutes
2023-06-26 13:05:15,634:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:15,635:INFO:Initializing create_model()
2023-06-26 13:05:15,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:15,635:INFO:Checking exceptions
2023-06-26 13:05:15,635:INFO:Importing libraries
2023-06-26 13:05:15,635:INFO:Copying training dataset
2023-06-26 13:05:15,640:INFO:Defining folds
2023-06-26 13:05:15,640:INFO:Declaring metric variables
2023-06-26 13:05:15,643:INFO:Importing untrained model
2023-06-26 13:05:15,648:INFO:Decision Tree Classifier Imported successfully
2023-06-26 13:05:15,657:INFO:Starting cross validation
2023-06-26 13:05:15,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:19,685:INFO:Calculating mean and std
2023-06-26 13:05:19,686:INFO:Creating metrics dataframe
2023-06-26 13:05:20,115:INFO:Uploading results into container
2023-06-26 13:05:20,115:INFO:Uploading model into container now
2023-06-26 13:05:20,116:INFO:_master_model_container: 4
2023-06-26 13:05:20,116:INFO:_display_container: 2
2023-06-26 13:05:20,117:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2097, splitter='best')
2023-06-26 13:05:20,117:INFO:create_model() successfully completed......................................
2023-06-26 13:05:20,195:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:20,195:INFO:Creating metrics dataframe
2023-06-26 13:05:20,206:INFO:Initializing SVM - Linear Kernel
2023-06-26 13:05:20,206:INFO:Total runtime is 0.4400892456372579 minutes
2023-06-26 13:05:20,209:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:20,209:INFO:Initializing create_model()
2023-06-26 13:05:20,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:20,210:INFO:Checking exceptions
2023-06-26 13:05:20,210:INFO:Importing libraries
2023-06-26 13:05:20,211:INFO:Copying training dataset
2023-06-26 13:05:20,214:INFO:Defining folds
2023-06-26 13:05:20,215:INFO:Declaring metric variables
2023-06-26 13:05:20,219:INFO:Importing untrained model
2023-06-26 13:05:20,223:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 13:05:20,234:INFO:Starting cross validation
2023-06-26 13:05:20,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:20,381:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:20,387:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:20,484:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,027:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,061:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,113:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,271:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,729:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:21,793:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 13:05:24,278:INFO:Calculating mean and std
2023-06-26 13:05:24,279:INFO:Creating metrics dataframe
2023-06-26 13:05:24,708:INFO:Uploading results into container
2023-06-26 13:05:24,709:INFO:Uploading model into container now
2023-06-26 13:05:24,710:INFO:_master_model_container: 5
2023-06-26 13:05:24,710:INFO:_display_container: 2
2023-06-26 13:05:24,711:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2097, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 13:05:24,711:INFO:create_model() successfully completed......................................
2023-06-26 13:05:24,790:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:24,790:INFO:Creating metrics dataframe
2023-06-26 13:05:24,800:INFO:Initializing Ridge Classifier
2023-06-26 13:05:24,800:INFO:Total runtime is 0.516656494140625 minutes
2023-06-26 13:05:24,804:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:24,804:INFO:Initializing create_model()
2023-06-26 13:05:24,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:24,804:INFO:Checking exceptions
2023-06-26 13:05:24,804:INFO:Importing libraries
2023-06-26 13:05:24,805:INFO:Copying training dataset
2023-06-26 13:05:24,809:INFO:Defining folds
2023-06-26 13:05:24,809:INFO:Declaring metric variables
2023-06-26 13:05:24,813:INFO:Importing untrained model
2023-06-26 13:05:24,819:INFO:Ridge Classifier Imported successfully
2023-06-26 13:05:24,825:INFO:Starting cross validation
2023-06-26 13:05:24,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:24,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:24,959:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:24,962:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:24,987:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:25,631:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:25,633:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:25,676:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:25,696:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:26,296:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:26,312:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 13:05:28,798:INFO:Calculating mean and std
2023-06-26 13:05:28,799:INFO:Creating metrics dataframe
2023-06-26 13:05:29,214:INFO:Uploading results into container
2023-06-26 13:05:29,214:INFO:Uploading model into container now
2023-06-26 13:05:29,215:INFO:_master_model_container: 6
2023-06-26 13:05:29,215:INFO:_display_container: 2
2023-06-26 13:05:29,215:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2097, solver='auto',
                tol=0.0001)
2023-06-26 13:05:29,216:INFO:create_model() successfully completed......................................
2023-06-26 13:05:29,296:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:29,296:INFO:Creating metrics dataframe
2023-06-26 13:05:29,307:INFO:Initializing Random Forest Classifier
2023-06-26 13:05:29,307:INFO:Total runtime is 0.5917629400889078 minutes
2023-06-26 13:05:29,310:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:29,311:INFO:Initializing create_model()
2023-06-26 13:05:29,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:29,311:INFO:Checking exceptions
2023-06-26 13:05:29,311:INFO:Importing libraries
2023-06-26 13:05:29,311:INFO:Copying training dataset
2023-06-26 13:05:29,316:INFO:Defining folds
2023-06-26 13:05:29,316:INFO:Declaring metric variables
2023-06-26 13:05:29,321:INFO:Importing untrained model
2023-06-26 13:05:29,325:INFO:Random Forest Classifier Imported successfully
2023-06-26 13:05:29,332:INFO:Starting cross validation
2023-06-26 13:05:29,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:34,544:INFO:Calculating mean and std
2023-06-26 13:05:34,545:INFO:Creating metrics dataframe
2023-06-26 13:05:35,039:INFO:Uploading results into container
2023-06-26 13:05:35,040:INFO:Uploading model into container now
2023-06-26 13:05:35,040:INFO:_master_model_container: 7
2023-06-26 13:05:35,040:INFO:_display_container: 2
2023-06-26 13:05:35,041:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2097, verbose=0, warm_start=False)
2023-06-26 13:05:35,041:INFO:create_model() successfully completed......................................
2023-06-26 13:05:35,121:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:35,121:INFO:Creating metrics dataframe
2023-06-26 13:05:35,132:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 13:05:35,132:INFO:Total runtime is 0.688850728670756 minutes
2023-06-26 13:05:35,136:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:35,136:INFO:Initializing create_model()
2023-06-26 13:05:35,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:35,136:INFO:Checking exceptions
2023-06-26 13:05:35,137:INFO:Importing libraries
2023-06-26 13:05:35,137:INFO:Copying training dataset
2023-06-26 13:05:35,141:INFO:Defining folds
2023-06-26 13:05:35,141:INFO:Declaring metric variables
2023-06-26 13:05:35,145:INFO:Importing untrained model
2023-06-26 13:05:35,149:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 13:05:35,158:INFO:Starting cross validation
2023-06-26 13:05:35,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:39,381:INFO:Calculating mean and std
2023-06-26 13:05:39,382:INFO:Creating metrics dataframe
2023-06-26 13:05:39,826:INFO:Uploading results into container
2023-06-26 13:05:39,827:INFO:Uploading model into container now
2023-06-26 13:05:39,828:INFO:_master_model_container: 8
2023-06-26 13:05:39,828:INFO:_display_container: 2
2023-06-26 13:05:39,828:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 13:05:39,828:INFO:create_model() successfully completed......................................
2023-06-26 13:05:39,908:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:39,908:INFO:Creating metrics dataframe
2023-06-26 13:05:39,919:INFO:Initializing Ada Boost Classifier
2023-06-26 13:05:39,919:INFO:Total runtime is 0.7686362187067668 minutes
2023-06-26 13:05:39,922:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:39,923:INFO:Initializing create_model()
2023-06-26 13:05:39,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:39,923:INFO:Checking exceptions
2023-06-26 13:05:39,923:INFO:Importing libraries
2023-06-26 13:05:39,924:INFO:Copying training dataset
2023-06-26 13:05:39,928:INFO:Defining folds
2023-06-26 13:05:39,929:INFO:Declaring metric variables
2023-06-26 13:05:39,934:INFO:Importing untrained model
2023-06-26 13:05:39,938:INFO:Ada Boost Classifier Imported successfully
2023-06-26 13:05:39,946:INFO:Starting cross validation
2023-06-26 13:05:39,946:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:44,545:INFO:Calculating mean and std
2023-06-26 13:05:44,546:INFO:Creating metrics dataframe
2023-06-26 13:05:44,996:INFO:Uploading results into container
2023-06-26 13:05:44,998:INFO:Uploading model into container now
2023-06-26 13:05:44,998:INFO:_master_model_container: 9
2023-06-26 13:05:44,998:INFO:_display_container: 2
2023-06-26 13:05:44,999:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2097)
2023-06-26 13:05:44,999:INFO:create_model() successfully completed......................................
2023-06-26 13:05:45,078:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:45,078:INFO:Creating metrics dataframe
2023-06-26 13:05:45,090:INFO:Initializing Gradient Boosting Classifier
2023-06-26 13:05:45,090:INFO:Total runtime is 0.8548197746276855 minutes
2023-06-26 13:05:45,094:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:45,094:INFO:Initializing create_model()
2023-06-26 13:05:45,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:45,095:INFO:Checking exceptions
2023-06-26 13:05:45,095:INFO:Importing libraries
2023-06-26 13:05:45,095:INFO:Copying training dataset
2023-06-26 13:05:45,102:INFO:Defining folds
2023-06-26 13:05:45,102:INFO:Declaring metric variables
2023-06-26 13:05:45,107:INFO:Importing untrained model
2023-06-26 13:05:45,110:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 13:05:45,118:INFO:Starting cross validation
2023-06-26 13:05:45,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:51,314:INFO:Calculating mean and std
2023-06-26 13:05:51,316:INFO:Creating metrics dataframe
2023-06-26 13:05:51,768:INFO:Uploading results into container
2023-06-26 13:05:51,770:INFO:Uploading model into container now
2023-06-26 13:05:51,772:INFO:_master_model_container: 10
2023-06-26 13:05:51,772:INFO:_display_container: 2
2023-06-26 13:05:51,772:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2097, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 13:05:51,772:INFO:create_model() successfully completed......................................
2023-06-26 13:05:51,852:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:51,852:INFO:Creating metrics dataframe
2023-06-26 13:05:51,863:INFO:Initializing Linear Discriminant Analysis
2023-06-26 13:05:51,863:INFO:Total runtime is 0.9676990866661072 minutes
2023-06-26 13:05:51,868:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:51,868:INFO:Initializing create_model()
2023-06-26 13:05:51,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:51,869:INFO:Checking exceptions
2023-06-26 13:05:51,869:INFO:Importing libraries
2023-06-26 13:05:51,869:INFO:Copying training dataset
2023-06-26 13:05:51,873:INFO:Defining folds
2023-06-26 13:05:51,873:INFO:Declaring metric variables
2023-06-26 13:05:51,878:INFO:Importing untrained model
2023-06-26 13:05:51,882:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 13:05:51,890:INFO:Starting cross validation
2023-06-26 13:05:51,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:05:56,164:INFO:Calculating mean and std
2023-06-26 13:05:56,165:INFO:Creating metrics dataframe
2023-06-26 13:05:56,627:INFO:Uploading results into container
2023-06-26 13:05:56,628:INFO:Uploading model into container now
2023-06-26 13:05:56,629:INFO:_master_model_container: 11
2023-06-26 13:05:56,629:INFO:_display_container: 2
2023-06-26 13:05:56,629:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 13:05:56,629:INFO:create_model() successfully completed......................................
2023-06-26 13:05:56,729:INFO:SubProcess create_model() end ==================================
2023-06-26 13:05:56,730:INFO:Creating metrics dataframe
2023-06-26 13:05:56,742:INFO:Initializing Extra Trees Classifier
2023-06-26 13:05:56,742:INFO:Total runtime is 1.0490141312281291 minutes
2023-06-26 13:05:56,745:INFO:SubProcess create_model() called ==================================
2023-06-26 13:05:56,746:INFO:Initializing create_model()
2023-06-26 13:05:56,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:05:56,746:INFO:Checking exceptions
2023-06-26 13:05:56,747:INFO:Importing libraries
2023-06-26 13:05:56,747:INFO:Copying training dataset
2023-06-26 13:05:56,751:INFO:Defining folds
2023-06-26 13:05:56,752:INFO:Declaring metric variables
2023-06-26 13:05:56,755:INFO:Importing untrained model
2023-06-26 13:05:56,760:INFO:Extra Trees Classifier Imported successfully
2023-06-26 13:05:56,772:INFO:Starting cross validation
2023-06-26 13:05:56,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:06:01,881:INFO:Calculating mean and std
2023-06-26 13:06:01,882:INFO:Creating metrics dataframe
2023-06-26 13:06:02,356:INFO:Uploading results into container
2023-06-26 13:06:02,357:INFO:Uploading model into container now
2023-06-26 13:06:02,358:INFO:_master_model_container: 12
2023-06-26 13:06:02,359:INFO:_display_container: 2
2023-06-26 13:06:02,360:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2097, verbose=0, warm_start=False)
2023-06-26 13:06:02,360:INFO:create_model() successfully completed......................................
2023-06-26 13:06:02,440:INFO:SubProcess create_model() end ==================================
2023-06-26 13:06:02,441:INFO:Creating metrics dataframe
2023-06-26 13:06:02,453:INFO:Initializing Extreme Gradient Boosting
2023-06-26 13:06:02,453:INFO:Total runtime is 1.1442065080006918 minutes
2023-06-26 13:06:02,457:INFO:SubProcess create_model() called ==================================
2023-06-26 13:06:02,457:INFO:Initializing create_model()
2023-06-26 13:06:02,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:06:02,458:INFO:Checking exceptions
2023-06-26 13:06:02,458:INFO:Importing libraries
2023-06-26 13:06:02,458:INFO:Copying training dataset
2023-06-26 13:06:02,462:INFO:Defining folds
2023-06-26 13:06:02,463:INFO:Declaring metric variables
2023-06-26 13:06:02,469:INFO:Importing untrained model
2023-06-26 13:06:02,472:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 13:06:02,479:INFO:Starting cross validation
2023-06-26 13:06:02,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:06:10,512:INFO:Calculating mean and std
2023-06-26 13:06:10,513:INFO:Creating metrics dataframe
2023-06-26 13:06:10,997:INFO:Uploading results into container
2023-06-26 13:06:10,998:INFO:Uploading model into container now
2023-06-26 13:06:10,999:INFO:_master_model_container: 13
2023-06-26 13:06:10,999:INFO:_display_container: 2
2023-06-26 13:06:11,000:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 13:06:11,001:INFO:create_model() successfully completed......................................
2023-06-26 13:06:11,081:INFO:SubProcess create_model() end ==================================
2023-06-26 13:06:11,081:INFO:Creating metrics dataframe
2023-06-26 13:06:11,093:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 13:06:11,093:INFO:Total runtime is 1.288193122545878 minutes
2023-06-26 13:06:11,096:INFO:SubProcess create_model() called ==================================
2023-06-26 13:06:11,097:INFO:Initializing create_model()
2023-06-26 13:06:11,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:06:11,097:INFO:Checking exceptions
2023-06-26 13:06:11,097:INFO:Importing libraries
2023-06-26 13:06:11,097:INFO:Copying training dataset
2023-06-26 13:06:11,102:INFO:Defining folds
2023-06-26 13:06:11,103:INFO:Declaring metric variables
2023-06-26 13:06:11,108:INFO:Importing untrained model
2023-06-26 13:06:11,113:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 13:06:11,120:INFO:Starting cross validation
2023-06-26 13:06:11,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:06:17,069:INFO:Calculating mean and std
2023-06-26 13:06:17,070:INFO:Creating metrics dataframe
2023-06-26 13:06:17,556:INFO:Uploading results into container
2023-06-26 13:06:17,557:INFO:Uploading model into container now
2023-06-26 13:06:17,557:INFO:_master_model_container: 14
2023-06-26 13:06:17,557:INFO:_display_container: 2
2023-06-26 13:06:17,558:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2097, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 13:06:17,558:INFO:create_model() successfully completed......................................
2023-06-26 13:06:17,636:INFO:SubProcess create_model() end ==================================
2023-06-26 13:06:17,636:INFO:Creating metrics dataframe
2023-06-26 13:06:17,651:INFO:Initializing Dummy Classifier
2023-06-26 13:06:17,651:INFO:Total runtime is 1.3974975228309632 minutes
2023-06-26 13:06:17,655:INFO:SubProcess create_model() called ==================================
2023-06-26 13:06:17,656:INFO:Initializing create_model()
2023-06-26 13:06:17,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75AB470D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:06:17,656:INFO:Checking exceptions
2023-06-26 13:06:17,656:INFO:Importing libraries
2023-06-26 13:06:17,656:INFO:Copying training dataset
2023-06-26 13:06:17,661:INFO:Defining folds
2023-06-26 13:06:17,672:INFO:Declaring metric variables
2023-06-26 13:06:17,683:INFO:Importing untrained model
2023-06-26 13:06:17,700:INFO:Dummy Classifier Imported successfully
2023-06-26 13:06:17,706:INFO:Starting cross validation
2023-06-26 13:06:17,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:06:17,922:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:17,922:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:18,711:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:18,736:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:18,747:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:18,751:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:19,514:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:19,520:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 13:06:22,499:INFO:Calculating mean and std
2023-06-26 13:06:22,500:INFO:Creating metrics dataframe
2023-06-26 13:06:22,989:INFO:Uploading results into container
2023-06-26 13:06:22,989:INFO:Uploading model into container now
2023-06-26 13:06:22,990:INFO:_master_model_container: 15
2023-06-26 13:06:22,990:INFO:_display_container: 2
2023-06-26 13:06:22,991:INFO:DummyClassifier(constant=None, random_state=2097, strategy='prior')
2023-06-26 13:06:22,991:INFO:create_model() successfully completed......................................
2023-06-26 13:06:23,070:INFO:SubProcess create_model() end ==================================
2023-06-26 13:06:23,070:INFO:Creating metrics dataframe
2023-06-26 13:06:23,091:INFO:Initializing create_model()
2023-06-26 13:06:23,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:06:23,091:INFO:Checking exceptions
2023-06-26 13:06:23,093:INFO:Importing libraries
2023-06-26 13:06:23,093:INFO:Copying training dataset
2023-06-26 13:06:23,097:INFO:Defining folds
2023-06-26 13:06:23,097:INFO:Declaring metric variables
2023-06-26 13:06:23,097:INFO:Importing untrained model
2023-06-26 13:06:23,097:INFO:Declaring custom model
2023-06-26 13:06:23,098:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 13:06:23,098:INFO:Cross validation set to False
2023-06-26 13:06:23,098:INFO:Fitting Model
2023-06-26 13:06:23,607:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 13:06:23,607:INFO:create_model() successfully completed......................................
2023-06-26 13:06:23,714:INFO:_master_model_container: 15
2023-06-26 13:06:23,715:INFO:_display_container: 2
2023-06-26 13:06:23,715:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 13:06:23,715:INFO:compare_models() successfully completed......................................
2023-06-26 13:06:23,715:INFO:Initializing evaluate_model()
2023-06-26 13:06:23,715:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-26 13:06:23,722:INFO:Initializing plot_model()
2023-06-26 13:06:23,722:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, system=True)
2023-06-26 13:06:23,723:INFO:Checking exceptions
2023-06-26 13:06:23,725:INFO:Preloading libraries
2023-06-26 13:06:23,726:INFO:Copying training dataset
2023-06-26 13:06:23,726:INFO:Plot type: pipeline
2023-06-26 13:06:23,863:INFO:Visual Rendered Successfully
2023-06-26 13:06:23,941:INFO:plot_model() successfully completed......................................
2023-06-26 13:52:53,016:INFO:Initializing create_model()
2023-06-26 13:52:53,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 13:52:53,016:INFO:Checking exceptions
2023-06-26 13:52:53,032:INFO:Importing libraries
2023-06-26 13:52:53,032:INFO:Copying training dataset
2023-06-26 13:52:53,036:INFO:Defining folds
2023-06-26 13:52:53,037:INFO:Declaring metric variables
2023-06-26 13:52:53,040:INFO:Importing untrained model
2023-06-26 13:52:53,043:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 13:52:53,055:INFO:Starting cross validation
2023-06-26 13:52:53,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 13:53:01,291:INFO:Calculating mean and std
2023-06-26 13:53:01,293:INFO:Creating metrics dataframe
2023-06-26 13:53:01,299:INFO:Finalizing model
2023-06-26 13:53:01,882:INFO:Uploading results into container
2023-06-26 13:53:01,884:INFO:Uploading model into container now
2023-06-26 13:53:01,896:INFO:_master_model_container: 16
2023-06-26 13:53:01,896:INFO:_display_container: 3
2023-06-26 13:53:01,896:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 13:53:01,897:INFO:create_model() successfully completed......................................
2023-06-26 13:53:02,004:INFO:Initializing predict_model()
2023-06-26 13:53:02,004:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75AB77D30>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E75AFB3C70>)
2023-06-26 13:53:02,004:INFO:Checking exceptions
2023-06-26 13:53:02,004:INFO:Preloading libraries
2023-06-26 13:53:02,006:INFO:Set up data.
2023-06-26 13:53:02,010:INFO:Set up index.
2023-06-26 15:05:29,818:INFO:PyCaret ClassificationExperiment
2023-06-26 15:05:29,818:INFO:Logging name: clf-default-name
2023-06-26 15:05:29,818:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-26 15:05:29,818:INFO:version 3.0.2
2023-06-26 15:05:29,818:INFO:Initializing setup()
2023-06-26 15:05:29,819:INFO:self.USI: 58b4
2023-06-26 15:05:29,819:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'USI', 'X_train', 'exp_name_log', '_ml_usecase', 'pipeline', 'y', 'target_param', 'y_train', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'y_test', 'data', 'idx', 'gpu_param', 'X', 'exp_id', 'n_jobs_param', 'seed', 'log_plots_param', 'is_multiclass', 'html_param'}
2023-06-26 15:05:29,819:INFO:Checking environment
2023-06-26 15:05:29,819:INFO:python_version: 3.10.5
2023-06-26 15:05:29,819:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-26 15:05:29,819:INFO:machine: AMD64
2023-06-26 15:05:29,819:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-26 15:05:29,822:INFO:Memory: svmem(total=17130000384, available=8746577920, percent=48.9, used=8383422464, free=8746577920)
2023-06-26 15:05:29,823:INFO:Physical Core: 4
2023-06-26 15:05:29,823:INFO:Logical Core: 4
2023-06-26 15:05:29,823:INFO:Checking libraries
2023-06-26 15:05:29,823:INFO:System:
2023-06-26 15:05:29,823:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-26 15:05:29,823:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-26 15:05:29,823:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-26 15:05:29,823:INFO:PyCaret required dependencies:
2023-06-26 15:05:29,823:INFO:                 pip: 23.0.1
2023-06-26 15:05:29,823:INFO:          setuptools: 58.1.0
2023-06-26 15:05:29,823:INFO:             pycaret: 3.0.2
2023-06-26 15:05:29,823:INFO:             IPython: 8.9.0
2023-06-26 15:05:29,823:INFO:          ipywidgets: 8.0.6
2023-06-26 15:05:29,824:INFO:                tqdm: 4.65.0
2023-06-26 15:05:29,824:INFO:               numpy: 1.23.5
2023-06-26 15:05:29,824:INFO:              pandas: 1.5.3
2023-06-26 15:05:29,824:INFO:              jinja2: 3.1.2
2023-06-26 15:05:29,824:INFO:               scipy: 1.10.1
2023-06-26 15:05:29,824:INFO:              joblib: 1.2.0
2023-06-26 15:05:29,824:INFO:             sklearn: 1.2.2
2023-06-26 15:05:29,824:INFO:                pyod: 1.0.9
2023-06-26 15:05:29,824:INFO:            imblearn: 0.10.1
2023-06-26 15:05:29,824:INFO:   category_encoders: 2.6.1
2023-06-26 15:05:29,824:INFO:            lightgbm: 3.3.5
2023-06-26 15:05:29,824:INFO:               numba: 0.57.0
2023-06-26 15:05:29,824:INFO:            requests: 2.28.2
2023-06-26 15:05:29,824:INFO:          matplotlib: 3.7.1
2023-06-26 15:05:29,824:INFO:          scikitplot: 0.3.7
2023-06-26 15:05:29,824:INFO:         yellowbrick: 1.5
2023-06-26 15:05:29,824:INFO:              plotly: 5.15.0
2023-06-26 15:05:29,824:INFO:             kaleido: 0.2.1
2023-06-26 15:05:29,824:INFO:         statsmodels: 0.14.0
2023-06-26 15:05:29,824:INFO:              sktime: 0.17.0
2023-06-26 15:05:29,825:INFO:               tbats: 1.1.3
2023-06-26 15:05:29,825:INFO:            pmdarima: 2.0.3
2023-06-26 15:05:29,825:INFO:              psutil: 5.9.4
2023-06-26 15:05:29,825:INFO:PyCaret optional dependencies:
2023-06-26 15:05:29,825:INFO:                shap: Not installed
2023-06-26 15:05:29,825:INFO:           interpret: 0.4.2
2023-06-26 15:05:29,825:INFO:                umap: Not installed
2023-06-26 15:05:29,825:INFO:    pandas_profiling: Not installed
2023-06-26 15:05:29,825:INFO:  explainerdashboard: Not installed
2023-06-26 15:05:29,825:INFO:             autoviz: Not installed
2023-06-26 15:05:29,825:INFO:           fairlearn: Not installed
2023-06-26 15:05:29,825:INFO:             xgboost: 1.7.5
2023-06-26 15:05:29,825:INFO:            catboost: Not installed
2023-06-26 15:05:29,825:INFO:              kmodes: Not installed
2023-06-26 15:05:29,825:INFO:             mlxtend: Not installed
2023-06-26 15:05:29,825:INFO:       statsforecast: Not installed
2023-06-26 15:05:29,825:INFO:        tune_sklearn: Not installed
2023-06-26 15:05:29,825:INFO:                 ray: Not installed
2023-06-26 15:05:29,826:INFO:            hyperopt: 0.2.7
2023-06-26 15:05:29,826:INFO:              optuna: Not installed
2023-06-26 15:05:29,826:INFO:               skopt: Not installed
2023-06-26 15:05:29,826:INFO:              mlflow: Not installed
2023-06-26 15:05:29,826:INFO:              gradio: Not installed
2023-06-26 15:05:29,826:INFO:             fastapi: Not installed
2023-06-26 15:05:29,826:INFO:             uvicorn: Not installed
2023-06-26 15:05:29,826:INFO:              m2cgen: Not installed
2023-06-26 15:05:29,826:INFO:           evidently: Not installed
2023-06-26 15:05:29,826:INFO:               fugue: Not installed
2023-06-26 15:05:29,826:INFO:           streamlit: Not installed
2023-06-26 15:05:29,826:INFO:             prophet: 1.1.4
2023-06-26 15:05:29,826:INFO:None
2023-06-26 15:05:29,827:INFO:Set up data.
2023-06-26 15:05:29,832:INFO:Set up train/test split.
2023-06-26 15:05:29,835:INFO:Set up index.
2023-06-26 15:05:29,836:INFO:Set up folding strategy.
2023-06-26 15:05:29,836:INFO:Assigning column types.
2023-06-26 15:05:29,838:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-26 15:05:29,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 15:05:29,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 15:05:29,916:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:29,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:29,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 15:05:29,968:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 15:05:29,997:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,000:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-26 15:05:30,048:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 15:05:30,076:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 15:05:30,157:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,160:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-26 15:05:30,242:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,322:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,327:INFO:Preparing preprocessing pipeline...
2023-06-26 15:05:30,328:INFO:Set up label encoding.
2023-06-26 15:05:30,328:INFO:Set up simple imputation.
2023-06-26 15:05:30,329:INFO:Set up column name cleaning.
2023-06-26 15:05:30,396:INFO:Finished creating preprocessing pipeline.
2023-06-26 15:05:30,401:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-26 15:05:30,401:INFO:Creating final display dataframe.
2023-06-26 15:05:30,560:INFO:Setup _display_container:                     Description              Value
0                    Session id               8338
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (981, 8)
5        Transformed data shape           (981, 8)
6   Transformed train set shape           (686, 8)
7    Transformed test set shape           (295, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               58b4
2023-06-26 15:05:30,652:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,731:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 15:05:30,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 15:05:30,734:INFO:setup() successfully completed in 1.44s...............
2023-06-26 15:05:30,735:INFO:Initializing compare_models()
2023-06-26 15:05:30,735:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 15:05:30,735:INFO:Checking exceptions
2023-06-26 15:05:30,737:INFO:Preparing display monitor
2023-06-26 15:05:30,761:INFO:Initializing Logistic Regression
2023-06-26 15:05:30,762:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-06-26 15:05:30,766:INFO:SubProcess create_model() called ==================================
2023-06-26 15:05:30,766:INFO:Initializing create_model()
2023-06-26 15:05:30,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:05:30,767:INFO:Checking exceptions
2023-06-26 15:05:30,767:INFO:Importing libraries
2023-06-26 15:05:30,767:INFO:Copying training dataset
2023-06-26 15:05:30,772:INFO:Defining folds
2023-06-26 15:05:30,772:INFO:Declaring metric variables
2023-06-26 15:05:30,775:INFO:Importing untrained model
2023-06-26 15:05:30,779:INFO:Logistic Regression Imported successfully
2023-06-26 15:05:30,786:INFO:Starting cross validation
2023-06-26 15:05:30,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:05:41,234:INFO:Calculating mean and std
2023-06-26 15:05:41,236:INFO:Creating metrics dataframe
2023-06-26 15:05:41,741:INFO:Uploading results into container
2023-06-26 15:05:41,742:INFO:Uploading model into container now
2023-06-26 15:05:41,742:INFO:_master_model_container: 1
2023-06-26 15:05:41,742:INFO:_display_container: 2
2023-06-26 15:05:41,743:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 15:05:41,744:INFO:create_model() successfully completed......................................
2023-06-26 15:05:41,832:INFO:SubProcess create_model() end ==================================
2023-06-26 15:05:41,832:INFO:Creating metrics dataframe
2023-06-26 15:05:41,840:INFO:Initializing K Neighbors Classifier
2023-06-26 15:05:41,841:INFO:Total runtime is 0.18466524680455526 minutes
2023-06-26 15:05:41,846:INFO:SubProcess create_model() called ==================================
2023-06-26 15:05:41,846:INFO:Initializing create_model()
2023-06-26 15:05:41,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:05:41,847:INFO:Checking exceptions
2023-06-26 15:05:41,847:INFO:Importing libraries
2023-06-26 15:05:41,847:INFO:Copying training dataset
2023-06-26 15:05:41,851:INFO:Defining folds
2023-06-26 15:05:41,851:INFO:Declaring metric variables
2023-06-26 15:05:41,855:INFO:Importing untrained model
2023-06-26 15:05:41,860:INFO:K Neighbors Classifier Imported successfully
2023-06-26 15:05:41,867:INFO:Starting cross validation
2023-06-26 15:05:41,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:05:46,539:INFO:Calculating mean and std
2023-06-26 15:05:46,540:INFO:Creating metrics dataframe
2023-06-26 15:05:47,045:INFO:Uploading results into container
2023-06-26 15:05:47,046:INFO:Uploading model into container now
2023-06-26 15:05:47,046:INFO:_master_model_container: 2
2023-06-26 15:05:47,046:INFO:_display_container: 2
2023-06-26 15:05:47,046:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 15:05:47,047:INFO:create_model() successfully completed......................................
2023-06-26 15:05:47,127:INFO:SubProcess create_model() end ==================================
2023-06-26 15:05:47,127:INFO:Creating metrics dataframe
2023-06-26 15:05:47,138:INFO:Initializing Naive Bayes
2023-06-26 15:05:47,138:INFO:Total runtime is 0.272951336701711 minutes
2023-06-26 15:05:47,141:INFO:SubProcess create_model() called ==================================
2023-06-26 15:05:47,143:INFO:Initializing create_model()
2023-06-26 15:05:47,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:05:47,143:INFO:Checking exceptions
2023-06-26 15:05:47,144:INFO:Importing libraries
2023-06-26 15:05:47,144:INFO:Copying training dataset
2023-06-26 15:05:47,149:INFO:Defining folds
2023-06-26 15:05:47,149:INFO:Declaring metric variables
2023-06-26 15:05:47,152:INFO:Importing untrained model
2023-06-26 15:05:47,157:INFO:Naive Bayes Imported successfully
2023-06-26 15:05:47,166:INFO:Starting cross validation
2023-06-26 15:05:47,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:05:51,894:INFO:Calculating mean and std
2023-06-26 15:05:51,895:INFO:Creating metrics dataframe
2023-06-26 15:05:52,407:INFO:Uploading results into container
2023-06-26 15:05:52,407:INFO:Uploading model into container now
2023-06-26 15:05:52,408:INFO:_master_model_container: 3
2023-06-26 15:05:52,408:INFO:_display_container: 2
2023-06-26 15:05:52,408:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 15:05:52,408:INFO:create_model() successfully completed......................................
2023-06-26 15:05:52,489:INFO:SubProcess create_model() end ==================================
2023-06-26 15:05:52,489:INFO:Creating metrics dataframe
2023-06-26 15:05:52,499:INFO:Initializing Decision Tree Classifier
2023-06-26 15:05:52,500:INFO:Total runtime is 0.3623168428738912 minutes
2023-06-26 15:05:52,503:INFO:SubProcess create_model() called ==================================
2023-06-26 15:05:52,503:INFO:Initializing create_model()
2023-06-26 15:05:52,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:05:52,504:INFO:Checking exceptions
2023-06-26 15:05:52,504:INFO:Importing libraries
2023-06-26 15:05:52,504:INFO:Copying training dataset
2023-06-26 15:05:52,508:INFO:Defining folds
2023-06-26 15:05:52,508:INFO:Declaring metric variables
2023-06-26 15:05:52,512:INFO:Importing untrained model
2023-06-26 15:05:52,516:INFO:Decision Tree Classifier Imported successfully
2023-06-26 15:05:52,524:INFO:Starting cross validation
2023-06-26 15:05:52,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:05:57,116:INFO:Calculating mean and std
2023-06-26 15:05:57,117:INFO:Creating metrics dataframe
2023-06-26 15:05:57,618:INFO:Uploading results into container
2023-06-26 15:05:57,619:INFO:Uploading model into container now
2023-06-26 15:05:57,619:INFO:_master_model_container: 4
2023-06-26 15:05:57,619:INFO:_display_container: 2
2023-06-26 15:05:57,619:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8338, splitter='best')
2023-06-26 15:05:57,619:INFO:create_model() successfully completed......................................
2023-06-26 15:05:57,700:INFO:SubProcess create_model() end ==================================
2023-06-26 15:05:57,700:INFO:Creating metrics dataframe
2023-06-26 15:05:57,714:INFO:Initializing SVM - Linear Kernel
2023-06-26 15:05:57,714:INFO:Total runtime is 0.4492238561312358 minutes
2023-06-26 15:05:57,718:INFO:SubProcess create_model() called ==================================
2023-06-26 15:05:57,718:INFO:Initializing create_model()
2023-06-26 15:05:57,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:05:57,719:INFO:Checking exceptions
2023-06-26 15:05:57,719:INFO:Importing libraries
2023-06-26 15:05:57,719:INFO:Copying training dataset
2023-06-26 15:05:57,723:INFO:Defining folds
2023-06-26 15:05:57,723:INFO:Declaring metric variables
2023-06-26 15:05:57,733:INFO:Importing untrained model
2023-06-26 15:05:57,737:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 15:05:57,747:INFO:Starting cross validation
2023-06-26 15:05:57,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:05:57,917:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:57,924:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:57,944:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:58,750:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:58,754:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:58,761:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:58,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:59,531:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:05:59,548:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 15:06:02,429:INFO:Calculating mean and std
2023-06-26 15:06:02,430:INFO:Creating metrics dataframe
2023-06-26 15:06:02,931:INFO:Uploading results into container
2023-06-26 15:06:02,931:INFO:Uploading model into container now
2023-06-26 15:06:02,932:INFO:_master_model_container: 5
2023-06-26 15:06:02,932:INFO:_display_container: 2
2023-06-26 15:06:02,932:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8338, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 15:06:02,932:INFO:create_model() successfully completed......................................
2023-06-26 15:06:03,010:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:03,011:INFO:Creating metrics dataframe
2023-06-26 15:06:03,023:INFO:Initializing Ridge Classifier
2023-06-26 15:06:03,023:INFO:Total runtime is 0.5377101500829061 minutes
2023-06-26 15:06:03,029:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:03,030:INFO:Initializing create_model()
2023-06-26 15:06:03,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:03,030:INFO:Checking exceptions
2023-06-26 15:06:03,031:INFO:Importing libraries
2023-06-26 15:06:03,031:INFO:Copying training dataset
2023-06-26 15:06:03,034:INFO:Defining folds
2023-06-26 15:06:03,035:INFO:Declaring metric variables
2023-06-26 15:06:03,040:INFO:Importing untrained model
2023-06-26 15:06:03,046:INFO:Ridge Classifier Imported successfully
2023-06-26 15:06:03,053:INFO:Starting cross validation
2023-06-26 15:06:03,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:03,187:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:03,201:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:03,220:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:03,221:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:03,943:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:04,004:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:04,012:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:04,084:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:04,700:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:04,784:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 15:06:07,682:INFO:Calculating mean and std
2023-06-26 15:06:07,683:INFO:Creating metrics dataframe
2023-06-26 15:06:08,182:INFO:Uploading results into container
2023-06-26 15:06:08,183:INFO:Uploading model into container now
2023-06-26 15:06:08,183:INFO:_master_model_container: 6
2023-06-26 15:06:08,183:INFO:_display_container: 2
2023-06-26 15:06:08,183:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8338, solver='auto',
                tol=0.0001)
2023-06-26 15:06:08,183:INFO:create_model() successfully completed......................................
2023-06-26 15:06:08,265:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:08,266:INFO:Creating metrics dataframe
2023-06-26 15:06:08,279:INFO:Initializing Random Forest Classifier
2023-06-26 15:06:08,279:INFO:Total runtime is 0.625295635064443 minutes
2023-06-26 15:06:08,283:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:08,283:INFO:Initializing create_model()
2023-06-26 15:06:08,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:08,284:INFO:Checking exceptions
2023-06-26 15:06:08,284:INFO:Importing libraries
2023-06-26 15:06:08,284:INFO:Copying training dataset
2023-06-26 15:06:08,288:INFO:Defining folds
2023-06-26 15:06:08,289:INFO:Declaring metric variables
2023-06-26 15:06:08,293:INFO:Importing untrained model
2023-06-26 15:06:08,300:INFO:Random Forest Classifier Imported successfully
2023-06-26 15:06:08,307:INFO:Starting cross validation
2023-06-26 15:06:08,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:14,103:INFO:Calculating mean and std
2023-06-26 15:06:14,104:INFO:Creating metrics dataframe
2023-06-26 15:06:14,680:INFO:Uploading results into container
2023-06-26 15:06:14,681:INFO:Uploading model into container now
2023-06-26 15:06:14,682:INFO:_master_model_container: 7
2023-06-26 15:06:14,682:INFO:_display_container: 2
2023-06-26 15:06:14,682:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8338, verbose=0, warm_start=False)
2023-06-26 15:06:14,682:INFO:create_model() successfully completed......................................
2023-06-26 15:06:14,765:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:14,765:INFO:Creating metrics dataframe
2023-06-26 15:06:14,777:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 15:06:14,778:INFO:Total runtime is 0.7335965434710185 minutes
2023-06-26 15:06:14,781:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:14,781:INFO:Initializing create_model()
2023-06-26 15:06:14,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:14,782:INFO:Checking exceptions
2023-06-26 15:06:14,782:INFO:Importing libraries
2023-06-26 15:06:14,782:INFO:Copying training dataset
2023-06-26 15:06:14,785:INFO:Defining folds
2023-06-26 15:06:14,786:INFO:Declaring metric variables
2023-06-26 15:06:14,790:INFO:Importing untrained model
2023-06-26 15:06:14,794:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 15:06:14,802:INFO:Starting cross validation
2023-06-26 15:06:14,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:19,572:INFO:Calculating mean and std
2023-06-26 15:06:19,573:INFO:Creating metrics dataframe
2023-06-26 15:06:20,083:INFO:Uploading results into container
2023-06-26 15:06:20,084:INFO:Uploading model into container now
2023-06-26 15:06:20,085:INFO:_master_model_container: 8
2023-06-26 15:06:20,085:INFO:_display_container: 2
2023-06-26 15:06:20,085:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 15:06:20,085:INFO:create_model() successfully completed......................................
2023-06-26 15:06:20,166:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:20,166:INFO:Creating metrics dataframe
2023-06-26 15:06:20,180:INFO:Initializing Ada Boost Classifier
2023-06-26 15:06:20,180:INFO:Total runtime is 0.8236581643422445 minutes
2023-06-26 15:06:20,183:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:20,184:INFO:Initializing create_model()
2023-06-26 15:06:20,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:20,185:INFO:Checking exceptions
2023-06-26 15:06:20,185:INFO:Importing libraries
2023-06-26 15:06:20,185:INFO:Copying training dataset
2023-06-26 15:06:20,191:INFO:Defining folds
2023-06-26 15:06:20,191:INFO:Declaring metric variables
2023-06-26 15:06:20,195:INFO:Importing untrained model
2023-06-26 15:06:20,200:INFO:Ada Boost Classifier Imported successfully
2023-06-26 15:06:20,210:INFO:Starting cross validation
2023-06-26 15:06:20,211:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:25,436:INFO:Calculating mean and std
2023-06-26 15:06:25,437:INFO:Creating metrics dataframe
2023-06-26 15:06:25,961:INFO:Uploading results into container
2023-06-26 15:06:25,962:INFO:Uploading model into container now
2023-06-26 15:06:25,963:INFO:_master_model_container: 9
2023-06-26 15:06:25,964:INFO:_display_container: 2
2023-06-26 15:06:25,964:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8338)
2023-06-26 15:06:25,964:INFO:create_model() successfully completed......................................
2023-06-26 15:06:26,053:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:26,054:INFO:Creating metrics dataframe
2023-06-26 15:06:26,067:INFO:Initializing Gradient Boosting Classifier
2023-06-26 15:06:26,067:INFO:Total runtime is 0.9217616756757101 minutes
2023-06-26 15:06:26,071:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:26,071:INFO:Initializing create_model()
2023-06-26 15:06:26,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:26,071:INFO:Checking exceptions
2023-06-26 15:06:26,072:INFO:Importing libraries
2023-06-26 15:06:26,072:INFO:Copying training dataset
2023-06-26 15:06:26,077:INFO:Defining folds
2023-06-26 15:06:26,077:INFO:Declaring metric variables
2023-06-26 15:06:26,082:INFO:Importing untrained model
2023-06-26 15:06:26,086:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 15:06:26,099:INFO:Starting cross validation
2023-06-26 15:06:26,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:32,852:INFO:Calculating mean and std
2023-06-26 15:06:32,853:INFO:Creating metrics dataframe
2023-06-26 15:06:33,388:INFO:Uploading results into container
2023-06-26 15:06:33,389:INFO:Uploading model into container now
2023-06-26 15:06:33,390:INFO:_master_model_container: 10
2023-06-26 15:06:33,390:INFO:_display_container: 2
2023-06-26 15:06:33,391:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8338, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 15:06:33,391:INFO:create_model() successfully completed......................................
2023-06-26 15:06:33,473:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:33,473:INFO:Creating metrics dataframe
2023-06-26 15:06:33,485:INFO:Initializing Linear Discriminant Analysis
2023-06-26 15:06:33,485:INFO:Total runtime is 1.0453952391942343 minutes
2023-06-26 15:06:33,489:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:33,490:INFO:Initializing create_model()
2023-06-26 15:06:33,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:33,490:INFO:Checking exceptions
2023-06-26 15:06:33,491:INFO:Importing libraries
2023-06-26 15:06:33,491:INFO:Copying training dataset
2023-06-26 15:06:33,495:INFO:Defining folds
2023-06-26 15:06:33,496:INFO:Declaring metric variables
2023-06-26 15:06:33,501:INFO:Importing untrained model
2023-06-26 15:06:33,506:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 15:06:33,513:INFO:Starting cross validation
2023-06-26 15:06:33,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:38,443:INFO:Calculating mean and std
2023-06-26 15:06:38,445:INFO:Creating metrics dataframe
2023-06-26 15:06:38,984:INFO:Uploading results into container
2023-06-26 15:06:38,985:INFO:Uploading model into container now
2023-06-26 15:06:38,985:INFO:_master_model_container: 11
2023-06-26 15:06:38,985:INFO:_display_container: 2
2023-06-26 15:06:38,986:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 15:06:38,986:INFO:create_model() successfully completed......................................
2023-06-26 15:06:39,064:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:39,065:INFO:Creating metrics dataframe
2023-06-26 15:06:39,080:INFO:Initializing Extra Trees Classifier
2023-06-26 15:06:39,080:INFO:Total runtime is 1.138644568125407 minutes
2023-06-26 15:06:39,085:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:39,085:INFO:Initializing create_model()
2023-06-26 15:06:39,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:39,085:INFO:Checking exceptions
2023-06-26 15:06:39,086:INFO:Importing libraries
2023-06-26 15:06:39,086:INFO:Copying training dataset
2023-06-26 15:06:39,090:INFO:Defining folds
2023-06-26 15:06:39,090:INFO:Declaring metric variables
2023-06-26 15:06:39,093:INFO:Importing untrained model
2023-06-26 15:06:39,099:INFO:Extra Trees Classifier Imported successfully
2023-06-26 15:06:39,106:INFO:Starting cross validation
2023-06-26 15:06:39,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:44,853:INFO:Calculating mean and std
2023-06-26 15:06:44,854:INFO:Creating metrics dataframe
2023-06-26 15:06:45,397:INFO:Uploading results into container
2023-06-26 15:06:45,398:INFO:Uploading model into container now
2023-06-26 15:06:45,398:INFO:_master_model_container: 12
2023-06-26 15:06:45,398:INFO:_display_container: 2
2023-06-26 15:06:45,399:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8338, verbose=0, warm_start=False)
2023-06-26 15:06:45,399:INFO:create_model() successfully completed......................................
2023-06-26 15:06:45,478:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:45,478:INFO:Creating metrics dataframe
2023-06-26 15:06:45,493:INFO:Initializing Extreme Gradient Boosting
2023-06-26 15:06:45,494:INFO:Total runtime is 1.2455504139264424 minutes
2023-06-26 15:06:45,498:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:45,498:INFO:Initializing create_model()
2023-06-26 15:06:45,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:45,498:INFO:Checking exceptions
2023-06-26 15:06:45,499:INFO:Importing libraries
2023-06-26 15:06:45,499:INFO:Copying training dataset
2023-06-26 15:06:45,503:INFO:Defining folds
2023-06-26 15:06:45,503:INFO:Declaring metric variables
2023-06-26 15:06:45,507:INFO:Importing untrained model
2023-06-26 15:06:45,512:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 15:06:45,520:INFO:Starting cross validation
2023-06-26 15:06:45,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:51,229:INFO:Calculating mean and std
2023-06-26 15:06:51,230:INFO:Creating metrics dataframe
2023-06-26 15:06:51,791:INFO:Uploading results into container
2023-06-26 15:06:51,792:INFO:Uploading model into container now
2023-06-26 15:06:51,792:INFO:_master_model_container: 13
2023-06-26 15:06:51,792:INFO:_display_container: 2
2023-06-26 15:06:51,793:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 15:06:51,793:INFO:create_model() successfully completed......................................
2023-06-26 15:06:51,874:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:51,874:INFO:Creating metrics dataframe
2023-06-26 15:06:51,887:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 15:06:51,887:INFO:Total runtime is 1.3521020293235777 minutes
2023-06-26 15:06:51,892:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:51,892:INFO:Initializing create_model()
2023-06-26 15:06:51,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:51,893:INFO:Checking exceptions
2023-06-26 15:06:51,893:INFO:Importing libraries
2023-06-26 15:06:51,893:INFO:Copying training dataset
2023-06-26 15:06:51,897:INFO:Defining folds
2023-06-26 15:06:51,898:INFO:Declaring metric variables
2023-06-26 15:06:51,901:INFO:Importing untrained model
2023-06-26 15:06:51,907:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 15:06:51,914:INFO:Starting cross validation
2023-06-26 15:06:51,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:58,543:INFO:Calculating mean and std
2023-06-26 15:06:58,544:INFO:Creating metrics dataframe
2023-06-26 15:06:59,113:INFO:Uploading results into container
2023-06-26 15:06:59,114:INFO:Uploading model into container now
2023-06-26 15:06:59,114:INFO:_master_model_container: 14
2023-06-26 15:06:59,114:INFO:_display_container: 2
2023-06-26 15:06:59,115:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8338, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 15:06:59,115:INFO:create_model() successfully completed......................................
2023-06-26 15:06:59,195:INFO:SubProcess create_model() end ==================================
2023-06-26 15:06:59,196:INFO:Creating metrics dataframe
2023-06-26 15:06:59,211:INFO:Initializing Dummy Classifier
2023-06-26 15:06:59,211:INFO:Total runtime is 1.4741648793220519 minutes
2023-06-26 15:06:59,215:INFO:SubProcess create_model() called ==================================
2023-06-26 15:06:59,215:INFO:Initializing create_model()
2023-06-26 15:06:59,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996C520>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:06:59,215:INFO:Checking exceptions
2023-06-26 15:06:59,216:INFO:Importing libraries
2023-06-26 15:06:59,216:INFO:Copying training dataset
2023-06-26 15:06:59,220:INFO:Defining folds
2023-06-26 15:06:59,220:INFO:Declaring metric variables
2023-06-26 15:06:59,224:INFO:Importing untrained model
2023-06-26 15:06:59,228:INFO:Dummy Classifier Imported successfully
2023-06-26 15:06:59,235:INFO:Starting cross validation
2023-06-26 15:06:59,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 15:06:59,423:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:06:59,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:06:59,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:06:59,424:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:00,298:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:00,342:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:00,367:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:00,402:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:01,136:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:01,218:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 15:07:04,504:INFO:Calculating mean and std
2023-06-26 15:07:04,506:INFO:Creating metrics dataframe
2023-06-26 15:07:05,078:INFO:Uploading results into container
2023-06-26 15:07:05,079:INFO:Uploading model into container now
2023-06-26 15:07:05,079:INFO:_master_model_container: 15
2023-06-26 15:07:05,079:INFO:_display_container: 2
2023-06-26 15:07:05,079:INFO:DummyClassifier(constant=None, random_state=8338, strategy='prior')
2023-06-26 15:07:05,080:INFO:create_model() successfully completed......................................
2023-06-26 15:07:05,160:INFO:SubProcess create_model() end ==================================
2023-06-26 15:07:05,160:INFO:Creating metrics dataframe
2023-06-26 15:07:05,185:INFO:Initializing create_model()
2023-06-26 15:07:05,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 15:07:05,186:INFO:Checking exceptions
2023-06-26 15:07:05,189:INFO:Importing libraries
2023-06-26 15:07:05,189:INFO:Copying training dataset
2023-06-26 15:07:05,194:INFO:Defining folds
2023-06-26 15:07:05,194:INFO:Declaring metric variables
2023-06-26 15:07:05,194:INFO:Importing untrained model
2023-06-26 15:07:05,194:INFO:Declaring custom model
2023-06-26 15:07:05,195:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 15:07:05,196:INFO:Cross validation set to False
2023-06-26 15:07:05,196:INFO:Fitting Model
2023-06-26 15:07:05,771:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 15:07:05,771:INFO:create_model() successfully completed......................................
2023-06-26 15:07:05,883:INFO:_master_model_container: 15
2023-06-26 15:07:05,884:INFO:_display_container: 2
2023-06-26 15:07:05,884:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 15:07:05,884:INFO:compare_models() successfully completed......................................
2023-06-26 15:07:05,885:INFO:Initializing evaluate_model()
2023-06-26 15:07:05,885:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-26 15:07:05,894:INFO:Initializing plot_model()
2023-06-26 15:07:05,894:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, system=True)
2023-06-26 15:07:05,895:INFO:Checking exceptions
2023-06-26 15:07:05,896:INFO:Preloading libraries
2023-06-26 15:07:05,896:INFO:Copying training dataset
2023-06-26 15:07:05,897:INFO:Plot type: pipeline
2023-06-26 15:07:06,042:INFO:Visual Rendered Successfully
2023-06-26 15:07:06,121:INFO:plot_model() successfully completed......................................
2023-06-26 16:14:58,632:INFO:Initializing create_model()
2023-06-26 16:14:58,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:14:58,632:INFO:Checking exceptions
2023-06-26 16:14:58,646:INFO:Importing libraries
2023-06-26 16:14:58,647:INFO:Copying training dataset
2023-06-26 16:14:58,651:INFO:Defining folds
2023-06-26 16:14:58,651:INFO:Declaring metric variables
2023-06-26 16:14:58,654:INFO:Importing untrained model
2023-06-26 16:14:58,658:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:14:58,667:INFO:Starting cross validation
2023-06-26 16:14:58,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:15:08,219:INFO:Calculating mean and std
2023-06-26 16:15:08,220:INFO:Creating metrics dataframe
2023-06-26 16:15:08,229:INFO:Finalizing model
2023-06-26 16:15:08,870:INFO:Uploading results into container
2023-06-26 16:15:08,871:INFO:Uploading model into container now
2023-06-26 16:15:08,883:INFO:_master_model_container: 16
2023-06-26 16:15:08,883:INFO:_display_container: 3
2023-06-26 16:15:08,883:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:15:08,883:INFO:create_model() successfully completed......................................
2023-06-26 16:15:08,980:INFO:Initializing predict_model()
2023-06-26 16:15:08,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E752295900>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E75B2A3A30>)
2023-06-26 16:15:08,981:INFO:Checking exceptions
2023-06-26 16:15:08,981:INFO:Preloading libraries
2023-06-26 16:15:08,982:INFO:Set up data.
2023-06-26 16:15:08,986:INFO:Set up index.
2023-06-26 16:22:04,742:INFO:PyCaret ClassificationExperiment
2023-06-26 16:22:04,743:INFO:Logging name: clf-default-name
2023-06-26 16:22:04,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-26 16:22:04,743:INFO:version 3.0.2
2023-06-26 16:22:04,743:INFO:Initializing setup()
2023-06-26 16:22:04,743:INFO:self.USI: 624b
2023-06-26 16:22:04,743:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'USI', 'X_train', 'exp_name_log', '_ml_usecase', 'pipeline', 'y', 'target_param', 'y_train', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'memory', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'y_test', 'data', 'idx', 'gpu_param', 'X', 'exp_id', 'n_jobs_param', 'seed', 'log_plots_param', 'is_multiclass', 'html_param'}
2023-06-26 16:22:04,744:INFO:Checking environment
2023-06-26 16:22:04,744:INFO:python_version: 3.10.5
2023-06-26 16:22:04,744:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-06-26 16:22:04,744:INFO:machine: AMD64
2023-06-26 16:22:04,744:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-26 16:22:04,750:INFO:Memory: svmem(total=17130000384, available=8879616000, percent=48.2, used=8250384384, free=8879616000)
2023-06-26 16:22:04,752:INFO:Physical Core: 4
2023-06-26 16:22:04,752:INFO:Logical Core: 4
2023-06-26 16:22:04,752:INFO:Checking libraries
2023-06-26 16:22:04,753:INFO:System:
2023-06-26 16:22:04,753:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-06-26 16:22:04,753:INFO:executable: c:\Users\king\AppData\Local\Programs\Python\Python310\python.exe
2023-06-26 16:22:04,753:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-26 16:22:04,753:INFO:PyCaret required dependencies:
2023-06-26 16:22:04,753:INFO:                 pip: 23.0.1
2023-06-26 16:22:04,753:INFO:          setuptools: 58.1.0
2023-06-26 16:22:04,753:INFO:             pycaret: 3.0.2
2023-06-26 16:22:04,753:INFO:             IPython: 8.9.0
2023-06-26 16:22:04,754:INFO:          ipywidgets: 8.0.6
2023-06-26 16:22:04,754:INFO:                tqdm: 4.65.0
2023-06-26 16:22:04,754:INFO:               numpy: 1.23.5
2023-06-26 16:22:04,754:INFO:              pandas: 1.5.3
2023-06-26 16:22:04,754:INFO:              jinja2: 3.1.2
2023-06-26 16:22:04,754:INFO:               scipy: 1.10.1
2023-06-26 16:22:04,754:INFO:              joblib: 1.2.0
2023-06-26 16:22:04,754:INFO:             sklearn: 1.2.2
2023-06-26 16:22:04,754:INFO:                pyod: 1.0.9
2023-06-26 16:22:04,754:INFO:            imblearn: 0.10.1
2023-06-26 16:22:04,754:INFO:   category_encoders: 2.6.1
2023-06-26 16:22:04,755:INFO:            lightgbm: 3.3.5
2023-06-26 16:22:04,755:INFO:               numba: 0.57.0
2023-06-26 16:22:04,755:INFO:            requests: 2.28.2
2023-06-26 16:22:04,755:INFO:          matplotlib: 3.7.1
2023-06-26 16:22:04,755:INFO:          scikitplot: 0.3.7
2023-06-26 16:22:04,755:INFO:         yellowbrick: 1.5
2023-06-26 16:22:04,755:INFO:              plotly: 5.15.0
2023-06-26 16:22:04,755:INFO:             kaleido: 0.2.1
2023-06-26 16:22:04,755:INFO:         statsmodels: 0.14.0
2023-06-26 16:22:04,755:INFO:              sktime: 0.17.0
2023-06-26 16:22:04,755:INFO:               tbats: 1.1.3
2023-06-26 16:22:04,755:INFO:            pmdarima: 2.0.3
2023-06-26 16:22:04,755:INFO:              psutil: 5.9.4
2023-06-26 16:22:04,756:INFO:PyCaret optional dependencies:
2023-06-26 16:22:04,756:INFO:                shap: Not installed
2023-06-26 16:22:04,756:INFO:           interpret: 0.4.2
2023-06-26 16:22:04,756:INFO:                umap: Not installed
2023-06-26 16:22:04,756:INFO:    pandas_profiling: Not installed
2023-06-26 16:22:04,756:INFO:  explainerdashboard: Not installed
2023-06-26 16:22:04,756:INFO:             autoviz: Not installed
2023-06-26 16:22:04,756:INFO:           fairlearn: Not installed
2023-06-26 16:22:04,756:INFO:             xgboost: 1.7.5
2023-06-26 16:22:04,756:INFO:            catboost: Not installed
2023-06-26 16:22:04,756:INFO:              kmodes: Not installed
2023-06-26 16:22:04,757:INFO:             mlxtend: Not installed
2023-06-26 16:22:04,757:INFO:       statsforecast: Not installed
2023-06-26 16:22:04,757:INFO:        tune_sklearn: Not installed
2023-06-26 16:22:04,757:INFO:                 ray: Not installed
2023-06-26 16:22:04,757:INFO:            hyperopt: 0.2.7
2023-06-26 16:22:04,757:INFO:              optuna: Not installed
2023-06-26 16:22:04,757:INFO:               skopt: Not installed
2023-06-26 16:22:04,757:INFO:              mlflow: Not installed
2023-06-26 16:22:04,757:INFO:              gradio: Not installed
2023-06-26 16:22:04,757:INFO:             fastapi: Not installed
2023-06-26 16:22:04,757:INFO:             uvicorn: Not installed
2023-06-26 16:22:04,757:INFO:              m2cgen: Not installed
2023-06-26 16:22:04,757:INFO:           evidently: Not installed
2023-06-26 16:22:04,758:INFO:               fugue: Not installed
2023-06-26 16:22:04,758:INFO:           streamlit: Not installed
2023-06-26 16:22:04,758:INFO:             prophet: 1.1.4
2023-06-26 16:22:04,758:INFO:None
2023-06-26 16:22:04,758:INFO:Set up data.
2023-06-26 16:22:04,766:INFO:Set up train/test split.
2023-06-26 16:22:04,773:INFO:Set up index.
2023-06-26 16:22:04,773:INFO:Set up folding strategy.
2023-06-26 16:22:04,773:INFO:Assigning column types.
2023-06-26 16:22:04,777:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-26 16:22:04,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 16:22:04,850:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 16:22:04,943:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:04,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-26 16:22:05,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 16:22:05,129:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,135:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-26 16:22:05,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 16:22:05,223:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,300:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-26 16:22:05,333:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,337:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-26 16:22:05,416:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,509:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:05,514:INFO:Preparing preprocessing pipeline...
2023-06-26 16:22:05,515:INFO:Set up label encoding.
2023-06-26 16:22:05,515:INFO:Set up simple imputation.
2023-06-26 16:22:05,516:INFO:Set up column name cleaning.
2023-06-26 16:22:05,605:INFO:Finished creating preprocessing pipeline.
2023-06-26 16:22:05,616:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\king\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MA_5', 'Close', 'Volume',
                                             'fast_%K', 'slow_%K', 'slow_%D',
                                             'RSI'],
                                    transformer=SimpleImputer(add_indicator=...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-26 16:22:05,616:INFO:Creating final display dataframe.
2023-06-26 16:22:05,838:INFO:Setup _display_container:                     Description              Value
0                    Session id               3179
1                        Target         day5_label
2                   Target type         Multiclass
3                Target mapping  -1: 0, 0: 1, 1: 2
4           Original data shape           (981, 8)
5        Transformed data shape           (981, 8)
6   Transformed train set shape           (686, 8)
7    Transformed test set shape           (295, 8)
8              Numeric features                  7
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               624b
2023-06-26 16:22:05,943:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:05,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:06,030:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-26 16:22:06,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-26 16:22:06,036:INFO:setup() successfully completed in 1.95s...............
2023-06-26 16:22:06,036:INFO:Initializing compare_models()
2023-06-26 16:22:06,036:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 16:22:06,036:INFO:Checking exceptions
2023-06-26 16:22:06,041:INFO:Preparing display monitor
2023-06-26 16:22:06,079:INFO:Initializing Logistic Regression
2023-06-26 16:22:06,079:INFO:Total runtime is 0.0 minutes
2023-06-26 16:22:06,086:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:06,087:INFO:Initializing create_model()
2023-06-26 16:22:06,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:06,087:INFO:Checking exceptions
2023-06-26 16:22:06,087:INFO:Importing libraries
2023-06-26 16:22:06,088:INFO:Copying training dataset
2023-06-26 16:22:06,093:INFO:Defining folds
2023-06-26 16:22:06,094:INFO:Declaring metric variables
2023-06-26 16:22:06,100:INFO:Importing untrained model
2023-06-26 16:22:06,115:INFO:Logistic Regression Imported successfully
2023-06-26 16:22:06,124:INFO:Starting cross validation
2023-06-26 16:22:06,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:15,303:INFO:Calculating mean and std
2023-06-26 16:22:15,304:INFO:Creating metrics dataframe
2023-06-26 16:22:15,839:INFO:Uploading results into container
2023-06-26 16:22:15,840:INFO:Uploading model into container now
2023-06-26 16:22:15,840:INFO:_master_model_container: 1
2023-06-26 16:22:15,841:INFO:_display_container: 2
2023-06-26 16:22:15,841:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3179, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 16:22:15,841:INFO:create_model() successfully completed......................................
2023-06-26 16:22:15,943:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:15,944:INFO:Creating metrics dataframe
2023-06-26 16:22:15,952:INFO:Initializing K Neighbors Classifier
2023-06-26 16:22:15,952:INFO:Total runtime is 0.16455421050389607 minutes
2023-06-26 16:22:15,955:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:15,956:INFO:Initializing create_model()
2023-06-26 16:22:15,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:15,956:INFO:Checking exceptions
2023-06-26 16:22:15,956:INFO:Importing libraries
2023-06-26 16:22:15,956:INFO:Copying training dataset
2023-06-26 16:22:15,960:INFO:Defining folds
2023-06-26 16:22:15,960:INFO:Declaring metric variables
2023-06-26 16:22:15,963:INFO:Importing untrained model
2023-06-26 16:22:15,968:INFO:K Neighbors Classifier Imported successfully
2023-06-26 16:22:15,974:INFO:Starting cross validation
2023-06-26 16:22:15,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:20,971:INFO:Calculating mean and std
2023-06-26 16:22:20,972:INFO:Creating metrics dataframe
2023-06-26 16:22:21,508:INFO:Uploading results into container
2023-06-26 16:22:21,509:INFO:Uploading model into container now
2023-06-26 16:22:21,509:INFO:_master_model_container: 2
2023-06-26 16:22:21,509:INFO:_display_container: 2
2023-06-26 16:22:21,510:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 16:22:21,510:INFO:create_model() successfully completed......................................
2023-06-26 16:22:21,617:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:21,617:INFO:Creating metrics dataframe
2023-06-26 16:22:21,627:INFO:Initializing Naive Bayes
2023-06-26 16:22:21,628:INFO:Total runtime is 0.2591533382733663 minutes
2023-06-26 16:22:21,632:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:21,632:INFO:Initializing create_model()
2023-06-26 16:22:21,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:21,632:INFO:Checking exceptions
2023-06-26 16:22:21,633:INFO:Importing libraries
2023-06-26 16:22:21,633:INFO:Copying training dataset
2023-06-26 16:22:21,637:INFO:Defining folds
2023-06-26 16:22:21,637:INFO:Declaring metric variables
2023-06-26 16:22:21,641:INFO:Importing untrained model
2023-06-26 16:22:21,647:INFO:Naive Bayes Imported successfully
2023-06-26 16:22:21,654:INFO:Starting cross validation
2023-06-26 16:22:21,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:27,660:INFO:Calculating mean and std
2023-06-26 16:22:27,661:INFO:Creating metrics dataframe
2023-06-26 16:22:28,218:INFO:Uploading results into container
2023-06-26 16:22:28,219:INFO:Uploading model into container now
2023-06-26 16:22:28,219:INFO:_master_model_container: 3
2023-06-26 16:22:28,219:INFO:_display_container: 2
2023-06-26 16:22:28,220:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 16:22:28,220:INFO:create_model() successfully completed......................................
2023-06-26 16:22:28,318:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:28,319:INFO:Creating metrics dataframe
2023-06-26 16:22:28,328:INFO:Initializing Decision Tree Classifier
2023-06-26 16:22:28,328:INFO:Total runtime is 0.37081748247146606 minutes
2023-06-26 16:22:28,333:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:28,333:INFO:Initializing create_model()
2023-06-26 16:22:28,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:28,333:INFO:Checking exceptions
2023-06-26 16:22:28,333:INFO:Importing libraries
2023-06-26 16:22:28,334:INFO:Copying training dataset
2023-06-26 16:22:28,337:INFO:Defining folds
2023-06-26 16:22:28,338:INFO:Declaring metric variables
2023-06-26 16:22:28,341:INFO:Importing untrained model
2023-06-26 16:22:28,346:INFO:Decision Tree Classifier Imported successfully
2023-06-26 16:22:28,354:INFO:Starting cross validation
2023-06-26 16:22:28,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:33,872:INFO:Calculating mean and std
2023-06-26 16:22:33,873:INFO:Creating metrics dataframe
2023-06-26 16:22:34,494:INFO:Uploading results into container
2023-06-26 16:22:34,495:INFO:Uploading model into container now
2023-06-26 16:22:34,496:INFO:_master_model_container: 4
2023-06-26 16:22:34,497:INFO:_display_container: 2
2023-06-26 16:22:34,497:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3179, splitter='best')
2023-06-26 16:22:34,497:INFO:create_model() successfully completed......................................
2023-06-26 16:22:34,618:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:34,618:INFO:Creating metrics dataframe
2023-06-26 16:22:34,654:INFO:Initializing SVM - Linear Kernel
2023-06-26 16:22:34,654:INFO:Total runtime is 0.47625349362691244 minutes
2023-06-26 16:22:34,658:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:34,660:INFO:Initializing create_model()
2023-06-26 16:22:34,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:34,660:INFO:Checking exceptions
2023-06-26 16:22:34,660:INFO:Importing libraries
2023-06-26 16:22:34,660:INFO:Copying training dataset
2023-06-26 16:22:34,669:INFO:Defining folds
2023-06-26 16:22:34,669:INFO:Declaring metric variables
2023-06-26 16:22:34,674:INFO:Importing untrained model
2023-06-26 16:22:34,682:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 16:22:34,692:INFO:Starting cross validation
2023-06-26 16:22:34,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:34,855:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:34,862:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:34,909:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:35,051:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:35,938:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:35,954:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:36,019:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:36,307:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:37,073:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:37,089:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:22:40,870:INFO:Calculating mean and std
2023-06-26 16:22:40,871:INFO:Creating metrics dataframe
2023-06-26 16:22:41,434:INFO:Uploading results into container
2023-06-26 16:22:41,435:INFO:Uploading model into container now
2023-06-26 16:22:41,435:INFO:_master_model_container: 5
2023-06-26 16:22:41,435:INFO:_display_container: 2
2023-06-26 16:22:41,436:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3179, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 16:22:41,436:INFO:create_model() successfully completed......................................
2023-06-26 16:22:41,531:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:41,531:INFO:Creating metrics dataframe
2023-06-26 16:22:41,542:INFO:Initializing Ridge Classifier
2023-06-26 16:22:41,542:INFO:Total runtime is 0.5910566329956055 minutes
2023-06-26 16:22:41,548:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:41,548:INFO:Initializing create_model()
2023-06-26 16:22:41,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:41,548:INFO:Checking exceptions
2023-06-26 16:22:41,548:INFO:Importing libraries
2023-06-26 16:22:41,549:INFO:Copying training dataset
2023-06-26 16:22:41,553:INFO:Defining folds
2023-06-26 16:22:41,553:INFO:Declaring metric variables
2023-06-26 16:22:41,556:INFO:Importing untrained model
2023-06-26 16:22:41,561:INFO:Ridge Classifier Imported successfully
2023-06-26 16:22:41,570:INFO:Starting cross validation
2023-06-26 16:22:41,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:41,719:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:41,721:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:41,729:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:41,738:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:42,546:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:42,576:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:42,658:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:42,714:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:43,430:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:43,503:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:22:46,801:INFO:Calculating mean and std
2023-06-26 16:22:46,802:INFO:Creating metrics dataframe
2023-06-26 16:22:47,368:INFO:Uploading results into container
2023-06-26 16:22:47,369:INFO:Uploading model into container now
2023-06-26 16:22:47,370:INFO:_master_model_container: 6
2023-06-26 16:22:47,371:INFO:_display_container: 2
2023-06-26 16:22:47,371:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3179, solver='auto',
                tol=0.0001)
2023-06-26 16:22:47,371:INFO:create_model() successfully completed......................................
2023-06-26 16:22:47,470:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:47,470:INFO:Creating metrics dataframe
2023-06-26 16:22:47,481:INFO:Initializing Random Forest Classifier
2023-06-26 16:22:47,481:INFO:Total runtime is 0.690026871363322 minutes
2023-06-26 16:22:47,484:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:47,485:INFO:Initializing create_model()
2023-06-26 16:22:47,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:47,485:INFO:Checking exceptions
2023-06-26 16:22:47,485:INFO:Importing libraries
2023-06-26 16:22:47,485:INFO:Copying training dataset
2023-06-26 16:22:47,490:INFO:Defining folds
2023-06-26 16:22:47,490:INFO:Declaring metric variables
2023-06-26 16:22:47,496:INFO:Importing untrained model
2023-06-26 16:22:47,500:INFO:Random Forest Classifier Imported successfully
2023-06-26 16:22:47,507:INFO:Starting cross validation
2023-06-26 16:22:47,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:53,702:INFO:Calculating mean and std
2023-06-26 16:22:53,702:INFO:Creating metrics dataframe
2023-06-26 16:22:54,279:INFO:Uploading results into container
2023-06-26 16:22:54,280:INFO:Uploading model into container now
2023-06-26 16:22:54,281:INFO:_master_model_container: 7
2023-06-26 16:22:54,281:INFO:_display_container: 2
2023-06-26 16:22:54,282:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3179, verbose=0, warm_start=False)
2023-06-26 16:22:54,282:INFO:create_model() successfully completed......................................
2023-06-26 16:22:54,379:INFO:SubProcess create_model() end ==================================
2023-06-26 16:22:54,380:INFO:Creating metrics dataframe
2023-06-26 16:22:54,390:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 16:22:54,390:INFO:Total runtime is 0.8051777084668478 minutes
2023-06-26 16:22:54,393:INFO:SubProcess create_model() called ==================================
2023-06-26 16:22:54,394:INFO:Initializing create_model()
2023-06-26 16:22:54,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:22:54,395:INFO:Checking exceptions
2023-06-26 16:22:54,395:INFO:Importing libraries
2023-06-26 16:22:54,395:INFO:Copying training dataset
2023-06-26 16:22:54,399:INFO:Defining folds
2023-06-26 16:22:54,400:INFO:Declaring metric variables
2023-06-26 16:22:54,405:INFO:Importing untrained model
2023-06-26 16:22:54,409:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 16:22:54,418:INFO:Starting cross validation
2023-06-26 16:22:54,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:22:59,780:INFO:Calculating mean and std
2023-06-26 16:22:59,781:INFO:Creating metrics dataframe
2023-06-26 16:23:00,363:INFO:Uploading results into container
2023-06-26 16:23:00,364:INFO:Uploading model into container now
2023-06-26 16:23:00,365:INFO:_master_model_container: 8
2023-06-26 16:23:00,365:INFO:_display_container: 2
2023-06-26 16:23:00,365:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 16:23:00,365:INFO:create_model() successfully completed......................................
2023-06-26 16:23:00,464:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:00,464:INFO:Creating metrics dataframe
2023-06-26 16:23:00,474:INFO:Initializing Ada Boost Classifier
2023-06-26 16:23:00,475:INFO:Total runtime is 0.9066046555836996 minutes
2023-06-26 16:23:00,479:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:00,479:INFO:Initializing create_model()
2023-06-26 16:23:00,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:00,480:INFO:Checking exceptions
2023-06-26 16:23:00,480:INFO:Importing libraries
2023-06-26 16:23:00,480:INFO:Copying training dataset
2023-06-26 16:23:00,484:INFO:Defining folds
2023-06-26 16:23:00,485:INFO:Declaring metric variables
2023-06-26 16:23:00,489:INFO:Importing untrained model
2023-06-26 16:23:00,495:INFO:Ada Boost Classifier Imported successfully
2023-06-26 16:23:00,503:INFO:Starting cross validation
2023-06-26 16:23:00,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:06,406:INFO:Calculating mean and std
2023-06-26 16:23:06,407:INFO:Creating metrics dataframe
2023-06-26 16:23:07,000:INFO:Uploading results into container
2023-06-26 16:23:07,001:INFO:Uploading model into container now
2023-06-26 16:23:07,002:INFO:_master_model_container: 9
2023-06-26 16:23:07,002:INFO:_display_container: 2
2023-06-26 16:23:07,002:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3179)
2023-06-26 16:23:07,003:INFO:create_model() successfully completed......................................
2023-06-26 16:23:07,102:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:07,102:INFO:Creating metrics dataframe
2023-06-26 16:23:07,113:INFO:Initializing Gradient Boosting Classifier
2023-06-26 16:23:07,113:INFO:Total runtime is 1.0172353426615397 minutes
2023-06-26 16:23:07,117:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:07,117:INFO:Initializing create_model()
2023-06-26 16:23:07,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:07,118:INFO:Checking exceptions
2023-06-26 16:23:07,118:INFO:Importing libraries
2023-06-26 16:23:07,118:INFO:Copying training dataset
2023-06-26 16:23:07,122:INFO:Defining folds
2023-06-26 16:23:07,123:INFO:Declaring metric variables
2023-06-26 16:23:07,129:INFO:Importing untrained model
2023-06-26 16:23:07,133:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 16:23:07,141:INFO:Starting cross validation
2023-06-26 16:23:07,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:14,474:INFO:Calculating mean and std
2023-06-26 16:23:14,476:INFO:Creating metrics dataframe
2023-06-26 16:23:15,080:INFO:Uploading results into container
2023-06-26 16:23:15,080:INFO:Uploading model into container now
2023-06-26 16:23:15,082:INFO:_master_model_container: 10
2023-06-26 16:23:15,082:INFO:_display_container: 2
2023-06-26 16:23:15,083:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3179, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 16:23:15,083:INFO:create_model() successfully completed......................................
2023-06-26 16:23:15,182:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:15,182:INFO:Creating metrics dataframe
2023-06-26 16:23:15,196:INFO:Initializing Linear Discriminant Analysis
2023-06-26 16:23:15,196:INFO:Total runtime is 1.1519486983617147 minutes
2023-06-26 16:23:15,200:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:15,200:INFO:Initializing create_model()
2023-06-26 16:23:15,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:15,201:INFO:Checking exceptions
2023-06-26 16:23:15,201:INFO:Importing libraries
2023-06-26 16:23:15,201:INFO:Copying training dataset
2023-06-26 16:23:15,205:INFO:Defining folds
2023-06-26 16:23:15,205:INFO:Declaring metric variables
2023-06-26 16:23:15,215:INFO:Importing untrained model
2023-06-26 16:23:15,219:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:23:15,229:INFO:Starting cross validation
2023-06-26 16:23:15,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:20,891:INFO:Calculating mean and std
2023-06-26 16:23:20,893:INFO:Creating metrics dataframe
2023-06-26 16:23:21,497:INFO:Uploading results into container
2023-06-26 16:23:21,498:INFO:Uploading model into container now
2023-06-26 16:23:21,498:INFO:_master_model_container: 11
2023-06-26 16:23:21,498:INFO:_display_container: 2
2023-06-26 16:23:21,499:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:23:21,499:INFO:create_model() successfully completed......................................
2023-06-26 16:23:21,597:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:21,598:INFO:Creating metrics dataframe
2023-06-26 16:23:21,612:INFO:Initializing Extra Trees Classifier
2023-06-26 16:23:21,612:INFO:Total runtime is 1.2588886658350626 minutes
2023-06-26 16:23:21,616:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:21,616:INFO:Initializing create_model()
2023-06-26 16:23:21,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:21,616:INFO:Checking exceptions
2023-06-26 16:23:21,617:INFO:Importing libraries
2023-06-26 16:23:21,617:INFO:Copying training dataset
2023-06-26 16:23:21,621:INFO:Defining folds
2023-06-26 16:23:21,621:INFO:Declaring metric variables
2023-06-26 16:23:21,626:INFO:Importing untrained model
2023-06-26 16:23:21,631:INFO:Extra Trees Classifier Imported successfully
2023-06-26 16:23:21,638:INFO:Starting cross validation
2023-06-26 16:23:21,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:27,967:INFO:Calculating mean and std
2023-06-26 16:23:27,968:INFO:Creating metrics dataframe
2023-06-26 16:23:28,587:INFO:Uploading results into container
2023-06-26 16:23:28,588:INFO:Uploading model into container now
2023-06-26 16:23:28,588:INFO:_master_model_container: 12
2023-06-26 16:23:28,589:INFO:_display_container: 2
2023-06-26 16:23:28,589:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3179, verbose=0, warm_start=False)
2023-06-26 16:23:28,590:INFO:create_model() successfully completed......................................
2023-06-26 16:23:28,689:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:28,689:INFO:Creating metrics dataframe
2023-06-26 16:23:28,701:INFO:Initializing Extreme Gradient Boosting
2023-06-26 16:23:28,701:INFO:Total runtime is 1.377040700117747 minutes
2023-06-26 16:23:28,704:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:28,705:INFO:Initializing create_model()
2023-06-26 16:23:28,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:28,705:INFO:Checking exceptions
2023-06-26 16:23:28,705:INFO:Importing libraries
2023-06-26 16:23:28,705:INFO:Copying training dataset
2023-06-26 16:23:28,711:INFO:Defining folds
2023-06-26 16:23:28,711:INFO:Declaring metric variables
2023-06-26 16:23:28,716:INFO:Importing untrained model
2023-06-26 16:23:28,720:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 16:23:28,729:INFO:Starting cross validation
2023-06-26 16:23:28,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:35,179:INFO:Calculating mean and std
2023-06-26 16:23:35,180:INFO:Creating metrics dataframe
2023-06-26 16:23:35,810:INFO:Uploading results into container
2023-06-26 16:23:35,811:INFO:Uploading model into container now
2023-06-26 16:23:35,812:INFO:_master_model_container: 13
2023-06-26 16:23:35,813:INFO:_display_container: 2
2023-06-26 16:23:35,814:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 16:23:35,814:INFO:create_model() successfully completed......................................
2023-06-26 16:23:35,914:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:35,914:INFO:Creating metrics dataframe
2023-06-26 16:23:35,927:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 16:23:35,928:INFO:Total runtime is 1.4974793593088784 minutes
2023-06-26 16:23:35,931:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:35,932:INFO:Initializing create_model()
2023-06-26 16:23:35,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:35,932:INFO:Checking exceptions
2023-06-26 16:23:35,932:INFO:Importing libraries
2023-06-26 16:23:35,932:INFO:Copying training dataset
2023-06-26 16:23:35,936:INFO:Defining folds
2023-06-26 16:23:35,936:INFO:Declaring metric variables
2023-06-26 16:23:35,940:INFO:Importing untrained model
2023-06-26 16:23:35,947:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 16:23:35,953:INFO:Starting cross validation
2023-06-26 16:23:35,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:42,853:INFO:Calculating mean and std
2023-06-26 16:23:42,854:INFO:Creating metrics dataframe
2023-06-26 16:23:43,488:INFO:Uploading results into container
2023-06-26 16:23:43,489:INFO:Uploading model into container now
2023-06-26 16:23:43,490:INFO:_master_model_container: 14
2023-06-26 16:23:43,490:INFO:_display_container: 2
2023-06-26 16:23:43,491:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3179, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 16:23:43,491:INFO:create_model() successfully completed......................................
2023-06-26 16:23:43,591:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:43,591:INFO:Creating metrics dataframe
2023-06-26 16:23:43,604:INFO:Initializing Dummy Classifier
2023-06-26 16:23:43,604:INFO:Total runtime is 1.625413648287455 minutes
2023-06-26 16:23:43,608:INFO:SubProcess create_model() called ==================================
2023-06-26 16:23:43,608:INFO:Initializing create_model()
2023-06-26 16:23:43,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E7599D4040>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:43,609:INFO:Checking exceptions
2023-06-26 16:23:43,609:INFO:Importing libraries
2023-06-26 16:23:43,609:INFO:Copying training dataset
2023-06-26 16:23:43,614:INFO:Defining folds
2023-06-26 16:23:43,614:INFO:Declaring metric variables
2023-06-26 16:23:43,617:INFO:Importing untrained model
2023-06-26 16:23:43,623:INFO:Dummy Classifier Imported successfully
2023-06-26 16:23:43,632:INFO:Starting cross validation
2023-06-26 16:23:43,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:23:43,778:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:43,795:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:43,825:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:43,833:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:44,892:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:44,893:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:44,927:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:44,953:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:45,843:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:45,854:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:23:49,538:INFO:Calculating mean and std
2023-06-26 16:23:49,539:INFO:Creating metrics dataframe
2023-06-26 16:23:50,183:INFO:Uploading results into container
2023-06-26 16:23:50,184:INFO:Uploading model into container now
2023-06-26 16:23:50,184:INFO:_master_model_container: 15
2023-06-26 16:23:50,184:INFO:_display_container: 2
2023-06-26 16:23:50,184:INFO:DummyClassifier(constant=None, random_state=3179, strategy='prior')
2023-06-26 16:23:50,184:INFO:create_model() successfully completed......................................
2023-06-26 16:23:50,282:INFO:SubProcess create_model() end ==================================
2023-06-26 16:23:50,283:INFO:Creating metrics dataframe
2023-06-26 16:23:50,311:INFO:Initializing create_model()
2023-06-26 16:23:50,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:23:50,311:INFO:Checking exceptions
2023-06-26 16:23:50,313:INFO:Importing libraries
2023-06-26 16:23:50,313:INFO:Copying training dataset
2023-06-26 16:23:50,316:INFO:Defining folds
2023-06-26 16:23:50,316:INFO:Declaring metric variables
2023-06-26 16:23:50,317:INFO:Importing untrained model
2023-06-26 16:23:50,317:INFO:Declaring custom model
2023-06-26 16:23:50,317:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:23:50,318:INFO:Cross validation set to False
2023-06-26 16:23:50,318:INFO:Fitting Model
2023-06-26 16:23:50,956:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:23:50,956:INFO:create_model() successfully completed......................................
2023-06-26 16:23:51,085:INFO:_master_model_container: 15
2023-06-26 16:23:51,086:INFO:_display_container: 2
2023-06-26 16:23:51,086:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:23:51,086:INFO:compare_models() successfully completed......................................
2023-06-26 16:23:51,087:INFO:Initializing evaluate_model()
2023-06-26 16:23:51,087:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-26 16:23:51,097:INFO:Initializing plot_model()
2023-06-26 16:23:51,098:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, system=True)
2023-06-26 16:23:51,098:INFO:Checking exceptions
2023-06-26 16:23:51,100:INFO:Preloading libraries
2023-06-26 16:23:51,100:INFO:Copying training dataset
2023-06-26 16:23:51,100:INFO:Plot type: pipeline
2023-06-26 16:23:51,235:INFO:Visual Rendered Successfully
2023-06-26 16:23:51,333:INFO:plot_model() successfully completed......................................
2023-06-26 16:25:01,469:INFO:Initializing compare_models()
2023-06-26 16:25:01,469:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-26 16:25:01,470:INFO:Checking exceptions
2023-06-26 16:25:01,472:INFO:Preparing display monitor
2023-06-26 16:25:01,497:INFO:Initializing Logistic Regression
2023-06-26 16:25:01,497:INFO:Total runtime is 0.0 minutes
2023-06-26 16:25:01,501:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:01,502:INFO:Initializing create_model()
2023-06-26 16:25:01,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:01,502:INFO:Checking exceptions
2023-06-26 16:25:01,502:INFO:Importing libraries
2023-06-26 16:25:01,502:INFO:Copying training dataset
2023-06-26 16:25:01,508:INFO:Defining folds
2023-06-26 16:25:01,508:INFO:Declaring metric variables
2023-06-26 16:25:01,512:INFO:Importing untrained model
2023-06-26 16:25:01,516:INFO:Logistic Regression Imported successfully
2023-06-26 16:25:01,524:INFO:Starting cross validation
2023-06-26 16:25:01,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:08,582:INFO:Calculating mean and std
2023-06-26 16:25:08,583:INFO:Creating metrics dataframe
2023-06-26 16:25:09,248:INFO:Uploading results into container
2023-06-26 16:25:09,249:INFO:Uploading model into container now
2023-06-26 16:25:09,250:INFO:_master_model_container: 16
2023-06-26 16:25:09,250:INFO:_display_container: 3
2023-06-26 16:25:09,251:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3179, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-26 16:25:09,251:INFO:create_model() successfully completed......................................
2023-06-26 16:25:09,365:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:09,365:INFO:Creating metrics dataframe
2023-06-26 16:25:09,375:INFO:Initializing K Neighbors Classifier
2023-06-26 16:25:09,375:INFO:Total runtime is 0.13130282560984294 minutes
2023-06-26 16:25:09,379:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:09,380:INFO:Initializing create_model()
2023-06-26 16:25:09,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:09,380:INFO:Checking exceptions
2023-06-26 16:25:09,380:INFO:Importing libraries
2023-06-26 16:25:09,380:INFO:Copying training dataset
2023-06-26 16:25:09,385:INFO:Defining folds
2023-06-26 16:25:09,386:INFO:Declaring metric variables
2023-06-26 16:25:09,392:INFO:Importing untrained model
2023-06-26 16:25:09,396:INFO:K Neighbors Classifier Imported successfully
2023-06-26 16:25:09,405:INFO:Starting cross validation
2023-06-26 16:25:09,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:16,259:INFO:Calculating mean and std
2023-06-26 16:25:16,261:INFO:Creating metrics dataframe
2023-06-26 16:25:16,979:INFO:Uploading results into container
2023-06-26 16:25:16,980:INFO:Uploading model into container now
2023-06-26 16:25:16,980:INFO:_master_model_container: 17
2023-06-26 16:25:16,980:INFO:_display_container: 3
2023-06-26 16:25:16,981:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-26 16:25:16,981:INFO:create_model() successfully completed......................................
2023-06-26 16:25:17,079:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:17,080:INFO:Creating metrics dataframe
2023-06-26 16:25:17,092:INFO:Initializing Naive Bayes
2023-06-26 16:25:17,092:INFO:Total runtime is 0.25992594162623084 minutes
2023-06-26 16:25:17,096:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:17,096:INFO:Initializing create_model()
2023-06-26 16:25:17,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:17,096:INFO:Checking exceptions
2023-06-26 16:25:17,097:INFO:Importing libraries
2023-06-26 16:25:17,097:INFO:Copying training dataset
2023-06-26 16:25:17,102:INFO:Defining folds
2023-06-26 16:25:17,102:INFO:Declaring metric variables
2023-06-26 16:25:17,107:INFO:Importing untrained model
2023-06-26 16:25:17,111:INFO:Naive Bayes Imported successfully
2023-06-26 16:25:17,119:INFO:Starting cross validation
2023-06-26 16:25:17,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:23,927:INFO:Calculating mean and std
2023-06-26 16:25:23,928:INFO:Creating metrics dataframe
2023-06-26 16:25:24,661:INFO:Uploading results into container
2023-06-26 16:25:24,662:INFO:Uploading model into container now
2023-06-26 16:25:24,662:INFO:_master_model_container: 18
2023-06-26 16:25:24,662:INFO:_display_container: 3
2023-06-26 16:25:24,663:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-26 16:25:24,663:INFO:create_model() successfully completed......................................
2023-06-26 16:25:24,813:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:24,813:INFO:Creating metrics dataframe
2023-06-26 16:25:24,823:INFO:Initializing Decision Tree Classifier
2023-06-26 16:25:24,823:INFO:Total runtime is 0.3887672662734985 minutes
2023-06-26 16:25:24,826:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:24,827:INFO:Initializing create_model()
2023-06-26 16:25:24,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:24,827:INFO:Checking exceptions
2023-06-26 16:25:24,827:INFO:Importing libraries
2023-06-26 16:25:24,827:INFO:Copying training dataset
2023-06-26 16:25:24,831:INFO:Defining folds
2023-06-26 16:25:24,832:INFO:Declaring metric variables
2023-06-26 16:25:24,836:INFO:Importing untrained model
2023-06-26 16:25:24,840:INFO:Decision Tree Classifier Imported successfully
2023-06-26 16:25:24,847:INFO:Starting cross validation
2023-06-26 16:25:24,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:32,724:INFO:Calculating mean and std
2023-06-26 16:25:32,726:INFO:Creating metrics dataframe
2023-06-26 16:25:33,433:INFO:Uploading results into container
2023-06-26 16:25:33,436:INFO:Uploading model into container now
2023-06-26 16:25:33,436:INFO:_master_model_container: 19
2023-06-26 16:25:33,436:INFO:_display_container: 3
2023-06-26 16:25:33,437:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3179, splitter='best')
2023-06-26 16:25:33,437:INFO:create_model() successfully completed......................................
2023-06-26 16:25:33,571:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:33,571:INFO:Creating metrics dataframe
2023-06-26 16:25:33,584:INFO:Initializing SVM - Linear Kernel
2023-06-26 16:25:33,585:INFO:Total runtime is 0.5348102966944377 minutes
2023-06-26 16:25:33,589:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:33,589:INFO:Initializing create_model()
2023-06-26 16:25:33,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:33,590:INFO:Checking exceptions
2023-06-26 16:25:33,590:INFO:Importing libraries
2023-06-26 16:25:33,590:INFO:Copying training dataset
2023-06-26 16:25:33,594:INFO:Defining folds
2023-06-26 16:25:33,594:INFO:Declaring metric variables
2023-06-26 16:25:33,598:INFO:Importing untrained model
2023-06-26 16:25:33,605:INFO:SVM - Linear Kernel Imported successfully
2023-06-26 16:25:33,612:INFO:Starting cross validation
2023-06-26 16:25:33,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:33,776:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:33,782:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:33,789:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:34,024:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:35,210:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:35,263:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:35,404:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:35,623:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:36,745:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:36,797:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-26 16:25:40,535:INFO:Calculating mean and std
2023-06-26 16:25:40,536:INFO:Creating metrics dataframe
2023-06-26 16:25:41,164:INFO:Uploading results into container
2023-06-26 16:25:41,165:INFO:Uploading model into container now
2023-06-26 16:25:41,165:INFO:_master_model_container: 20
2023-06-26 16:25:41,165:INFO:_display_container: 3
2023-06-26 16:25:41,166:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3179, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-26 16:25:41,166:INFO:create_model() successfully completed......................................
2023-06-26 16:25:41,266:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:41,266:INFO:Creating metrics dataframe
2023-06-26 16:25:41,277:INFO:Initializing Ridge Classifier
2023-06-26 16:25:41,277:INFO:Total runtime is 0.6629964868227641 minutes
2023-06-26 16:25:41,281:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:41,282:INFO:Initializing create_model()
2023-06-26 16:25:41,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:41,282:INFO:Checking exceptions
2023-06-26 16:25:41,282:INFO:Importing libraries
2023-06-26 16:25:41,282:INFO:Copying training dataset
2023-06-26 16:25:41,287:INFO:Defining folds
2023-06-26 16:25:41,287:INFO:Declaring metric variables
2023-06-26 16:25:41,290:INFO:Importing untrained model
2023-06-26 16:25:41,295:INFO:Ridge Classifier Imported successfully
2023-06-26 16:25:41,302:INFO:Starting cross validation
2023-06-26 16:25:41,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:41,432:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:41,429:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:41,441:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:41,473:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:42,357:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:42,389:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:42,500:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:42,533:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:43,464:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:43,476:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-26 16:25:47,347:INFO:Calculating mean and std
2023-06-26 16:25:47,349:INFO:Creating metrics dataframe
2023-06-26 16:25:47,977:INFO:Uploading results into container
2023-06-26 16:25:47,978:INFO:Uploading model into container now
2023-06-26 16:25:47,979:INFO:_master_model_container: 21
2023-06-26 16:25:47,979:INFO:_display_container: 3
2023-06-26 16:25:47,979:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3179, solver='auto',
                tol=0.0001)
2023-06-26 16:25:47,980:INFO:create_model() successfully completed......................................
2023-06-26 16:25:48,087:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:48,087:INFO:Creating metrics dataframe
2023-06-26 16:25:48,099:INFO:Initializing Random Forest Classifier
2023-06-26 16:25:48,099:INFO:Total runtime is 0.7767100771268209 minutes
2023-06-26 16:25:48,104:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:48,104:INFO:Initializing create_model()
2023-06-26 16:25:48,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:48,105:INFO:Checking exceptions
2023-06-26 16:25:48,105:INFO:Importing libraries
2023-06-26 16:25:48,105:INFO:Copying training dataset
2023-06-26 16:25:48,109:INFO:Defining folds
2023-06-26 16:25:48,110:INFO:Declaring metric variables
2023-06-26 16:25:48,113:INFO:Importing untrained model
2023-06-26 16:25:48,118:INFO:Random Forest Classifier Imported successfully
2023-06-26 16:25:48,164:INFO:Starting cross validation
2023-06-26 16:25:48,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:25:54,355:INFO:Calculating mean and std
2023-06-26 16:25:54,356:INFO:Creating metrics dataframe
2023-06-26 16:25:54,993:INFO:Uploading results into container
2023-06-26 16:25:54,994:INFO:Uploading model into container now
2023-06-26 16:25:54,994:INFO:_master_model_container: 22
2023-06-26 16:25:54,995:INFO:_display_container: 3
2023-06-26 16:25:54,995:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3179, verbose=0, warm_start=False)
2023-06-26 16:25:54,995:INFO:create_model() successfully completed......................................
2023-06-26 16:25:55,094:INFO:SubProcess create_model() end ==================================
2023-06-26 16:25:55,095:INFO:Creating metrics dataframe
2023-06-26 16:25:55,105:INFO:Initializing Quadratic Discriminant Analysis
2023-06-26 16:25:55,105:INFO:Total runtime is 0.893474280834198 minutes
2023-06-26 16:25:55,108:INFO:SubProcess create_model() called ==================================
2023-06-26 16:25:55,109:INFO:Initializing create_model()
2023-06-26 16:25:55,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:25:55,109:INFO:Checking exceptions
2023-06-26 16:25:55,109:INFO:Importing libraries
2023-06-26 16:25:55,109:INFO:Copying training dataset
2023-06-26 16:25:55,114:INFO:Defining folds
2023-06-26 16:25:55,114:INFO:Declaring metric variables
2023-06-26 16:25:55,118:INFO:Importing untrained model
2023-06-26 16:25:55,123:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-26 16:25:55,130:INFO:Starting cross validation
2023-06-26 16:25:55,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:01,286:INFO:Calculating mean and std
2023-06-26 16:26:01,287:INFO:Creating metrics dataframe
2023-06-26 16:26:01,909:INFO:Uploading results into container
2023-06-26 16:26:01,910:INFO:Uploading model into container now
2023-06-26 16:26:01,910:INFO:_master_model_container: 23
2023-06-26 16:26:01,910:INFO:_display_container: 3
2023-06-26 16:26:01,910:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-26 16:26:01,911:INFO:create_model() successfully completed......................................
2023-06-26 16:26:02,010:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:02,010:INFO:Creating metrics dataframe
2023-06-26 16:26:02,021:INFO:Initializing Ada Boost Classifier
2023-06-26 16:26:02,021:INFO:Total runtime is 1.0087352434794108 minutes
2023-06-26 16:26:02,024:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:02,024:INFO:Initializing create_model()
2023-06-26 16:26:02,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:02,025:INFO:Checking exceptions
2023-06-26 16:26:02,025:INFO:Importing libraries
2023-06-26 16:26:02,025:INFO:Copying training dataset
2023-06-26 16:26:02,029:INFO:Defining folds
2023-06-26 16:26:02,029:INFO:Declaring metric variables
2023-06-26 16:26:02,034:INFO:Importing untrained model
2023-06-26 16:26:02,039:INFO:Ada Boost Classifier Imported successfully
2023-06-26 16:26:02,046:INFO:Starting cross validation
2023-06-26 16:26:02,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:07,936:INFO:Calculating mean and std
2023-06-26 16:26:07,937:INFO:Creating metrics dataframe
2023-06-26 16:26:08,575:INFO:Uploading results into container
2023-06-26 16:26:08,576:INFO:Uploading model into container now
2023-06-26 16:26:08,577:INFO:_master_model_container: 24
2023-06-26 16:26:08,577:INFO:_display_container: 3
2023-06-26 16:26:08,578:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3179)
2023-06-26 16:26:08,578:INFO:create_model() successfully completed......................................
2023-06-26 16:26:08,676:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:08,676:INFO:Creating metrics dataframe
2023-06-26 16:26:08,688:INFO:Initializing Gradient Boosting Classifier
2023-06-26 16:26:08,688:INFO:Total runtime is 1.1198496023813884 minutes
2023-06-26 16:26:08,692:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:08,692:INFO:Initializing create_model()
2023-06-26 16:26:08,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:08,692:INFO:Checking exceptions
2023-06-26 16:26:08,692:INFO:Importing libraries
2023-06-26 16:26:08,692:INFO:Copying training dataset
2023-06-26 16:26:08,698:INFO:Defining folds
2023-06-26 16:26:08,699:INFO:Declaring metric variables
2023-06-26 16:26:08,705:INFO:Importing untrained model
2023-06-26 16:26:08,709:INFO:Gradient Boosting Classifier Imported successfully
2023-06-26 16:26:08,716:INFO:Starting cross validation
2023-06-26 16:26:08,717:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:14,855:INFO:Calculating mean and std
2023-06-26 16:26:14,856:INFO:Creating metrics dataframe
2023-06-26 16:26:15,501:INFO:Uploading results into container
2023-06-26 16:26:15,502:INFO:Uploading model into container now
2023-06-26 16:26:15,502:INFO:_master_model_container: 25
2023-06-26 16:26:15,502:INFO:_display_container: 3
2023-06-26 16:26:15,502:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3179, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-26 16:26:15,502:INFO:create_model() successfully completed......................................
2023-06-26 16:26:15,600:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:15,600:INFO:Creating metrics dataframe
2023-06-26 16:26:15,613:INFO:Initializing Linear Discriminant Analysis
2023-06-26 16:26:15,613:INFO:Total runtime is 1.2352648735046388 minutes
2023-06-26 16:26:15,618:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:15,619:INFO:Initializing create_model()
2023-06-26 16:26:15,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:15,619:INFO:Checking exceptions
2023-06-26 16:26:15,619:INFO:Importing libraries
2023-06-26 16:26:15,620:INFO:Copying training dataset
2023-06-26 16:26:15,624:INFO:Defining folds
2023-06-26 16:26:15,624:INFO:Declaring metric variables
2023-06-26 16:26:15,627:INFO:Importing untrained model
2023-06-26 16:26:15,633:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:26:15,640:INFO:Starting cross validation
2023-06-26 16:26:15,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:21,593:INFO:Calculating mean and std
2023-06-26 16:26:21,594:INFO:Creating metrics dataframe
2023-06-26 16:26:22,237:INFO:Uploading results into container
2023-06-26 16:26:22,237:INFO:Uploading model into container now
2023-06-26 16:26:22,238:INFO:_master_model_container: 26
2023-06-26 16:26:22,238:INFO:_display_container: 3
2023-06-26 16:26:22,239:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:26:22,239:INFO:create_model() successfully completed......................................
2023-06-26 16:26:22,340:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:22,341:INFO:Creating metrics dataframe
2023-06-26 16:26:22,354:INFO:Initializing Extra Trees Classifier
2023-06-26 16:26:22,354:INFO:Total runtime is 1.3476230263710023 minutes
2023-06-26 16:26:22,359:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:22,359:INFO:Initializing create_model()
2023-06-26 16:26:22,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:22,360:INFO:Checking exceptions
2023-06-26 16:26:22,360:INFO:Importing libraries
2023-06-26 16:26:22,360:INFO:Copying training dataset
2023-06-26 16:26:22,366:INFO:Defining folds
2023-06-26 16:26:22,366:INFO:Declaring metric variables
2023-06-26 16:26:22,370:INFO:Importing untrained model
2023-06-26 16:26:22,375:INFO:Extra Trees Classifier Imported successfully
2023-06-26 16:26:22,383:INFO:Starting cross validation
2023-06-26 16:26:22,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:28,562:INFO:Calculating mean and std
2023-06-26 16:26:28,563:INFO:Creating metrics dataframe
2023-06-26 16:26:29,195:INFO:Uploading results into container
2023-06-26 16:26:29,195:INFO:Uploading model into container now
2023-06-26 16:26:29,196:INFO:_master_model_container: 27
2023-06-26 16:26:29,196:INFO:_display_container: 3
2023-06-26 16:26:29,196:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3179, verbose=0, warm_start=False)
2023-06-26 16:26:29,196:INFO:create_model() successfully completed......................................
2023-06-26 16:26:29,293:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:29,293:INFO:Creating metrics dataframe
2023-06-26 16:26:29,308:INFO:Initializing Extreme Gradient Boosting
2023-06-26 16:26:29,308:INFO:Total runtime is 1.463526765505473 minutes
2023-06-26 16:26:29,312:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:29,313:INFO:Initializing create_model()
2023-06-26 16:26:29,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:29,313:INFO:Checking exceptions
2023-06-26 16:26:29,313:INFO:Importing libraries
2023-06-26 16:26:29,314:INFO:Copying training dataset
2023-06-26 16:26:29,319:INFO:Defining folds
2023-06-26 16:26:29,319:INFO:Declaring metric variables
2023-06-26 16:26:29,323:INFO:Importing untrained model
2023-06-26 16:26:29,328:INFO:Extreme Gradient Boosting Imported successfully
2023-06-26 16:26:29,337:INFO:Starting cross validation
2023-06-26 16:26:29,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:35,190:INFO:Calculating mean and std
2023-06-26 16:26:35,192:INFO:Creating metrics dataframe
2023-06-26 16:26:35,824:INFO:Uploading results into container
2023-06-26 16:26:35,825:INFO:Uploading model into container now
2023-06-26 16:26:35,825:INFO:_master_model_container: 28
2023-06-26 16:26:35,826:INFO:_display_container: 3
2023-06-26 16:26:35,827:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-26 16:26:35,827:INFO:create_model() successfully completed......................................
2023-06-26 16:26:35,925:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:35,925:INFO:Creating metrics dataframe
2023-06-26 16:26:35,937:INFO:Initializing Light Gradient Boosting Machine
2023-06-26 16:26:35,938:INFO:Total runtime is 1.5740249037742615 minutes
2023-06-26 16:26:35,942:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:35,942:INFO:Initializing create_model()
2023-06-26 16:26:35,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:35,943:INFO:Checking exceptions
2023-06-26 16:26:35,943:INFO:Importing libraries
2023-06-26 16:26:35,943:INFO:Copying training dataset
2023-06-26 16:26:35,947:INFO:Defining folds
2023-06-26 16:26:35,948:INFO:Declaring metric variables
2023-06-26 16:26:35,953:INFO:Importing untrained model
2023-06-26 16:26:35,957:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-26 16:26:35,967:INFO:Starting cross validation
2023-06-26 16:26:35,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:42,075:INFO:Calculating mean and std
2023-06-26 16:26:42,076:INFO:Creating metrics dataframe
2023-06-26 16:26:42,704:INFO:Uploading results into container
2023-06-26 16:26:42,706:INFO:Uploading model into container now
2023-06-26 16:26:42,707:INFO:_master_model_container: 29
2023-06-26 16:26:42,707:INFO:_display_container: 3
2023-06-26 16:26:42,707:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3179, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-26 16:26:42,707:INFO:create_model() successfully completed......................................
2023-06-26 16:26:42,807:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:42,807:INFO:Creating metrics dataframe
2023-06-26 16:26:42,820:INFO:Initializing Dummy Classifier
2023-06-26 16:26:42,820:INFO:Total runtime is 1.688712763786316 minutes
2023-06-26 16:26:42,824:INFO:SubProcess create_model() called ==================================
2023-06-26 16:26:42,824:INFO:Initializing create_model()
2023-06-26 16:26:42,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E75996E980>, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:42,824:INFO:Checking exceptions
2023-06-26 16:26:42,824:INFO:Importing libraries
2023-06-26 16:26:42,824:INFO:Copying training dataset
2023-06-26 16:26:42,829:INFO:Defining folds
2023-06-26 16:26:42,829:INFO:Declaring metric variables
2023-06-26 16:26:42,833:INFO:Importing untrained model
2023-06-26 16:26:42,838:INFO:Dummy Classifier Imported successfully
2023-06-26 16:26:42,845:INFO:Starting cross validation
2023-06-26 16:26:42,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:26:43,026:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:43,035:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:43,036:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:43,067:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:44,042:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:44,070:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:44,076:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:44,101:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:45,000:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:45,015:WARNING:c:\Users\king\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-26 16:26:48,755:INFO:Calculating mean and std
2023-06-26 16:26:48,756:INFO:Creating metrics dataframe
2023-06-26 16:26:49,383:INFO:Uploading results into container
2023-06-26 16:26:49,384:INFO:Uploading model into container now
2023-06-26 16:26:49,385:INFO:_master_model_container: 30
2023-06-26 16:26:49,385:INFO:_display_container: 3
2023-06-26 16:26:49,385:INFO:DummyClassifier(constant=None, random_state=3179, strategy='prior')
2023-06-26 16:26:49,385:INFO:create_model() successfully completed......................................
2023-06-26 16:26:49,486:INFO:SubProcess create_model() end ==================================
2023-06-26 16:26:49,486:INFO:Creating metrics dataframe
2023-06-26 16:26:49,511:INFO:Initializing create_model()
2023-06-26 16:26:49,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:26:49,511:INFO:Checking exceptions
2023-06-26 16:26:49,514:INFO:Importing libraries
2023-06-26 16:26:49,515:INFO:Copying training dataset
2023-06-26 16:26:49,518:INFO:Defining folds
2023-06-26 16:26:49,519:INFO:Declaring metric variables
2023-06-26 16:26:49,519:INFO:Importing untrained model
2023-06-26 16:26:49,519:INFO:Declaring custom model
2023-06-26 16:26:49,519:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:26:49,520:INFO:Cross validation set to False
2023-06-26 16:26:49,520:INFO:Fitting Model
2023-06-26 16:26:50,200:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:26:50,200:INFO:create_model() successfully completed......................................
2023-06-26 16:26:50,327:INFO:_master_model_container: 30
2023-06-26 16:26:50,328:INFO:_display_container: 3
2023-06-26 16:26:50,328:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:26:50,328:INFO:compare_models() successfully completed......................................
2023-06-26 16:28:47,484:INFO:Initializing create_model()
2023-06-26 16:28:47,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-26 16:28:47,485:INFO:Checking exceptions
2023-06-26 16:28:47,499:INFO:Importing libraries
2023-06-26 16:28:47,499:INFO:Copying training dataset
2023-06-26 16:28:47,503:INFO:Defining folds
2023-06-26 16:28:47,504:INFO:Declaring metric variables
2023-06-26 16:28:47,507:INFO:Importing untrained model
2023-06-26 16:28:47,511:INFO:Linear Discriminant Analysis Imported successfully
2023-06-26 16:28:47,519:INFO:Starting cross validation
2023-06-26 16:28:47,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-26 16:28:57,361:INFO:Calculating mean and std
2023-06-26 16:28:57,362:INFO:Creating metrics dataframe
2023-06-26 16:28:57,367:INFO:Finalizing model
2023-06-26 16:28:58,313:INFO:Uploading results into container
2023-06-26 16:28:58,314:INFO:Uploading model into container now
2023-06-26 16:28:58,330:INFO:_master_model_container: 31
2023-06-26 16:28:58,331:INFO:_display_container: 4
2023-06-26 16:28:58,335:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-26 16:28:58,335:INFO:create_model() successfully completed......................................
2023-06-26 16:28:58,560:INFO:Initializing predict_model()
2023-06-26 16:28:58,560:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E75996E170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E75B2A3400>)
2023-06-26 16:28:58,560:INFO:Checking exceptions
2023-06-26 16:28:58,560:INFO:Preloading libraries
2023-06-26 16:28:58,562:INFO:Set up data.
2023-06-26 16:28:58,566:INFO:Set up index.
